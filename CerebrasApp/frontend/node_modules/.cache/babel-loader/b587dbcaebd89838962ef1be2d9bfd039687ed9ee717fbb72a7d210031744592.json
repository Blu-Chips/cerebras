{"ast":null,"code":"import _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { callAll, isEqual, isString } from '@zag-js/utils';\nimport { isActiveElement, getActiveElement, getDocument } from '@zag-js/dom-query';\n\n// src/merge-props.ts\nvar clsx = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return args.map(str => {\n    var _str$trim;\n    return str === null || str === void 0 || (_str$trim = str.trim) === null || _str$trim === void 0 ? void 0 : _str$trim.call(str);\n  }).filter(Boolean).join(\" \");\n};\nvar CSS_REGEX = /((?:--)?(?:\\w+-?)+)\\s*:\\s*([^;]*)/g;\nvar serialize = style => {\n  const res = {};\n  let match;\n  while (match = CSS_REGEX.exec(style)) {\n    res[match[1]] = match[2];\n  }\n  return res;\n};\nvar css = (a, b) => {\n  if (isString(a)) {\n    if (isString(b)) return \"\".concat(a, \";\").concat(b);\n    a = serialize(a);\n  } else if (isString(b)) {\n    b = serialize(b);\n  }\n  return Object.assign({}, a !== null && a !== void 0 ? a : {}, b !== null && b !== void 0 ? b : {});\n};\nfunction mergeProps() {\n  let result = {};\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  for (let props of args) {\n    if (!props) continue;\n    for (let key in result) {\n      if (key.startsWith(\"on\") && typeof result[key] === \"function\" && typeof props[key] === \"function\") {\n        result[key] = callAll(props[key], result[key]);\n        continue;\n      }\n      if (key === \"className\" || key === \"class\") {\n        result[key] = clsx(result[key], props[key]);\n        continue;\n      }\n      if (key === \"style\") {\n        result[key] = css(result[key], props[key]);\n        continue;\n      }\n      result[key] = props[key] !== void 0 ? props[key] : result[key];\n    }\n    for (let key in props) {\n      if (result[key] === void 0) {\n        result[key] = props[key];\n      }\n    }\n    const symbols = Object.getOwnPropertySymbols(props);\n    for (let symbol of symbols) {\n      result[symbol] = props[symbol];\n    }\n  }\n  return result;\n}\nfunction memo(getDeps, fn, opts) {\n  let deps = [];\n  let result;\n  return depArgs => {\n    var _opts$onChange;\n    const newDeps = getDeps(depArgs);\n    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => !isEqual(deps[index], dep));\n    if (!depsChanged) return result;\n    deps = newDeps;\n    result = fn(newDeps, depArgs);\n    opts === null || opts === void 0 || (_opts$onChange = opts.onChange) === null || _opts$onChange === void 0 || _opts$onChange.call(opts, result);\n    return result;\n  };\n}\n\n// src/create-machine.ts\nfunction createGuards() {\n  return {\n    and: function () {\n      for (var _len3 = arguments.length, guards = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        guards[_key3] = arguments[_key3];\n      }\n      return function andGuard(params) {\n        return guards.every(str => params.guard(str));\n      };\n    },\n    or: function () {\n      for (var _len4 = arguments.length, guards = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        guards[_key4] = arguments[_key4];\n      }\n      return function orGuard(params) {\n        return guards.some(str => params.guard(str));\n      };\n    },\n    not: guard => {\n      return function notGuard(params) {\n        return !params.guard(guard);\n      };\n    }\n  };\n}\nfunction createMachine(config) {\n  return config;\n}\nfunction setup() {\n  return {\n    guards: createGuards(),\n    createMachine: config => {\n      return createMachine(config);\n    },\n    choose: transitions => {\n      return function chooseFn(_ref) {\n        var _choose;\n        let {\n          choose\n        } = _ref;\n        return (_choose = choose(transitions)) === null || _choose === void 0 ? void 0 : _choose.actions;\n      };\n    }\n  };\n}\n\n// src/types.ts\nvar MachineStatus = /* @__PURE__ */(MachineStatus2 => {\n  MachineStatus2[\"NotStarted\"] = \"Not Started\";\n  MachineStatus2[\"Started\"] = \"Started\";\n  MachineStatus2[\"Stopped\"] = \"Stopped\";\n  return MachineStatus2;\n})(MachineStatus || {});\nvar INIT_STATE = \"__init__\";\nfunction createScope(props) {\n  const getRootNode = () => {\n    var _props$getRootNode, _props$getRootNode2;\n    return (_props$getRootNode = (_props$getRootNode2 = props.getRootNode) === null || _props$getRootNode2 === void 0 ? void 0 : _props$getRootNode2.call(props)) !== null && _props$getRootNode !== void 0 ? _props$getRootNode : document;\n  };\n  const getDoc = () => getDocument(getRootNode());\n  const getWin = () => {\n    var _getDoc$defaultView;\n    return (_getDoc$defaultView = getDoc().defaultView) !== null && _getDoc$defaultView !== void 0 ? _getDoc$defaultView : window;\n  };\n  const getActiveElementFn = () => getActiveElement(getRootNode());\n  const getById = id => getRootNode().getElementById(id);\n  return _objectSpread(_objectSpread({}, props), {}, {\n    getRootNode,\n    getDoc,\n    getWin,\n    getActiveElement: getActiveElementFn,\n    isActiveElement,\n    getById\n  });\n}\nexport { INIT_STATE, MachineStatus, createGuards, createMachine, createScope, memo, mergeProps, setup };","map":{"version":3,"names":["callAll","isEqual","isString","isActiveElement","getActiveElement","getDocument","clsx","_len","arguments","length","args","Array","_key","map","str","_str$trim","trim","call","filter","Boolean","join","CSS_REGEX","serialize","style","res","match","exec","css","a","b","concat","Object","assign","mergeProps","result","_len2","_key2","props","key","startsWith","symbols","getOwnPropertySymbols","symbol","memo","getDeps","fn","opts","deps","depArgs","_opts$onChange","newDeps","depsChanged","some","dep","index","onChange","createGuards","and","_len3","guards","_key3","andGuard","params","every","guard","or","_len4","_key4","orGuard","not","notGuard","createMachine","config","setup","choose","transitions","chooseFn","_ref","_choose","actions","MachineStatus","MachineStatus2","INIT_STATE","createScope","getRootNode","_props$getRootNode","_props$getRootNode2","document","getDoc","getWin","_getDoc$defaultView","defaultView","window","getActiveElementFn","getById","id","getElementById","_objectSpread"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@zag-js/core/dist/index.mjs"],"sourcesContent":["import { callAll, isEqual, isString } from '@zag-js/utils';\nimport { isActiveElement, getActiveElement, getDocument } from '@zag-js/dom-query';\n\n// src/merge-props.ts\nvar clsx = (...args) => args.map((str) => str?.trim?.()).filter(Boolean).join(\" \");\nvar CSS_REGEX = /((?:--)?(?:\\w+-?)+)\\s*:\\s*([^;]*)/g;\nvar serialize = (style) => {\n  const res = {};\n  let match;\n  while (match = CSS_REGEX.exec(style)) {\n    res[match[1]] = match[2];\n  }\n  return res;\n};\nvar css = (a, b) => {\n  if (isString(a)) {\n    if (isString(b)) return `${a};${b}`;\n    a = serialize(a);\n  } else if (isString(b)) {\n    b = serialize(b);\n  }\n  return Object.assign({}, a ?? {}, b ?? {});\n};\nfunction mergeProps(...args) {\n  let result = {};\n  for (let props of args) {\n    if (!props) continue;\n    for (let key in result) {\n      if (key.startsWith(\"on\") && typeof result[key] === \"function\" && typeof props[key] === \"function\") {\n        result[key] = callAll(props[key], result[key]);\n        continue;\n      }\n      if (key === \"className\" || key === \"class\") {\n        result[key] = clsx(result[key], props[key]);\n        continue;\n      }\n      if (key === \"style\") {\n        result[key] = css(result[key], props[key]);\n        continue;\n      }\n      result[key] = props[key] !== void 0 ? props[key] : result[key];\n    }\n    for (let key in props) {\n      if (result[key] === void 0) {\n        result[key] = props[key];\n      }\n    }\n    const symbols = Object.getOwnPropertySymbols(props);\n    for (let symbol of symbols) {\n      result[symbol] = props[symbol];\n    }\n  }\n  return result;\n}\nfunction memo(getDeps, fn, opts) {\n  let deps = [];\n  let result;\n  return (depArgs) => {\n    const newDeps = getDeps(depArgs);\n    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index) => !isEqual(deps[index], dep));\n    if (!depsChanged) return result;\n    deps = newDeps;\n    result = fn(newDeps, depArgs);\n    opts?.onChange?.(result);\n    return result;\n  };\n}\n\n// src/create-machine.ts\nfunction createGuards() {\n  return {\n    and: (...guards) => {\n      return function andGuard(params) {\n        return guards.every((str) => params.guard(str));\n      };\n    },\n    or: (...guards) => {\n      return function orGuard(params) {\n        return guards.some((str) => params.guard(str));\n      };\n    },\n    not: (guard) => {\n      return function notGuard(params) {\n        return !params.guard(guard);\n      };\n    }\n  };\n}\nfunction createMachine(config) {\n  return config;\n}\nfunction setup() {\n  return {\n    guards: createGuards(),\n    createMachine: (config) => {\n      return createMachine(config);\n    },\n    choose: (transitions) => {\n      return function chooseFn({ choose }) {\n        return choose(transitions)?.actions;\n      };\n    }\n  };\n}\n\n// src/types.ts\nvar MachineStatus = /* @__PURE__ */ ((MachineStatus2) => {\n  MachineStatus2[\"NotStarted\"] = \"Not Started\";\n  MachineStatus2[\"Started\"] = \"Started\";\n  MachineStatus2[\"Stopped\"] = \"Stopped\";\n  return MachineStatus2;\n})(MachineStatus || {});\nvar INIT_STATE = \"__init__\";\nfunction createScope(props) {\n  const getRootNode = () => props.getRootNode?.() ?? document;\n  const getDoc = () => getDocument(getRootNode());\n  const getWin = () => getDoc().defaultView ?? window;\n  const getActiveElementFn = () => getActiveElement(getRootNode());\n  const getById = (id) => getRootNode().getElementById(id);\n  return {\n    ...props,\n    getRootNode,\n    getDoc,\n    getWin,\n    getActiveElement: getActiveElementFn,\n    isActiveElement,\n    getById\n  };\n}\n\nexport { INIT_STATE, MachineStatus, createGuards, createMachine, createScope, memo, mergeProps, setup };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}