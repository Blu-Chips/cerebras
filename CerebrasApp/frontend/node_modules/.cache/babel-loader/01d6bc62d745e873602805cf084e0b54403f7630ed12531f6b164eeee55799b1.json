{"ast":null,"code":"import _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createAnatomy } from '@zag-js/anatomy';\nimport { raf, setElementValue, trackElementRect, queryAll, trackPointerMove, trackFormControl, getRelativePoint, dispatchInputValueEvent, dataAttr, isLeftClick, isModifierKey, getEventPoint, ariaAttr, getEventStep, getEventKey } from '@zag-js/dom-query';\nimport { setValueAtIndex, pick, getValuePercent, isEqual, createSplitProps, snapValueToStep, clampValue, getValueRanges, getNextStepValue, getPreviousStepValue, getPercentValue, getClosestValueIndex, isValueWithinRange, first, last, toPx, getValueTransformer } from '@zag-js/utils';\nimport { createMachine, memo } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\n\n// src/slider.anatomy.ts\nvar anatomy = createAnatomy(\"slider\").parts(\"root\", \"label\", \"thumb\", \"valueText\", \"track\", \"range\", \"control\", \"markerGroup\", \"marker\", \"draggingIndicator\");\nvar parts = anatomy.build();\nvar getRootId = ctx => {\n  var _ctx$ids$root, _ctx$ids;\n  return (_ctx$ids$root = (_ctx$ids = ctx.ids) === null || _ctx$ids === void 0 ? void 0 : _ctx$ids.root) !== null && _ctx$ids$root !== void 0 ? _ctx$ids$root : \"slider:\".concat(ctx.id);\n};\nvar getThumbId = (ctx, index) => {\n  var _ctx$ids$thumb, _ctx$ids2, _ctx$ids2$thumb;\n  return (_ctx$ids$thumb = (_ctx$ids2 = ctx.ids) === null || _ctx$ids2 === void 0 || (_ctx$ids2$thumb = _ctx$ids2.thumb) === null || _ctx$ids2$thumb === void 0 ? void 0 : _ctx$ids2$thumb.call(_ctx$ids2, index)) !== null && _ctx$ids$thumb !== void 0 ? _ctx$ids$thumb : \"slider:\".concat(ctx.id, \":thumb:\").concat(index);\n};\nvar getHiddenInputId = (ctx, index) => {\n  var _ctx$ids$hiddenInput, _ctx$ids3, _ctx$ids3$hiddenInput;\n  return (_ctx$ids$hiddenInput = (_ctx$ids3 = ctx.ids) === null || _ctx$ids3 === void 0 || (_ctx$ids3$hiddenInput = _ctx$ids3.hiddenInput) === null || _ctx$ids3$hiddenInput === void 0 ? void 0 : _ctx$ids3$hiddenInput.call(_ctx$ids3, index)) !== null && _ctx$ids$hiddenInput !== void 0 ? _ctx$ids$hiddenInput : \"slider:\".concat(ctx.id, \":input:\").concat(index);\n};\nvar getControlId = ctx => {\n  var _ctx$ids$control, _ctx$ids4;\n  return (_ctx$ids$control = (_ctx$ids4 = ctx.ids) === null || _ctx$ids4 === void 0 ? void 0 : _ctx$ids4.control) !== null && _ctx$ids$control !== void 0 ? _ctx$ids$control : \"slider:\".concat(ctx.id, \":control\");\n};\nvar getTrackId = ctx => {\n  var _ctx$ids$track, _ctx$ids5;\n  return (_ctx$ids$track = (_ctx$ids5 = ctx.ids) === null || _ctx$ids5 === void 0 ? void 0 : _ctx$ids5.track) !== null && _ctx$ids$track !== void 0 ? _ctx$ids$track : \"slider:\".concat(ctx.id, \":track\");\n};\nvar getRangeId = ctx => {\n  var _ctx$ids$range, _ctx$ids6;\n  return (_ctx$ids$range = (_ctx$ids6 = ctx.ids) === null || _ctx$ids6 === void 0 ? void 0 : _ctx$ids6.range) !== null && _ctx$ids$range !== void 0 ? _ctx$ids$range : \"slider:\".concat(ctx.id, \":range\");\n};\nvar getLabelId = ctx => {\n  var _ctx$ids$label, _ctx$ids7;\n  return (_ctx$ids$label = (_ctx$ids7 = ctx.ids) === null || _ctx$ids7 === void 0 ? void 0 : _ctx$ids7.label) !== null && _ctx$ids$label !== void 0 ? _ctx$ids$label : \"slider:\".concat(ctx.id, \":label\");\n};\nvar getValueTextId = ctx => {\n  var _ctx$ids$valueText, _ctx$ids8;\n  return (_ctx$ids$valueText = (_ctx$ids8 = ctx.ids) === null || _ctx$ids8 === void 0 ? void 0 : _ctx$ids8.valueText) !== null && _ctx$ids$valueText !== void 0 ? _ctx$ids$valueText : \"slider:\".concat(ctx.id, \":value-text\");\n};\nvar getMarkerId = (ctx, value) => {\n  var _ctx$ids$marker, _ctx$ids9, _ctx$ids9$marker;\n  return (_ctx$ids$marker = (_ctx$ids9 = ctx.ids) === null || _ctx$ids9 === void 0 || (_ctx$ids9$marker = _ctx$ids9.marker) === null || _ctx$ids9$marker === void 0 ? void 0 : _ctx$ids9$marker.call(_ctx$ids9, value)) !== null && _ctx$ids$marker !== void 0 ? _ctx$ids$marker : \"slider:\".concat(ctx.id, \":marker:\").concat(value);\n};\nvar getRootEl = ctx => ctx.getById(getRootId(ctx));\nvar getThumbEl = (ctx, index) => ctx.getById(getThumbId(ctx, index));\nvar getThumbEls = ctx => queryAll(getControlEl(ctx), \"[role=slider]\");\nvar getFirstThumbEl = ctx => getThumbEls(ctx)[0];\nvar getHiddenInputEl = (ctx, index) => ctx.getById(getHiddenInputId(ctx, index));\nvar getControlEl = ctx => ctx.getById(getControlId(ctx));\nvar getPointValue = (params, point) => {\n  const {\n    prop,\n    scope\n  } = params;\n  const controlEl = getControlEl(scope);\n  if (!controlEl) return;\n  const relativePoint = getRelativePoint(point, controlEl);\n  const percent = relativePoint.getPercentValue({\n    orientation: prop(\"orientation\"),\n    dir: prop(\"dir\"),\n    inverted: {\n      y: true\n    }\n  });\n  return getPercentValue(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n};\nvar dispatchChangeEvent = (ctx, value) => {\n  value.forEach((value2, index) => {\n    const inputEl = getHiddenInputEl(ctx, index);\n    if (!inputEl) return;\n    dispatchInputValueEvent(inputEl, {\n      value: value2\n    });\n  });\n};\nvar getOffsetRect = el => {\n  var _el$offsetLeft, _el$offsetTop, _el$offsetWidth, _el$offsetHeight;\n  return {\n    left: (_el$offsetLeft = el === null || el === void 0 ? void 0 : el.offsetLeft) !== null && _el$offsetLeft !== void 0 ? _el$offsetLeft : 0,\n    top: (_el$offsetTop = el === null || el === void 0 ? void 0 : el.offsetTop) !== null && _el$offsetTop !== void 0 ? _el$offsetTop : 0,\n    width: (_el$offsetWidth = el === null || el === void 0 ? void 0 : el.offsetWidth) !== null && _el$offsetWidth !== void 0 ? _el$offsetWidth : 0,\n    height: (_el$offsetHeight = el === null || el === void 0 ? void 0 : el.offsetHeight) !== null && _el$offsetHeight !== void 0 ? _el$offsetHeight : 0\n  };\n};\nfunction getBounds(value) {\n  const firstValue = value[0];\n  const lastThumb = value[value.length - 1];\n  return [firstValue, lastThumb];\n}\nfunction getRangeOffsets(params) {\n  const {\n    prop,\n    computed\n  } = params;\n  const valuePercent = computed(\"valuePercent\");\n  const [firstPercent, lastPercent] = getBounds(valuePercent);\n  if (valuePercent.length === 1) {\n    if (prop(\"origin\") === \"center\") {\n      const isNegative = valuePercent[0] < 50;\n      const start = isNegative ? \"\".concat(valuePercent[0], \"%\") : \"50%\";\n      const end = isNegative ? \"50%\" : \"\".concat(100 - valuePercent[0], \"%\");\n      return {\n        start,\n        end\n      };\n    }\n    if (prop(\"origin\") === \"end\") {\n      return {\n        start: \"\".concat(lastPercent, \"%\"),\n        end: \"0%\"\n      };\n    }\n    return {\n      start: \"0%\",\n      end: \"\".concat(100 - lastPercent, \"%\")\n    };\n  }\n  return {\n    start: \"\".concat(firstPercent, \"%\"),\n    end: \"\".concat(100 - lastPercent, \"%\")\n  };\n}\nfunction getRangeStyle(params) {\n  const {\n    computed\n  } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  if (isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\"\n    };\n  }\n  return {\n    position: \"absolute\",\n    [isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\"\n  };\n}\nfunction getVerticalThumbOffset(params, value) {\n  var _context$get;\n  const {\n    context,\n    prop\n  } = params;\n  const {\n    height = 0\n  } = (_context$get = context.get(\"thumbSize\")) !== null && _context$get !== void 0 ? _context$get : {};\n  const getValue = getValueTransformer([prop(\"min\"), prop(\"max\")], [-height / 2, height / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getHorizontalThumbOffset(params, value) {\n  var _context$get2;\n  const {\n    computed,\n    context,\n    prop\n  } = params;\n  const {\n    width = 0\n  } = (_context$get2 = context.get(\"thumbSize\")) !== null && _context$get2 !== void 0 ? _context$get2 : {};\n  const isRtl = computed(\"isRtl\");\n  if (isRtl) {\n    const getValue2 = getValueTransformer([prop(\"max\"), prop(\"min\")], [-width / 2, width / 2]);\n    return -1 * parseFloat(getValue2(value).toFixed(2));\n  }\n  const getValue = getValueTransformer([prop(\"min\"), prop(\"max\")], [-width / 2, width / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getOffset(params, percent, value) {\n  const {\n    computed,\n    prop\n  } = params;\n  if (prop(\"thumbAlignment\") === \"center\") return \"\".concat(percent, \"%\");\n  const offset = computed(\"isVertical\") ? getVerticalThumbOffset(params, value) : getHorizontalThumbOffset(params, value);\n  return \"calc(\".concat(percent, \"% - \").concat(offset, \"px)\");\n}\nfunction getThumbOffset(params, value) {\n  const {\n    prop\n  } = params;\n  const percent = getValuePercent(value, prop(\"min\"), prop(\"max\")) * 100;\n  return getOffset(params, percent, value);\n}\nfunction getVisibility(params) {\n  const {\n    computed,\n    prop\n  } = params;\n  let visibility = \"visible\";\n  if (prop(\"thumbAlignment\") === \"contain\" && !computed(\"hasMeasuredThumbSize\")) {\n    visibility = \"hidden\";\n  }\n  return visibility;\n}\nfunction getThumbStyle(params, index) {\n  const {\n    computed\n  } = params;\n  const placementProp = computed(\"isVertical\") ? \"bottom\" : \"insetInlineStart\";\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: \"var(--slider-thumb-offset-\".concat(index, \")\")\n  };\n}\nfunction getControlStyle() {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\"\n  };\n}\nfunction getRootStyle(params) {\n  const {\n    context,\n    computed\n  } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  const range = getRangeOffsets(params);\n  const thumbSize = context.get(\"thumbSize\");\n  const offsetStyles = context.get(\"value\").reduce((styles, value, index) => {\n    const offset = getThumbOffset(params, value);\n    return _objectSpread(_objectSpread({}, styles), {}, {\n      [\"--slider-thumb-offset-\".concat(index)]: offset\n    });\n  }, {});\n  return _objectSpread(_objectSpread({}, offsetStyles), {}, {\n    \"--slider-thumb-width\": toPx(thumbSize === null || thumbSize === void 0 ? void 0 : thumbSize.width),\n    \"--slider-thumb-height\": toPx(thumbSize === null || thumbSize === void 0 ? void 0 : thumbSize.height),\n    \"--slider-thumb-transform\": isVertical ? \"translateY(50%)\" : isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end\n  });\n}\nfunction getMarkerStyle(params, value) {\n  const {\n    computed\n  } = params;\n  const isHorizontal = computed(\"isHorizontal\");\n  const isRtl = computed(\"isRtl\");\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    [isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset(params, value),\n    translate: \"var(--translate-x) var(--translate-y)\",\n    \"--translate-x\": isHorizontal ? isRtl ? \"50%\" : \"-50%\" : \"0%\",\n    \"--translate-y\": !isHorizontal ? \"50%\" : \"0%\"\n  };\n}\nfunction getMarkerGroupStyle() {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\"\n  };\n}\nfunction normalizeValues(params, nextValues) {\n  return nextValues.map((value, index) => {\n    return constrainValue(params, value, index);\n  });\n}\nfunction getRangeAtIndex(params, index) {\n  const {\n    context,\n    prop\n  } = params;\n  const step = prop(\"step\") * prop(\"minStepsBetweenThumbs\");\n  return getValueRanges(context.get(\"value\"), prop(\"min\"), prop(\"max\"), step)[index];\n}\nfunction constrainValue(params, value, index) {\n  const {\n    prop\n  } = params;\n  const range = getRangeAtIndex(params, index);\n  const snapValue = snapValueToStep(value, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  return clampValue(snapValue, range.min, range.max);\n}\nfunction decrement(params, index, step) {\n  const {\n    context,\n    prop\n  } = params;\n  const idx = index !== null && index !== void 0 ? index : context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = getPreviousStepValue(idx, _objectSpread(_objectSpread({}, range), {}, {\n    step: step !== null && step !== void 0 ? step : prop(\"step\"),\n    values: context.get(\"value\")\n  }));\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction increment(params, index, step) {\n  const {\n    context,\n    prop\n  } = params;\n  const idx = index !== null && index !== void 0 ? index : context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = getNextStepValue(idx, _objectSpread(_objectSpread({}, range), {}, {\n    step: step !== null && step !== void 0 ? step : prop(\"step\"),\n    values: context.get(\"value\")\n  }));\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction getClosestIndex(params, pointValue) {\n  const {\n    context\n  } = params;\n  return getClosestValueIndex(context.get(\"value\"), pointValue);\n}\n\n// src/slider.connect.ts\nfunction connect(service, normalize2) {\n  const {\n    state,\n    send,\n    context,\n    prop,\n    computed,\n    scope\n  } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const ariaLabelledBy = prop(\"aria-labelledby\");\n  const sliderValue = context.get(\"value\");\n  const focusedIndex = context.get(\"focusedIndex\");\n  const focused = state.matches(\"focus\");\n  const dragging = state.matches(\"dragging\");\n  const disabled = computed(\"isDisabled\");\n  const invalid = prop(\"invalid\");\n  const interactive = computed(\"isInteractive\");\n  const isHorizontal = prop(\"orientation\") === \"horizontal\";\n  const isVertical = prop(\"orientation\") === \"vertical\";\n  function getValuePercentFn(value) {\n    return getValuePercent(value, prop(\"min\"), prop(\"max\"));\n  }\n  function getPercentValueFn(percent) {\n    return getPercentValue(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  }\n  return {\n    value: sliderValue,\n    dragging,\n    focused,\n    setValue(value) {\n      send({\n        type: \"SET_VALUE\",\n        value\n      });\n    },\n    getThumbValue(index) {\n      return sliderValue[index];\n    },\n    setThumbValue(index, value) {\n      send({\n        type: \"SET_VALUE\",\n        index,\n        value\n      });\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index]);\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent);\n      send({\n        type: \"SET_VALUE\",\n        index,\n        value\n      });\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(service, index).min;\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(service, index).max;\n    },\n    increment(index) {\n      send({\n        type: \"INCREMENT\",\n        index\n      });\n    },\n    decrement(index) {\n      send({\n        type: \"DECREMENT\",\n        index\n      });\n    },\n    focus() {\n      if (!interactive) return;\n      send({\n        type: \"FOCUS\",\n        index: 0\n      });\n    },\n    getLabelProps() {\n      return normalize2.label(_objectSpread(_objectSpread({}, parts.label.attrs), {}, {\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope, 0),\n        onClick(event) {\n          var _getFirstThumbEl;\n          if (!interactive) return;\n          event.preventDefault();\n          (_getFirstThumbEl = getFirstThumbEl(scope)) === null || _getFirstThumbEl === void 0 || _getFirstThumbEl.focus();\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      }));\n    },\n    getRootProps() {\n      return normalize2.element(_objectSpread(_objectSpread({}, parts.root.attrs), {}, {\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: getRootId(scope),\n        dir: prop(\"dir\"),\n        style: getRootStyle(service)\n      }));\n    },\n    getValueTextProps() {\n      return normalize2.element(_objectSpread(_objectSpread({}, parts.valueText.attrs), {}, {\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: getValueTextId(scope)\n      }));\n    },\n    getTrackProps() {\n      return normalize2.element(_objectSpread(_objectSpread({}, parts.track.attrs), {}, {\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": dataAttr(focused),\n        style: {\n          position: \"relative\"\n        }\n      }));\n    },\n    getThumbProps(props2) {\n      var _prop;\n      const {\n        index = 0,\n        name\n      } = props2;\n      const value = sliderValue[index];\n      const range = getRangeAtIndex(service, index);\n      const valueText = (_prop = prop(\"getAriaValueText\")) === null || _prop === void 0 ? void 0 : _prop({\n        value,\n        index\n      });\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel;\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy;\n      return normalize2.element(_objectSpread(_objectSpread({}, parts.thumb.attrs), {}, {\n        dir: prop(\"dir\"),\n        \"data-index\": index,\n        \"data-name\": name,\n        id: getThumbId(scope, index),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": dataAttr(focused && focusedIndex === index),\n        \"data-dragging\": dataAttr(dragging && focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": ariaAttr(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy !== null && _ariaLabelledBy !== void 0 ? _ariaLabelledBy : getLabelId(scope),\n        \"aria-orientation\": prop(\"orientation\"),\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? void 0 : 0,\n        style: getThumbStyle(service, index),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!isLeftClick(event)) return;\n          send({\n            type: \"THUMB_POINTER_DOWN\",\n            index\n          });\n          event.stopPropagation();\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({\n            type: \"BLUR\"\n          });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({\n            type: \"FOCUS\",\n            index\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = getEventStep(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_INC\",\n                step,\n                src: \"ArrowUp\"\n              });\n            },\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_DEC\",\n                step,\n                src: \"ArrowDown\"\n              });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_DEC\",\n                step,\n                src: \"ArrowLeft\"\n              });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_INC\",\n                step,\n                src: \"ArrowRight\"\n              });\n            },\n            PageUp() {\n              send({\n                type: \"ARROW_INC\",\n                step,\n                src: \"PageUp\"\n              });\n            },\n            PageDown() {\n              send({\n                type: \"ARROW_DEC\",\n                step,\n                src: \"PageDown\"\n              });\n            },\n            Home() {\n              send({\n                type: \"HOME\"\n              });\n            },\n            End() {\n              send({\n                type: \"END\"\n              });\n            }\n          };\n          const key = getEventKey(event, {\n            dir: prop(\"dir\"),\n            orientation: prop(\"orientation\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      }));\n    },\n    getHiddenInputProps(props2) {\n      const {\n        index = 0,\n        name\n      } = props2;\n      return normalize2.input({\n        name: name !== null && name !== void 0 ? name : prop(\"name\") ? prop(\"name\") + (sliderValue.length > 1 ? \"[]\" : \"\") : void 0,\n        form: prop(\"form\"),\n        type: \"text\",\n        hidden: true,\n        defaultValue: sliderValue[index],\n        id: getHiddenInputId(scope, index)\n      });\n    },\n    getRangeProps() {\n      return normalize2.element(_objectSpread(_objectSpread({\n        id: getRangeId(scope)\n      }, parts.range.attrs), {}, {\n        dir: prop(\"dir\"),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        style: getRangeStyle(service)\n      }));\n    },\n    getControlProps() {\n      return normalize2.element(_objectSpread(_objectSpread({}, parts.control.attrs), {}, {\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        style: getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!isLeftClick(event)) return;\n          if (isModifierKey(event)) return;\n          const point = getEventPoint(event);\n          send({\n            type: \"POINTER_DOWN\",\n            point\n          });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      }));\n    },\n    getMarkerGroupProps() {\n      return normalize2.element(_objectSpread(_objectSpread({}, parts.markerGroup.attrs), {}, {\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-orientation\": prop(\"orientation\"),\n        style: getMarkerGroupStyle()\n      }));\n    },\n    getMarkerProps(props2) {\n      const style = getMarkerStyle(service, props2.value);\n      let markerState;\n      if (props2.value < first(sliderValue)) {\n        markerState = \"under-value\";\n      } else if (props2.value > last(sliderValue)) {\n        markerState = \"over-value\";\n      } else {\n        markerState = \"at-value\";\n      }\n      return normalize2.element(_objectSpread(_objectSpread({}, parts.marker.attrs), {}, {\n        id: getMarkerId(scope, props2.value),\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-value\": props2.value,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-state\": markerState,\n        style\n      }));\n    },\n    getDraggingIndicatorProps(props2) {\n      const {\n        index = 0\n      } = props2;\n      const isDragging = index === focusedIndex && dragging;\n      return normalize2.element(_objectSpread(_objectSpread({}, parts.draggingIndicator.attrs), {}, {\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        hidden: !isDragging,\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-state\": isDragging ? \"open\" : \"closed\",\n        style: getThumbStyle(service, index)\n      }));\n    }\n  };\n}\nvar isEqualSize = (a, b) => {\n  return (a === null || a === void 0 ? void 0 : a.width) === (b === null || b === void 0 ? void 0 : b.width) && (a === null || a === void 0 ? void 0 : a.height) === (b === null || b === void 0 ? void 0 : b.height);\n};\nvar normalize = (value, min, max, step, minStepsBetweenThumbs) => {\n  const ranges = getValueRanges(value, min, max, minStepsBetweenThumbs * step);\n  return ranges.map(range => {\n    const snapValue = snapValueToStep(range.value, range.min, range.max, step);\n    const rangeValue = clampValue(snapValue, range.min, range.max);\n    if (!isValueWithinRange(rangeValue, min, max)) {\n      throw new Error(\"[zag-js/slider] The configured `min`, `max`, `step` or `minStepsBetweenThumbs` values are invalid\");\n    }\n    return rangeValue;\n  });\n};\nvar machine = createMachine({\n  props(_ref) {\n    var _props2$min, _props2$max, _props2$step, _props2$defaultValue, _props2$minStepsBetwe;\n    let {\n      props: props2\n    } = _ref;\n    const min = (_props2$min = props2.min) !== null && _props2$min !== void 0 ? _props2$min : 0;\n    const max = (_props2$max = props2.max) !== null && _props2$max !== void 0 ? _props2$max : 100;\n    const step = (_props2$step = props2.step) !== null && _props2$step !== void 0 ? _props2$step : 1;\n    const defaultValue = (_props2$defaultValue = props2.defaultValue) !== null && _props2$defaultValue !== void 0 ? _props2$defaultValue : [min];\n    const minStepsBetweenThumbs = (_props2$minStepsBetwe = props2.minStepsBetweenThumbs) !== null && _props2$minStepsBetwe !== void 0 ? _props2$minStepsBetwe : 0;\n    return _objectSpread(_objectSpread({\n      dir: \"ltr\",\n      thumbAlignment: \"contain\",\n      origin: \"start\",\n      orientation: \"horizontal\",\n      minStepsBetweenThumbs\n    }, props2), {}, {\n      defaultValue: normalize(defaultValue, min, max, step, minStepsBetweenThumbs),\n      value: props2.value ? normalize(props2.value, min, max, step, minStepsBetweenThumbs) : void 0,\n      max,\n      step,\n      min\n    });\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context(_ref2) {\n    let {\n      prop,\n      bindable,\n      getContext\n    } = _ref2;\n    return {\n      thumbSize: bindable(() => ({\n        defaultValue: prop(\"thumbSize\") || null\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual,\n        hash(a) {\n          return a.join(\",\");\n        },\n        onChange(value) {\n          var _prop2;\n          (_prop2 = prop(\"onValueChange\")) === null || _prop2 === void 0 || _prop2({\n            value\n          });\n        }\n      })),\n      focusedIndex: bindable(() => ({\n        defaultValue: -1,\n        onChange(value) {\n          var _prop3;\n          const ctx = getContext();\n          (_prop3 = prop(\"onFocusChange\")) === null || _prop3 === void 0 || _prop3({\n            focusedIndex: value,\n            value: ctx.get(\"value\")\n          });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isHorizontal: _ref3 => {\n      let {\n        prop\n      } = _ref3;\n      return prop(\"orientation\") === \"horizontal\";\n    },\n    isVertical: _ref4 => {\n      let {\n        prop\n      } = _ref4;\n      return prop(\"orientation\") === \"vertical\";\n    },\n    isRtl: _ref5 => {\n      let {\n        prop\n      } = _ref5;\n      return prop(\"orientation\") === \"horizontal\" && prop(\"dir\") === \"rtl\";\n    },\n    isDisabled: _ref6 => {\n      let {\n        context,\n        prop\n      } = _ref6;\n      return !!prop(\"disabled\") || context.get(\"fieldsetDisabled\");\n    },\n    isInteractive: _ref7 => {\n      let {\n        prop,\n        computed\n      } = _ref7;\n      return !(prop(\"readOnly\") || computed(\"isDisabled\"));\n    },\n    hasMeasuredThumbSize: _ref8 => {\n      let {\n        context\n      } = _ref8;\n      return context.get(\"thumbSize\") != null;\n    },\n    valuePercent: memo(_ref9 => {\n      let {\n        context,\n        prop\n      } = _ref9;\n      return [context.get(\"value\"), prop(\"min\"), prop(\"max\")];\n    }, _ref0 => {\n      let [value, min, max] = _ref0;\n      return value.map(value2 => 100 * getValuePercent(value2, min, max));\n    })\n  },\n  watch(_ref1) {\n    let {\n      track,\n      action,\n      context\n    } = _ref1;\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncInputElements\", \"dispatchChangeEvent\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackThumbSize\"],\n  on: {\n    SET_VALUE: [{\n      guard: \"hasIndex\",\n      actions: [\"setValueAtIndex\"]\n    }, {\n      actions: [\"setValue\"]\n    }],\n    INCREMENT: {\n      actions: [\"incrementThumbAtIndex\"]\n    },\n    DECREMENT: {\n      actions: [\"decrementThumbAtIndex\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        FOCUS: {\n          target: \"focus\",\n          actions: [\"setFocusedIndex\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        }\n      }\n    },\n    focus: {\n      entry: [\"focusActiveThumb\"],\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        },\n        ARROW_DEC: {\n          actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        ARROW_INC: {\n          actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        HOME: {\n          actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"]\n        },\n        END: {\n          actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"]\n        },\n        BLUR: {\n          target: \"idle\",\n          actions: [\"clearFocusedIndex\"]\n        }\n      }\n    },\n    dragging: {\n      entry: [\"focusActiveThumb\"],\n      effects: [\"trackPointerMove\"],\n      on: {\n        POINTER_UP: {\n          target: \"focus\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        POINTER_MOVE: {\n          actions: [\"setPointerValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      hasIndex: _ref10 => {\n        let {\n          event\n        } = _ref10;\n        return event.index != null;\n      }\n    },\n    effects: {\n      trackFormControlState(_ref11) {\n        let {\n          context,\n          scope\n        } = _ref11;\n        return trackFormControl(getRootEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      trackPointerMove(_ref12) {\n        let {\n          scope,\n          send\n        } = _ref12;\n        return trackPointerMove(scope.getDoc(), {\n          onPointerMove(info) {\n            send({\n              type: \"POINTER_MOVE\",\n              point: info.point\n            });\n          },\n          onPointerUp() {\n            send({\n              type: \"POINTER_UP\"\n            });\n          }\n        });\n      },\n      trackThumbSize(_ref13) {\n        let {\n          context,\n          scope,\n          prop\n        } = _ref13;\n        if (prop(\"thumbAlignment\") !== \"contain\" || prop(\"thumbSize\")) return;\n        return trackElementRect(getThumbEls(scope), {\n          box: \"border-box\",\n          measure(el) {\n            return getOffsetRect(el);\n          },\n          onEntry(_ref14) {\n            let {\n              rects\n            } = _ref14;\n            if (rects.length === 0) return;\n            const size = pick(rects[0], [\"width\", \"height\"]);\n            if (isEqualSize(context.get(\"thumbSize\"), size)) return;\n            context.set(\"thumbSize\", size);\n          }\n        });\n      }\n    },\n    actions: {\n      dispatchChangeEvent(_ref15) {\n        let {\n          context,\n          scope\n        } = _ref15;\n        dispatchChangeEvent(scope, context.get(\"value\"));\n      },\n      syncInputElements(_ref16) {\n        let {\n          context,\n          scope\n        } = _ref16;\n        context.get(\"value\").forEach((value, index) => {\n          const inputEl = getHiddenInputEl(scope, index);\n          setElementValue(inputEl, value.toString());\n        });\n      },\n      invokeOnChangeEnd(_ref17) {\n        let {\n          prop,\n          context\n        } = _ref17;\n        queueMicrotask(() => {\n          var _prop4;\n          (_prop4 = prop(\"onValueChangeEnd\")) === null || _prop4 === void 0 || _prop4({\n            value: context.get(\"value\")\n          });\n        });\n      },\n      setClosestThumbIndex(params) {\n        const {\n          context,\n          event\n        } = params;\n        const pointValue = getPointValue(params, event.point);\n        if (pointValue == null) return;\n        const focusedIndex = getClosestIndex(params, pointValue);\n        context.set(\"focusedIndex\", focusedIndex);\n      },\n      setFocusedIndex(_ref18) {\n        let {\n          context,\n          event\n        } = _ref18;\n        context.set(\"focusedIndex\", event.index);\n      },\n      clearFocusedIndex(_ref19) {\n        let {\n          context\n        } = _ref19;\n        context.set(\"focusedIndex\", -1);\n      },\n      setPointerValue(params) {\n        queueMicrotask(() => {\n          const {\n            context,\n            event\n          } = params;\n          const pointValue = getPointValue(params, event.point);\n          if (pointValue == null) return;\n          const focusedIndex = context.get(\"focusedIndex\");\n          const value = constrainValue(params, pointValue, focusedIndex);\n          context.set(\"value\", prev => setValueAtIndex(prev, focusedIndex, value));\n        });\n      },\n      focusActiveThumb(_ref20) {\n        let {\n          scope,\n          context\n        } = _ref20;\n        raf(() => {\n          const thumbEl = getThumbEl(scope, context.get(\"focusedIndex\"));\n          thumbEl === null || thumbEl === void 0 || thumbEl.focus({\n            preventScroll: true\n          });\n        });\n      },\n      decrementThumbAtIndex(params) {\n        const {\n          context,\n          event\n        } = params;\n        const value = decrement(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      incrementThumbAtIndex(params) {\n        const {\n          context,\n          event\n        } = params;\n        const value = increment(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      setFocusedThumbToMin(params) {\n        const {\n          context\n        } = params;\n        const index = context.get(\"focusedIndex\");\n        const {\n          min\n        } = getRangeAtIndex(params, index);\n        context.set(\"value\", prev => setValueAtIndex(prev, index, min));\n      },\n      setFocusedThumbToMax(params) {\n        const {\n          context\n        } = params;\n        const index = context.get(\"focusedIndex\");\n        const {\n          max\n        } = getRangeAtIndex(params, index);\n        context.set(\"value\", prev => setValueAtIndex(prev, index, max));\n      },\n      setValueAtIndex(params) {\n        const {\n          context,\n          event\n        } = params;\n        const value = constrainValue(params, event.value, event.index);\n        context.set(\"value\", prev => setValueAtIndex(prev, event.index, value));\n      },\n      setValue(params) {\n        const {\n          context,\n          event\n        } = params;\n        const value = normalizeValues(params, event.value);\n        context.set(\"value\", value);\n      }\n    }\n  }\n});\nvar props = createProps()([\"aria-label\", \"aria-labelledby\", \"dir\", \"disabled\", \"form\", \"getAriaValueText\", \"getRootNode\", \"id\", \"ids\", \"invalid\", \"max\", \"min\", \"minStepsBetweenThumbs\", \"name\", \"onFocusChange\", \"onValueChange\", \"onValueChangeEnd\", \"orientation\", \"origin\", \"readOnly\", \"step\", \"thumbAlignment\", \"thumbAlignment\", \"thumbSize\", \"value\", \"defaultValue\"]);\nvar splitProps = createSplitProps(props);\nvar thumbProps = createProps()([\"index\", \"name\"]);\nvar splitThumbProps = createSplitProps(thumbProps);\nexport { anatomy, connect, machine, props, splitProps, splitThumbProps, thumbProps };","map":{"version":3,"names":["createAnatomy","raf","setElementValue","trackElementRect","queryAll","trackPointerMove","trackFormControl","getRelativePoint","dispatchInputValueEvent","dataAttr","isLeftClick","isModifierKey","getEventPoint","ariaAttr","getEventStep","getEventKey","setValueAtIndex","pick","getValuePercent","isEqual","createSplitProps","snapValueToStep","clampValue","getValueRanges","getNextStepValue","getPreviousStepValue","getPercentValue","getClosestValueIndex","isValueWithinRange","first","last","toPx","getValueTransformer","createMachine","memo","createProps","anatomy","parts","build","getRootId","ctx","_ctx$ids$root","_ctx$ids","ids","root","concat","id","getThumbId","index","_ctx$ids$thumb","_ctx$ids2","_ctx$ids2$thumb","thumb","call","getHiddenInputId","_ctx$ids$hiddenInput","_ctx$ids3","_ctx$ids3$hiddenInput","hiddenInput","getControlId","_ctx$ids$control","_ctx$ids4","control","getTrackId","_ctx$ids$track","_ctx$ids5","track","getRangeId","_ctx$ids$range","_ctx$ids6","range","getLabelId","_ctx$ids$label","_ctx$ids7","label","getValueTextId","_ctx$ids$valueText","_ctx$ids8","valueText","getMarkerId","value","_ctx$ids$marker","_ctx$ids9","_ctx$ids9$marker","marker","getRootEl","getById","getThumbEl","getThumbEls","getControlEl","getFirstThumbEl","getHiddenInputEl","getPointValue","params","point","prop","scope","controlEl","relativePoint","percent","orientation","dir","inverted","y","dispatchChangeEvent","forEach","value2","inputEl","getOffsetRect","el","_el$offsetLeft","_el$offsetTop","_el$offsetWidth","_el$offsetHeight","left","offsetLeft","top","offsetTop","width","offsetWidth","height","offsetHeight","getBounds","firstValue","lastThumb","length","getRangeOffsets","computed","valuePercent","firstPercent","lastPercent","isNegative","start","end","getRangeStyle","isVertical","isRtl","position","bottom","getVerticalThumbOffset","_context$get","context","get","getValue","parseFloat","toFixed","getHorizontalThumbOffset","_context$get2","getValue2","getOffset","offset","getThumbOffset","getVisibility","visibility","getThumbStyle","placementProp","transform","getControlStyle","touchAction","userSelect","WebkitUserSelect","getRootStyle","thumbSize","offsetStyles","reduce","styles","_objectSpread","getMarkerStyle","isHorizontal","pointerEvents","translate","getMarkerGroupStyle","normalizeValues","nextValues","map","constrainValue","getRangeAtIndex","step","snapValue","min","max","decrement","idx","values","increment","getClosestIndex","pointValue","connect","service","normalize2","state","send","ariaLabel","ariaLabelledBy","sliderValue","focusedIndex","focused","matches","dragging","disabled","invalid","interactive","getValuePercentFn","getPercentValueFn","setValue","type","getThumbValue","setThumbValue","getThumbPercent","setThumbPercent","getThumbMin","getThumbMax","focus","getLabelProps","attrs","htmlFor","onClick","event","_getFirstThumbEl","preventDefault","style","getRootProps","element","getValueTextProps","getTrackProps","getThumbProps","props2","_prop","name","_ariaLabel","Array","isArray","_ariaLabelledBy","draggable","role","tabIndex","onPointerDown","stopPropagation","onBlur","onFocus","onKeyDown","defaultPrevented","keyMap","ArrowUp","src","ArrowDown","ArrowLeft","ArrowRight","PageUp","PageDown","Home","End","key","exec","getHiddenInputProps","input","form","hidden","defaultValue","getRangeProps","getControlProps","getMarkerGroupProps","markerGroup","getMarkerProps","markerState","getDraggingIndicatorProps","isDragging","draggingIndicator","isEqualSize","a","b","normalize","minStepsBetweenThumbs","ranges","rangeValue","Error","machine","props","_ref","_props2$min","_props2$max","_props2$step","_props2$defaultValue","_props2$minStepsBetwe","thumbAlignment","origin","initialState","_ref2","bindable","getContext","hash","join","onChange","_prop2","_prop3","fieldsetDisabled","_ref3","_ref4","_ref5","isDisabled","_ref6","isInteractive","_ref7","hasMeasuredThumbSize","_ref8","_ref9","_ref0","watch","_ref1","action","effects","on","SET_VALUE","guard","actions","INCREMENT","DECREMENT","states","idle","POINTER_DOWN","target","FOCUS","THUMB_POINTER_DOWN","entry","ARROW_DEC","ARROW_INC","HOME","END","BLUR","POINTER_UP","POINTER_MOVE","implementations","guards","hasIndex","_ref10","trackFormControlState","_ref11","onFieldsetDisabledChange","set","onFormReset","initial","_ref12","getDoc","onPointerMove","info","onPointerUp","trackThumbSize","_ref13","box","measure","onEntry","_ref14","rects","size","_ref15","syncInputElements","_ref16","toString","invokeOnChangeEnd","_ref17","queueMicrotask","_prop4","setClosestThumbIndex","setFocusedIndex","_ref18","clearFocusedIndex","_ref19","setPointerValue","prev","focusActiveThumb","_ref20","thumbEl","preventScroll","decrementThumbAtIndex","incrementThumbAtIndex","setFocusedThumbToMin","setFocusedThumbToMax","splitProps","thumbProps","splitThumbProps"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@zag-js/slider/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, setElementValue, trackElementRect, queryAll, trackPointerMove, trackFormControl, getRelativePoint, dispatchInputValueEvent, dataAttr, isLeftClick, isModifierKey, getEventPoint, ariaAttr, getEventStep, getEventKey } from '@zag-js/dom-query';\nimport { setValueAtIndex, pick, getValuePercent, isEqual, createSplitProps, snapValueToStep, clampValue, getValueRanges, getNextStepValue, getPreviousStepValue, getPercentValue, getClosestValueIndex, isValueWithinRange, first, last, toPx, getValueTransformer } from '@zag-js/utils';\nimport { createMachine, memo } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\n\n// src/slider.anatomy.ts\nvar anatomy = createAnatomy(\"slider\").parts(\n  \"root\",\n  \"label\",\n  \"thumb\",\n  \"valueText\",\n  \"track\",\n  \"range\",\n  \"control\",\n  \"markerGroup\",\n  \"marker\",\n  \"draggingIndicator\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `slider:${ctx.id}`;\nvar getThumbId = (ctx, index) => ctx.ids?.thumb?.(index) ?? `slider:${ctx.id}:thumb:${index}`;\nvar getHiddenInputId = (ctx, index) => ctx.ids?.hiddenInput?.(index) ?? `slider:${ctx.id}:input:${index}`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `slider:${ctx.id}:control`;\nvar getTrackId = (ctx) => ctx.ids?.track ?? `slider:${ctx.id}:track`;\nvar getRangeId = (ctx) => ctx.ids?.range ?? `slider:${ctx.id}:range`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `slider:${ctx.id}:label`;\nvar getValueTextId = (ctx) => ctx.ids?.valueText ?? `slider:${ctx.id}:value-text`;\nvar getMarkerId = (ctx, value) => ctx.ids?.marker?.(value) ?? `slider:${ctx.id}:marker:${value}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getThumbEl = (ctx, index) => ctx.getById(getThumbId(ctx, index));\nvar getThumbEls = (ctx) => queryAll(getControlEl(ctx), \"[role=slider]\");\nvar getFirstThumbEl = (ctx) => getThumbEls(ctx)[0];\nvar getHiddenInputEl = (ctx, index) => ctx.getById(getHiddenInputId(ctx, index));\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getPointValue = (params, point) => {\n  const { prop, scope } = params;\n  const controlEl = getControlEl(scope);\n  if (!controlEl) return;\n  const relativePoint = getRelativePoint(point, controlEl);\n  const percent = relativePoint.getPercentValue({\n    orientation: prop(\"orientation\"),\n    dir: prop(\"dir\"),\n    inverted: { y: true }\n  });\n  return getPercentValue(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n};\nvar dispatchChangeEvent = (ctx, value) => {\n  value.forEach((value2, index) => {\n    const inputEl = getHiddenInputEl(ctx, index);\n    if (!inputEl) return;\n    dispatchInputValueEvent(inputEl, { value: value2 });\n  });\n};\nvar getOffsetRect = (el) => ({\n  left: el?.offsetLeft ?? 0,\n  top: el?.offsetTop ?? 0,\n  width: el?.offsetWidth ?? 0,\n  height: el?.offsetHeight ?? 0\n});\nfunction getBounds(value) {\n  const firstValue = value[0];\n  const lastThumb = value[value.length - 1];\n  return [firstValue, lastThumb];\n}\nfunction getRangeOffsets(params) {\n  const { prop, computed } = params;\n  const valuePercent = computed(\"valuePercent\");\n  const [firstPercent, lastPercent] = getBounds(valuePercent);\n  if (valuePercent.length === 1) {\n    if (prop(\"origin\") === \"center\") {\n      const isNegative = valuePercent[0] < 50;\n      const start = isNegative ? `${valuePercent[0]}%` : \"50%\";\n      const end = isNegative ? \"50%\" : `${100 - valuePercent[0]}%`;\n      return { start, end };\n    }\n    if (prop(\"origin\") === \"end\") {\n      return { start: `${lastPercent}%`, end: \"0%\" };\n    }\n    return { start: \"0%\", end: `${100 - lastPercent}%` };\n  }\n  return { start: `${firstPercent}%`, end: `${100 - lastPercent}%` };\n}\nfunction getRangeStyle(params) {\n  const { computed } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  if (isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\"\n    };\n  }\n  return {\n    position: \"absolute\",\n    [isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\"\n  };\n}\nfunction getVerticalThumbOffset(params, value) {\n  const { context, prop } = params;\n  const { height = 0 } = context.get(\"thumbSize\") ?? {};\n  const getValue = getValueTransformer([prop(\"min\"), prop(\"max\")], [-height / 2, height / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getHorizontalThumbOffset(params, value) {\n  const { computed, context, prop } = params;\n  const { width = 0 } = context.get(\"thumbSize\") ?? {};\n  const isRtl = computed(\"isRtl\");\n  if (isRtl) {\n    const getValue2 = getValueTransformer([prop(\"max\"), prop(\"min\")], [-width / 2, width / 2]);\n    return -1 * parseFloat(getValue2(value).toFixed(2));\n  }\n  const getValue = getValueTransformer([prop(\"min\"), prop(\"max\")], [-width / 2, width / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getOffset(params, percent, value) {\n  const { computed, prop } = params;\n  if (prop(\"thumbAlignment\") === \"center\") return `${percent}%`;\n  const offset = computed(\"isVertical\") ? getVerticalThumbOffset(params, value) : getHorizontalThumbOffset(params, value);\n  return `calc(${percent}% - ${offset}px)`;\n}\nfunction getThumbOffset(params, value) {\n  const { prop } = params;\n  const percent = getValuePercent(value, prop(\"min\"), prop(\"max\")) * 100;\n  return getOffset(params, percent, value);\n}\nfunction getVisibility(params) {\n  const { computed, prop } = params;\n  let visibility = \"visible\";\n  if (prop(\"thumbAlignment\") === \"contain\" && !computed(\"hasMeasuredThumbSize\")) {\n    visibility = \"hidden\";\n  }\n  return visibility;\n}\nfunction getThumbStyle(params, index) {\n  const { computed } = params;\n  const placementProp = computed(\"isVertical\") ? \"bottom\" : \"insetInlineStart\";\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: `var(--slider-thumb-offset-${index})`\n  };\n}\nfunction getControlStyle() {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\"\n  };\n}\nfunction getRootStyle(params) {\n  const { context, computed } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  const range = getRangeOffsets(params);\n  const thumbSize = context.get(\"thumbSize\");\n  const offsetStyles = context.get(\"value\").reduce((styles, value, index) => {\n    const offset = getThumbOffset(params, value);\n    return { ...styles, [`--slider-thumb-offset-${index}`]: offset };\n  }, {});\n  return {\n    ...offsetStyles,\n    \"--slider-thumb-width\": toPx(thumbSize?.width),\n    \"--slider-thumb-height\": toPx(thumbSize?.height),\n    \"--slider-thumb-transform\": isVertical ? \"translateY(50%)\" : isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end\n  };\n}\nfunction getMarkerStyle(params, value) {\n  const { computed } = params;\n  const isHorizontal = computed(\"isHorizontal\");\n  const isRtl = computed(\"isRtl\");\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    [isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset(params, value),\n    translate: \"var(--translate-x) var(--translate-y)\",\n    \"--translate-x\": isHorizontal ? isRtl ? \"50%\" : \"-50%\" : \"0%\",\n    \"--translate-y\": !isHorizontal ? \"50%\" : \"0%\"\n  };\n}\nfunction getMarkerGroupStyle() {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\"\n  };\n}\nfunction normalizeValues(params, nextValues) {\n  return nextValues.map((value, index) => {\n    return constrainValue(params, value, index);\n  });\n}\nfunction getRangeAtIndex(params, index) {\n  const { context, prop } = params;\n  const step = prop(\"step\") * prop(\"minStepsBetweenThumbs\");\n  return getValueRanges(context.get(\"value\"), prop(\"min\"), prop(\"max\"), step)[index];\n}\nfunction constrainValue(params, value, index) {\n  const { prop } = params;\n  const range = getRangeAtIndex(params, index);\n  const snapValue = snapValueToStep(value, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  return clampValue(snapValue, range.min, range.max);\n}\nfunction decrement(params, index, step) {\n  const { context, prop } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = getPreviousStepValue(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction increment(params, index, step) {\n  const { context, prop } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = getNextStepValue(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction getClosestIndex(params, pointValue) {\n  const { context } = params;\n  return getClosestValueIndex(context.get(\"value\"), pointValue);\n}\n\n// src/slider.connect.ts\nfunction connect(service, normalize2) {\n  const { state, send, context, prop, computed, scope } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const ariaLabelledBy = prop(\"aria-labelledby\");\n  const sliderValue = context.get(\"value\");\n  const focusedIndex = context.get(\"focusedIndex\");\n  const focused = state.matches(\"focus\");\n  const dragging = state.matches(\"dragging\");\n  const disabled = computed(\"isDisabled\");\n  const invalid = prop(\"invalid\");\n  const interactive = computed(\"isInteractive\");\n  const isHorizontal = prop(\"orientation\") === \"horizontal\";\n  const isVertical = prop(\"orientation\") === \"vertical\";\n  function getValuePercentFn(value) {\n    return getValuePercent(value, prop(\"min\"), prop(\"max\"));\n  }\n  function getPercentValueFn(percent) {\n    return getPercentValue(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  }\n  return {\n    value: sliderValue,\n    dragging,\n    focused,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value });\n    },\n    getThumbValue(index) {\n      return sliderValue[index];\n    },\n    setThumbValue(index, value) {\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index]);\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent);\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(service, index).min;\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(service, index).max;\n    },\n    increment(index) {\n      send({ type: \"INCREMENT\", index });\n    },\n    decrement(index) {\n      send({ type: \"DECREMENT\", index });\n    },\n    focus() {\n      if (!interactive) return;\n      send({ type: \"FOCUS\", index: 0 });\n    },\n    getLabelProps() {\n      return normalize2.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope, 0),\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          getFirstThumbEl(scope)?.focus();\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getRootProps() {\n      return normalize2.element({\n        ...parts.root.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: getRootId(scope),\n        dir: prop(\"dir\"),\n        style: getRootStyle(service)\n      });\n    },\n    getValueTextProps() {\n      return normalize2.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: getValueTextId(scope)\n      });\n    },\n    getTrackProps() {\n      return normalize2.element({\n        ...parts.track.attrs,\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": dataAttr(focused),\n        style: { position: \"relative\" }\n      });\n    },\n    getThumbProps(props2) {\n      const { index = 0, name } = props2;\n      const value = sliderValue[index];\n      const range = getRangeAtIndex(service, index);\n      const valueText = prop(\"getAriaValueText\")?.({ value, index });\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel;\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy;\n      return normalize2.element({\n        ...parts.thumb.attrs,\n        dir: prop(\"dir\"),\n        \"data-index\": index,\n        \"data-name\": name,\n        id: getThumbId(scope, index),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": dataAttr(focused && focusedIndex === index),\n        \"data-dragging\": dataAttr(dragging && focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": ariaAttr(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy ?? getLabelId(scope),\n        \"aria-orientation\": prop(\"orientation\"),\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? void 0 : 0,\n        style: getThumbStyle(service, index),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!isLeftClick(event)) return;\n          send({ type: \"THUMB_POINTER_DOWN\", index });\n          event.stopPropagation();\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"BLUR\" });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"FOCUS\", index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = getEventStep(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowUp\" });\n            },\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowDown\" });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowLeft\" });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowRight\" });\n            },\n            PageUp() {\n              send({ type: \"ARROW_INC\", step, src: \"PageUp\" });\n            },\n            PageDown() {\n              send({ type: \"ARROW_DEC\", step, src: \"PageDown\" });\n            },\n            Home() {\n              send({ type: \"HOME\" });\n            },\n            End() {\n              send({ type: \"END\" });\n            }\n          };\n          const key = getEventKey(event, {\n            dir: prop(\"dir\"),\n            orientation: prop(\"orientation\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      const { index = 0, name } = props2;\n      return normalize2.input({\n        name: name ?? (prop(\"name\") ? prop(\"name\") + (sliderValue.length > 1 ? \"[]\" : \"\") : void 0),\n        form: prop(\"form\"),\n        type: \"text\",\n        hidden: true,\n        defaultValue: sliderValue[index],\n        id: getHiddenInputId(scope, index)\n      });\n    },\n    getRangeProps() {\n      return normalize2.element({\n        id: getRangeId(scope),\n        ...parts.range.attrs,\n        dir: prop(\"dir\"),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        style: getRangeStyle(service)\n      });\n    },\n    getControlProps() {\n      return normalize2.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        style: getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!isLeftClick(event)) return;\n          if (isModifierKey(event)) return;\n          const point = getEventPoint(event);\n          send({ type: \"POINTER_DOWN\", point });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      });\n    },\n    getMarkerGroupProps() {\n      return normalize2.element({\n        ...parts.markerGroup.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-orientation\": prop(\"orientation\"),\n        style: getMarkerGroupStyle()\n      });\n    },\n    getMarkerProps(props2) {\n      const style = getMarkerStyle(service, props2.value);\n      let markerState;\n      if (props2.value < first(sliderValue)) {\n        markerState = \"under-value\";\n      } else if (props2.value > last(sliderValue)) {\n        markerState = \"over-value\";\n      } else {\n        markerState = \"at-value\";\n      }\n      return normalize2.element({\n        ...parts.marker.attrs,\n        id: getMarkerId(scope, props2.value),\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-value\": props2.value,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-state\": markerState,\n        style\n      });\n    },\n    getDraggingIndicatorProps(props2) {\n      const { index = 0 } = props2;\n      const isDragging = index === focusedIndex && dragging;\n      return normalize2.element({\n        ...parts.draggingIndicator.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        hidden: !isDragging,\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-state\": isDragging ? \"open\" : \"closed\",\n        style: getThumbStyle(service, index)\n      });\n    }\n  };\n}\nvar isEqualSize = (a, b) => {\n  return a?.width === b?.width && a?.height === b?.height;\n};\nvar normalize = (value, min, max, step, minStepsBetweenThumbs) => {\n  const ranges = getValueRanges(value, min, max, minStepsBetweenThumbs * step);\n  return ranges.map((range) => {\n    const snapValue = snapValueToStep(range.value, range.min, range.max, step);\n    const rangeValue = clampValue(snapValue, range.min, range.max);\n    if (!isValueWithinRange(rangeValue, min, max)) {\n      throw new Error(\n        \"[zag-js/slider] The configured `min`, `max`, `step` or `minStepsBetweenThumbs` values are invalid\"\n      );\n    }\n    return rangeValue;\n  });\n};\nvar machine = createMachine({\n  props({ props: props2 }) {\n    const min = props2.min ?? 0;\n    const max = props2.max ?? 100;\n    const step = props2.step ?? 1;\n    const defaultValue = props2.defaultValue ?? [min];\n    const minStepsBetweenThumbs = props2.minStepsBetweenThumbs ?? 0;\n    return {\n      dir: \"ltr\",\n      thumbAlignment: \"contain\",\n      origin: \"start\",\n      orientation: \"horizontal\",\n      minStepsBetweenThumbs,\n      ...props2,\n      defaultValue: normalize(defaultValue, min, max, step, minStepsBetweenThumbs),\n      value: props2.value ? normalize(props2.value, min, max, step, minStepsBetweenThumbs) : void 0,\n      max,\n      step,\n      min\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      thumbSize: bindable(() => ({\n        defaultValue: prop(\"thumbSize\") || null\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual,\n        hash(a) {\n          return a.join(\",\");\n        },\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      focusedIndex: bindable(() => ({\n        defaultValue: -1,\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFocusChange\")?.({ focusedIndex: value, value: ctx.get(\"value\") });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\",\n    isVertical: ({ prop }) => prop(\"orientation\") === \"vertical\",\n    isRtl: ({ prop }) => prop(\"orientation\") === \"horizontal\" && prop(\"dir\") === \"rtl\",\n    isDisabled: ({ context, prop }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    isInteractive: ({ prop, computed }) => !(prop(\"readOnly\") || computed(\"isDisabled\")),\n    hasMeasuredThumbSize: ({ context }) => context.get(\"thumbSize\") != null,\n    valuePercent: memo(\n      ({ context, prop }) => [context.get(\"value\"), prop(\"min\"), prop(\"max\")],\n      ([value, min, max]) => value.map((value2) => 100 * getValuePercent(value2, min, max))\n    )\n  },\n  watch({ track, action, context }) {\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncInputElements\", \"dispatchChangeEvent\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackThumbSize\"],\n  on: {\n    SET_VALUE: [\n      {\n        guard: \"hasIndex\",\n        actions: [\"setValueAtIndex\"]\n      },\n      {\n        actions: [\"setValue\"]\n      }\n    ],\n    INCREMENT: {\n      actions: [\"incrementThumbAtIndex\"]\n    },\n    DECREMENT: {\n      actions: [\"decrementThumbAtIndex\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        FOCUS: {\n          target: \"focus\",\n          actions: [\"setFocusedIndex\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        }\n      }\n    },\n    focus: {\n      entry: [\"focusActiveThumb\"],\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        },\n        ARROW_DEC: {\n          actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        ARROW_INC: {\n          actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        HOME: {\n          actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"]\n        },\n        END: {\n          actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"]\n        },\n        BLUR: {\n          target: \"idle\",\n          actions: [\"clearFocusedIndex\"]\n        }\n      }\n    },\n    dragging: {\n      entry: [\"focusActiveThumb\"],\n      effects: [\"trackPointerMove\"],\n      on: {\n        POINTER_UP: {\n          target: \"focus\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        POINTER_MOVE: {\n          actions: [\"setPointerValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      hasIndex: ({ event }) => event.index != null\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return trackFormControl(getRootEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      trackPointerMove({ scope, send }) {\n        return trackPointerMove(scope.getDoc(), {\n          onPointerMove(info) {\n            send({ type: \"POINTER_MOVE\", point: info.point });\n          },\n          onPointerUp() {\n            send({ type: \"POINTER_UP\" });\n          }\n        });\n      },\n      trackThumbSize({ context, scope, prop }) {\n        if (prop(\"thumbAlignment\") !== \"contain\" || prop(\"thumbSize\")) return;\n        return trackElementRect(getThumbEls(scope), {\n          box: \"border-box\",\n          measure(el) {\n            return getOffsetRect(el);\n          },\n          onEntry({ rects }) {\n            if (rects.length === 0) return;\n            const size = pick(rects[0], [\"width\", \"height\"]);\n            if (isEqualSize(context.get(\"thumbSize\"), size)) return;\n            context.set(\"thumbSize\", size);\n          }\n        });\n      }\n    },\n    actions: {\n      dispatchChangeEvent({ context, scope }) {\n        dispatchChangeEvent(scope, context.get(\"value\"));\n      },\n      syncInputElements({ context, scope }) {\n        context.get(\"value\").forEach((value, index) => {\n          const inputEl = getHiddenInputEl(scope, index);\n          setElementValue(inputEl, value.toString());\n        });\n      },\n      invokeOnChangeEnd({ prop, context }) {\n        queueMicrotask(() => {\n          prop(\"onValueChangeEnd\")?.({ value: context.get(\"value\") });\n        });\n      },\n      setClosestThumbIndex(params) {\n        const { context, event } = params;\n        const pointValue = getPointValue(params, event.point);\n        if (pointValue == null) return;\n        const focusedIndex = getClosestIndex(params, pointValue);\n        context.set(\"focusedIndex\", focusedIndex);\n      },\n      setFocusedIndex({ context, event }) {\n        context.set(\"focusedIndex\", event.index);\n      },\n      clearFocusedIndex({ context }) {\n        context.set(\"focusedIndex\", -1);\n      },\n      setPointerValue(params) {\n        queueMicrotask(() => {\n          const { context, event } = params;\n          const pointValue = getPointValue(params, event.point);\n          if (pointValue == null) return;\n          const focusedIndex = context.get(\"focusedIndex\");\n          const value = constrainValue(params, pointValue, focusedIndex);\n          context.set(\"value\", (prev) => setValueAtIndex(prev, focusedIndex, value));\n        });\n      },\n      focusActiveThumb({ scope, context }) {\n        raf(() => {\n          const thumbEl = getThumbEl(scope, context.get(\"focusedIndex\"));\n          thumbEl?.focus({ preventScroll: true });\n        });\n      },\n      decrementThumbAtIndex(params) {\n        const { context, event } = params;\n        const value = decrement(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      incrementThumbAtIndex(params) {\n        const { context, event } = params;\n        const value = increment(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      setFocusedThumbToMin(params) {\n        const { context } = params;\n        const index = context.get(\"focusedIndex\");\n        const { min } = getRangeAtIndex(params, index);\n        context.set(\"value\", (prev) => setValueAtIndex(prev, index, min));\n      },\n      setFocusedThumbToMax(params) {\n        const { context } = params;\n        const index = context.get(\"focusedIndex\");\n        const { max } = getRangeAtIndex(params, index);\n        context.set(\"value\", (prev) => setValueAtIndex(prev, index, max));\n      },\n      setValueAtIndex(params) {\n        const { context, event } = params;\n        const value = constrainValue(params, event.value, event.index);\n        context.set(\"value\", (prev) => setValueAtIndex(prev, event.index, value));\n      },\n      setValue(params) {\n        const { context, event } = params;\n        const value = normalizeValues(params, event.value);\n        context.set(\"value\", value);\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"aria-label\",\n  \"aria-labelledby\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getAriaValueText\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"max\",\n  \"min\",\n  \"minStepsBetweenThumbs\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueChangeEnd\",\n  \"orientation\",\n  \"origin\",\n  \"readOnly\",\n  \"step\",\n  \"thumbAlignment\",\n  \"thumbAlignment\",\n  \"thumbSize\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = createSplitProps(props);\nvar thumbProps = createProps()([\"index\", \"name\"]);\nvar splitThumbProps = createSplitProps(thumbProps);\n\nexport { anatomy, connect, machine, props, splitProps, splitThumbProps, thumbProps };\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,GAAG,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,uBAAuB,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,WAAW,QAAQ,mBAAmB;AAC7P,SAASC,eAAe,EAAEC,IAAI,EAAEC,eAAe,EAAEC,OAAO,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,UAAU,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,oBAAoB,EAAEC,eAAe,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,EAAEC,mBAAmB,QAAQ,eAAe;AACzR,SAASC,aAAa,EAAEC,IAAI,QAAQ,cAAc;AAClD,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AACA,IAAIC,OAAO,GAAGpC,aAAa,CAAC,QAAQ,CAAC,CAACqC,KAAK,CACzC,MAAM,EACN,OAAO,EACP,OAAO,EACP,WAAW,EACX,OAAO,EACP,OAAO,EACP,SAAS,EACT,aAAa,EACb,QAAQ,EACR,mBACF,CAAC;AACD,IAAIA,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC;AAC3B,IAAIC,SAAS,GAAIC,GAAG;EAAA,IAAAC,aAAA,EAAAC,QAAA;EAAA,QAAAD,aAAA,IAAAC,QAAA,GAAKF,GAAG,CAACG,GAAG,cAAAD,QAAA,uBAAPA,QAAA,CAASE,IAAI,cAAAH,aAAA,cAAAA,aAAA,aAAAI,MAAA,CAAcL,GAAG,CAACM,EAAE;AAAA,CAAE;AAC5D,IAAIC,UAAU,GAAGA,CAACP,GAAG,EAAEQ,KAAK;EAAA,IAAAC,cAAA,EAAAC,SAAA,EAAAC,eAAA;EAAA,QAAAF,cAAA,IAAAC,SAAA,GAAKV,GAAG,CAACG,GAAG,cAAAO,SAAA,gBAAAC,eAAA,GAAPD,SAAA,CAASE,KAAK,cAAAD,eAAA,uBAAdA,eAAA,CAAAE,IAAA,CAAAH,SAAA,EAAiBF,KAAK,CAAC,cAAAC,cAAA,cAAAA,cAAA,aAAAJ,MAAA,CAAcL,GAAG,CAACM,EAAE,aAAAD,MAAA,CAAUG,KAAK;AAAA,CAAE;AAC7F,IAAIM,gBAAgB,GAAGA,CAACd,GAAG,EAAEQ,KAAK;EAAA,IAAAO,oBAAA,EAAAC,SAAA,EAAAC,qBAAA;EAAA,QAAAF,oBAAA,IAAAC,SAAA,GAAKhB,GAAG,CAACG,GAAG,cAAAa,SAAA,gBAAAC,qBAAA,GAAPD,SAAA,CAASE,WAAW,cAAAD,qBAAA,uBAApBA,qBAAA,CAAAJ,IAAA,CAAAG,SAAA,EAAuBR,KAAK,CAAC,cAAAO,oBAAA,cAAAA,oBAAA,aAAAV,MAAA,CAAcL,GAAG,CAACM,EAAE,aAAAD,MAAA,CAAUG,KAAK;AAAA,CAAE;AACzG,IAAIW,YAAY,GAAInB,GAAG;EAAA,IAAAoB,gBAAA,EAAAC,SAAA;EAAA,QAAAD,gBAAA,IAAAC,SAAA,GAAKrB,GAAG,CAACG,GAAG,cAAAkB,SAAA,uBAAPA,SAAA,CAASC,OAAO,cAAAF,gBAAA,cAAAA,gBAAA,aAAAf,MAAA,CAAcL,GAAG,CAACM,EAAE;AAAA,CAAU;AAC1E,IAAIiB,UAAU,GAAIvB,GAAG;EAAA,IAAAwB,cAAA,EAAAC,SAAA;EAAA,QAAAD,cAAA,IAAAC,SAAA,GAAKzB,GAAG,CAACG,GAAG,cAAAsB,SAAA,uBAAPA,SAAA,CAASC,KAAK,cAAAF,cAAA,cAAAA,cAAA,aAAAnB,MAAA,CAAcL,GAAG,CAACM,EAAE;AAAA,CAAQ;AACpE,IAAIqB,UAAU,GAAI3B,GAAG;EAAA,IAAA4B,cAAA,EAAAC,SAAA;EAAA,QAAAD,cAAA,IAAAC,SAAA,GAAK7B,GAAG,CAACG,GAAG,cAAA0B,SAAA,uBAAPA,SAAA,CAASC,KAAK,cAAAF,cAAA,cAAAA,cAAA,aAAAvB,MAAA,CAAcL,GAAG,CAACM,EAAE;AAAA,CAAQ;AACpE,IAAIyB,UAAU,GAAI/B,GAAG;EAAA,IAAAgC,cAAA,EAAAC,SAAA;EAAA,QAAAD,cAAA,IAAAC,SAAA,GAAKjC,GAAG,CAACG,GAAG,cAAA8B,SAAA,uBAAPA,SAAA,CAASC,KAAK,cAAAF,cAAA,cAAAA,cAAA,aAAA3B,MAAA,CAAcL,GAAG,CAACM,EAAE;AAAA,CAAQ;AACpE,IAAI6B,cAAc,GAAInC,GAAG;EAAA,IAAAoC,kBAAA,EAAAC,SAAA;EAAA,QAAAD,kBAAA,IAAAC,SAAA,GAAKrC,GAAG,CAACG,GAAG,cAAAkC,SAAA,uBAAPA,SAAA,CAASC,SAAS,cAAAF,kBAAA,cAAAA,kBAAA,aAAA/B,MAAA,CAAcL,GAAG,CAACM,EAAE;AAAA,CAAa;AACjF,IAAIiC,WAAW,GAAGA,CAACvC,GAAG,EAAEwC,KAAK;EAAA,IAAAC,eAAA,EAAAC,SAAA,EAAAC,gBAAA;EAAA,QAAAF,eAAA,IAAAC,SAAA,GAAK1C,GAAG,CAACG,GAAG,cAAAuC,SAAA,gBAAAC,gBAAA,GAAPD,SAAA,CAASE,MAAM,cAAAD,gBAAA,uBAAfA,gBAAA,CAAA9B,IAAA,CAAA6B,SAAA,EAAkBF,KAAK,CAAC,cAAAC,eAAA,cAAAA,eAAA,aAAApC,MAAA,CAAcL,GAAG,CAACM,EAAE,cAAAD,MAAA,CAAWmC,KAAK;AAAA,CAAE;AAChG,IAAIK,SAAS,GAAI7C,GAAG,IAAKA,GAAG,CAAC8C,OAAO,CAAC/C,SAAS,CAACC,GAAG,CAAC,CAAC;AACpD,IAAI+C,UAAU,GAAGA,CAAC/C,GAAG,EAAEQ,KAAK,KAAKR,GAAG,CAAC8C,OAAO,CAACvC,UAAU,CAACP,GAAG,EAAEQ,KAAK,CAAC,CAAC;AACpE,IAAIwC,WAAW,GAAIhD,GAAG,IAAKpC,QAAQ,CAACqF,YAAY,CAACjD,GAAG,CAAC,EAAE,eAAe,CAAC;AACvE,IAAIkD,eAAe,GAAIlD,GAAG,IAAKgD,WAAW,CAAChD,GAAG,CAAC,CAAC,CAAC,CAAC;AAClD,IAAImD,gBAAgB,GAAGA,CAACnD,GAAG,EAAEQ,KAAK,KAAKR,GAAG,CAAC8C,OAAO,CAAChC,gBAAgB,CAACd,GAAG,EAAEQ,KAAK,CAAC,CAAC;AAChF,IAAIyC,YAAY,GAAIjD,GAAG,IAAKA,GAAG,CAAC8C,OAAO,CAAC3B,YAAY,CAACnB,GAAG,CAAC,CAAC;AAC1D,IAAIoD,aAAa,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;EACrC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGH,MAAM;EAC9B,MAAMI,SAAS,GAAGR,YAAY,CAACO,KAAK,CAAC;EACrC,IAAI,CAACC,SAAS,EAAE;EAChB,MAAMC,aAAa,GAAG3F,gBAAgB,CAACuF,KAAK,EAAEG,SAAS,CAAC;EACxD,MAAME,OAAO,GAAGD,aAAa,CAACxE,eAAe,CAAC;IAC5C0E,WAAW,EAAEL,IAAI,CAAC,aAAa,CAAC;IAChCM,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;IAChBO,QAAQ,EAAE;MAAEC,CAAC,EAAE;IAAK;EACtB,CAAC,CAAC;EACF,OAAO7E,eAAe,CAACyE,OAAO,EAAEJ,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,MAAM,CAAC,CAAC;AACzE,CAAC;AACD,IAAIS,mBAAmB,GAAGA,CAAChE,GAAG,EAAEwC,KAAK,KAAK;EACxCA,KAAK,CAACyB,OAAO,CAAC,CAACC,MAAM,EAAE1D,KAAK,KAAK;IAC/B,MAAM2D,OAAO,GAAGhB,gBAAgB,CAACnD,GAAG,EAAEQ,KAAK,CAAC;IAC5C,IAAI,CAAC2D,OAAO,EAAE;IACdnG,uBAAuB,CAACmG,OAAO,EAAE;MAAE3B,KAAK,EAAE0B;IAAO,CAAC,CAAC;EACrD,CAAC,CAAC;AACJ,CAAC;AACD,IAAIE,aAAa,GAAIC,EAAE;EAAA,IAAAC,cAAA,EAAAC,aAAA,EAAAC,eAAA,EAAAC,gBAAA;EAAA,OAAM;IAC3BC,IAAI,GAAAJ,cAAA,GAAED,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEM,UAAU,cAAAL,cAAA,cAAAA,cAAA,GAAI,CAAC;IACzBM,GAAG,GAAAL,aAAA,GAAEF,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEQ,SAAS,cAAAN,aAAA,cAAAA,aAAA,GAAI,CAAC;IACvBO,KAAK,GAAAN,eAAA,GAAEH,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEU,WAAW,cAAAP,eAAA,cAAAA,eAAA,GAAI,CAAC;IAC3BQ,MAAM,GAAAP,gBAAA,GAAEJ,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEY,YAAY,cAAAR,gBAAA,cAAAA,gBAAA,GAAI;EAC9B,CAAC;AAAA,CAAC;AACF,SAASS,SAASA,CAAC1C,KAAK,EAAE;EACxB,MAAM2C,UAAU,GAAG3C,KAAK,CAAC,CAAC,CAAC;EAC3B,MAAM4C,SAAS,GAAG5C,KAAK,CAACA,KAAK,CAAC6C,MAAM,GAAG,CAAC,CAAC;EACzC,OAAO,CAACF,UAAU,EAAEC,SAAS,CAAC;AAChC;AACA,SAASE,eAAeA,CAACjC,MAAM,EAAE;EAC/B,MAAM;IAAEE,IAAI;IAAEgC;EAAS,CAAC,GAAGlC,MAAM;EACjC,MAAMmC,YAAY,GAAGD,QAAQ,CAAC,cAAc,CAAC;EAC7C,MAAM,CAACE,YAAY,EAAEC,WAAW,CAAC,GAAGR,SAAS,CAACM,YAAY,CAAC;EAC3D,IAAIA,YAAY,CAACH,MAAM,KAAK,CAAC,EAAE;IAC7B,IAAI9B,IAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;MAC/B,MAAMoC,UAAU,GAAGH,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE;MACvC,MAAMI,KAAK,GAAGD,UAAU,MAAAtF,MAAA,CAAMmF,YAAY,CAAC,CAAC,CAAC,SAAM,KAAK;MACxD,MAAMK,GAAG,GAAGF,UAAU,GAAG,KAAK,MAAAtF,MAAA,CAAM,GAAG,GAAGmF,YAAY,CAAC,CAAC,CAAC,MAAG;MAC5D,OAAO;QAAEI,KAAK;QAAEC;MAAI,CAAC;IACvB;IACA,IAAItC,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE;MAC5B,OAAO;QAAEqC,KAAK,KAAAvF,MAAA,CAAKqF,WAAW,MAAG;QAAEG,GAAG,EAAE;MAAK,CAAC;IAChD;IACA,OAAO;MAAED,KAAK,EAAE,IAAI;MAAEC,GAAG,KAAAxF,MAAA,CAAK,GAAG,GAAGqF,WAAW;IAAI,CAAC;EACtD;EACA,OAAO;IAAEE,KAAK,KAAAvF,MAAA,CAAKoF,YAAY,MAAG;IAAEI,GAAG,KAAAxF,MAAA,CAAK,GAAG,GAAGqF,WAAW;EAAI,CAAC;AACpE;AACA,SAASI,aAAaA,CAACzC,MAAM,EAAE;EAC7B,MAAM;IAAEkC;EAAS,CAAC,GAAGlC,MAAM;EAC3B,MAAM0C,UAAU,GAAGR,QAAQ,CAAC,YAAY,CAAC;EACzC,MAAMS,KAAK,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC/B,IAAIQ,UAAU,EAAE;IACd,OAAO;MACLE,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,2BAA2B;MACnCtB,GAAG,EAAE;IACP,CAAC;EACH;EACA,OAAO;IACLqB,QAAQ,EAAE,UAAU;IACpB,CAACD,KAAK,GAAG,OAAO,GAAG,MAAM,GAAG,2BAA2B;IACvD,CAACA,KAAK,GAAG,MAAM,GAAG,OAAO,GAAG;EAC9B,CAAC;AACH;AACA,SAASG,sBAAsBA,CAAC9C,MAAM,EAAEb,KAAK,EAAE;EAAA,IAAA4D,YAAA;EAC7C,MAAM;IAAEC,OAAO;IAAE9C;EAAK,CAAC,GAAGF,MAAM;EAChC,MAAM;IAAE2B,MAAM,GAAG;EAAE,CAAC,IAAAoB,YAAA,GAAGC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,cAAAF,YAAA,cAAAA,YAAA,GAAI,CAAC,CAAC;EACrD,MAAMG,QAAQ,GAAG/G,mBAAmB,CAAC,CAAC+D,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAACyB,MAAM,GAAG,CAAC,EAAEA,MAAM,GAAG,CAAC,CAAC,CAAC;EAC3F,OAAOwB,UAAU,CAACD,QAAQ,CAAC/D,KAAK,CAAC,CAACiE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/C;AACA,SAASC,wBAAwBA,CAACrD,MAAM,EAAEb,KAAK,EAAE;EAAA,IAAAmE,aAAA;EAC/C,MAAM;IAAEpB,QAAQ;IAAEc,OAAO;IAAE9C;EAAK,CAAC,GAAGF,MAAM;EAC1C,MAAM;IAAEyB,KAAK,GAAG;EAAE,CAAC,IAAA6B,aAAA,GAAGN,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,cAAAK,aAAA,cAAAA,aAAA,GAAI,CAAC,CAAC;EACpD,MAAMX,KAAK,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC/B,IAAIS,KAAK,EAAE;IACT,MAAMY,SAAS,GAAGpH,mBAAmB,CAAC,CAAC+D,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAACuB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC,CAAC,CAAC;IAC1F,OAAO,CAAC,CAAC,GAAG0B,UAAU,CAACI,SAAS,CAACpE,KAAK,CAAC,CAACiE,OAAO,CAAC,CAAC,CAAC,CAAC;EACrD;EACA,MAAMF,QAAQ,GAAG/G,mBAAmB,CAAC,CAAC+D,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAACuB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC,CAAC,CAAC;EACzF,OAAO0B,UAAU,CAACD,QAAQ,CAAC/D,KAAK,CAAC,CAACiE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/C;AACA,SAASI,SAASA,CAACxD,MAAM,EAAEM,OAAO,EAAEnB,KAAK,EAAE;EACzC,MAAM;IAAE+C,QAAQ;IAAEhC;EAAK,CAAC,GAAGF,MAAM;EACjC,IAAIE,IAAI,CAAC,gBAAgB,CAAC,KAAK,QAAQ,EAAE,UAAAlD,MAAA,CAAUsD,OAAO;EAC1D,MAAMmD,MAAM,GAAGvB,QAAQ,CAAC,YAAY,CAAC,GAAGY,sBAAsB,CAAC9C,MAAM,EAAEb,KAAK,CAAC,GAAGkE,wBAAwB,CAACrD,MAAM,EAAEb,KAAK,CAAC;EACvH,eAAAnC,MAAA,CAAesD,OAAO,UAAAtD,MAAA,CAAOyG,MAAM;AACrC;AACA,SAASC,cAAcA,CAAC1D,MAAM,EAAEb,KAAK,EAAE;EACrC,MAAM;IAAEe;EAAK,CAAC,GAAGF,MAAM;EACvB,MAAMM,OAAO,GAAGjF,eAAe,CAAC8D,KAAK,EAAEe,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG;EACtE,OAAOsD,SAAS,CAACxD,MAAM,EAAEM,OAAO,EAAEnB,KAAK,CAAC;AAC1C;AACA,SAASwE,aAAaA,CAAC3D,MAAM,EAAE;EAC7B,MAAM;IAAEkC,QAAQ;IAAEhC;EAAK,CAAC,GAAGF,MAAM;EACjC,IAAI4D,UAAU,GAAG,SAAS;EAC1B,IAAI1D,IAAI,CAAC,gBAAgB,CAAC,KAAK,SAAS,IAAI,CAACgC,QAAQ,CAAC,sBAAsB,CAAC,EAAE;IAC7E0B,UAAU,GAAG,QAAQ;EACvB;EACA,OAAOA,UAAU;AACnB;AACA,SAASC,aAAaA,CAAC7D,MAAM,EAAE7C,KAAK,EAAE;EACpC,MAAM;IAAE+E;EAAS,CAAC,GAAGlC,MAAM;EAC3B,MAAM8D,aAAa,GAAG5B,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,GAAG,kBAAkB;EAC5E,OAAO;IACL0B,UAAU,EAAED,aAAa,CAAC3D,MAAM,CAAC;IACjC4C,QAAQ,EAAE,UAAU;IACpBmB,SAAS,EAAE,+BAA+B;IAC1C,CAACD,aAAa,gCAAA9G,MAAA,CAAgCG,KAAK;EACrD,CAAC;AACH;AACA,SAAS6G,eAAeA,CAAA,EAAG;EACzB,OAAO;IACLC,WAAW,EAAE,MAAM;IACnBC,UAAU,EAAE,MAAM;IAClBC,gBAAgB,EAAE,MAAM;IACxBvB,QAAQ,EAAE;EACZ,CAAC;AACH;AACA,SAASwB,YAAYA,CAACpE,MAAM,EAAE;EAC5B,MAAM;IAAEgD,OAAO;IAAEd;EAAS,CAAC,GAAGlC,MAAM;EACpC,MAAM0C,UAAU,GAAGR,QAAQ,CAAC,YAAY,CAAC;EACzC,MAAMS,KAAK,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC/B,MAAMzD,KAAK,GAAGwD,eAAe,CAACjC,MAAM,CAAC;EACrC,MAAMqE,SAAS,GAAGrB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC1C,MAAMqB,YAAY,GAAGtB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAACsB,MAAM,CAAC,CAACC,MAAM,EAAErF,KAAK,EAAEhC,KAAK,KAAK;IACzE,MAAMsG,MAAM,GAAGC,cAAc,CAAC1D,MAAM,EAAEb,KAAK,CAAC;IAC5C,OAAAsF,aAAA,CAAAA,aAAA,KAAYD,MAAM;MAAE,0BAAAxH,MAAA,CAA0BG,KAAK,IAAKsG;IAAM;EAChE,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAAgB,aAAA,CAAAA,aAAA,KACKH,YAAY;IACf,sBAAsB,EAAEpI,IAAI,CAACmI,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE5C,KAAK,CAAC;IAC9C,uBAAuB,EAAEvF,IAAI,CAACmI,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE1C,MAAM,CAAC;IAChD,0BAA0B,EAAEe,UAAU,GAAG,iBAAiB,GAAGC,KAAK,GAAG,iBAAiB,GAAG,kBAAkB;IAC3G,sBAAsB,EAAElE,KAAK,CAAC8D,KAAK;IACnC,oBAAoB,EAAE9D,KAAK,CAAC+D;EAAG;AAEnC;AACA,SAASkC,cAAcA,CAAC1E,MAAM,EAAEb,KAAK,EAAE;EACrC,MAAM;IAAE+C;EAAS,CAAC,GAAGlC,MAAM;EAC3B,MAAM2E,YAAY,GAAGzC,QAAQ,CAAC,cAAc,CAAC;EAC7C,MAAMS,KAAK,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAC/B,OAAO;IACL0B,UAAU,EAAED,aAAa,CAAC3D,MAAM,CAAC;IACjC4C,QAAQ,EAAE,UAAU;IACpBgC,aAAa,EAAE,MAAM;IACrB,CAACD,YAAY,GAAG,kBAAkB,GAAG,QAAQ,GAAGjB,cAAc,CAAC1D,MAAM,EAAEb,KAAK,CAAC;IAC7E0F,SAAS,EAAE,uCAAuC;IAClD,eAAe,EAAEF,YAAY,GAAGhC,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,IAAI;IAC7D,eAAe,EAAE,CAACgC,YAAY,GAAG,KAAK,GAAG;EAC3C,CAAC;AACH;AACA,SAASG,mBAAmBA,CAAA,EAAG;EAC7B,OAAO;IACLZ,UAAU,EAAE,MAAM;IAClBC,gBAAgB,EAAE,MAAM;IACxBS,aAAa,EAAE,MAAM;IACrBhC,QAAQ,EAAE;EACZ,CAAC;AACH;AACA,SAASmC,eAAeA,CAAC/E,MAAM,EAAEgF,UAAU,EAAE;EAC3C,OAAOA,UAAU,CAACC,GAAG,CAAC,CAAC9F,KAAK,EAAEhC,KAAK,KAAK;IACtC,OAAO+H,cAAc,CAAClF,MAAM,EAAEb,KAAK,EAAEhC,KAAK,CAAC;EAC7C,CAAC,CAAC;AACJ;AACA,SAASgI,eAAeA,CAACnF,MAAM,EAAE7C,KAAK,EAAE;EACtC,MAAM;IAAE6F,OAAO;IAAE9C;EAAK,CAAC,GAAGF,MAAM;EAChC,MAAMoF,IAAI,GAAGlF,IAAI,CAAC,MAAM,CAAC,GAAGA,IAAI,CAAC,uBAAuB,CAAC;EACzD,OAAOxE,cAAc,CAACsH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE/C,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,EAAEkF,IAAI,CAAC,CAACjI,KAAK,CAAC;AACpF;AACA,SAAS+H,cAAcA,CAAClF,MAAM,EAAEb,KAAK,EAAEhC,KAAK,EAAE;EAC5C,MAAM;IAAE+C;EAAK,CAAC,GAAGF,MAAM;EACvB,MAAMvB,KAAK,GAAG0G,eAAe,CAACnF,MAAM,EAAE7C,KAAK,CAAC;EAC5C,MAAMkI,SAAS,GAAG7J,eAAe,CAAC2D,KAAK,EAAEe,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,MAAM,CAAC,CAAC;EAChF,OAAOzE,UAAU,CAAC4J,SAAS,EAAE5G,KAAK,CAAC6G,GAAG,EAAE7G,KAAK,CAAC8G,GAAG,CAAC;AACpD;AACA,SAASC,SAASA,CAACxF,MAAM,EAAE7C,KAAK,EAAEiI,IAAI,EAAE;EACtC,MAAM;IAAEpC,OAAO;IAAE9C;EAAK,CAAC,GAAGF,MAAM;EAChC,MAAMyF,GAAG,GAAGtI,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI6F,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAChD,MAAMxE,KAAK,GAAG0G,eAAe,CAACnF,MAAM,EAAEyF,GAAG,CAAC;EAC1C,MAAMT,UAAU,GAAGpJ,oBAAoB,CAAC6J,GAAG,EAAAhB,aAAA,CAAAA,aAAA,KACtChG,KAAK;IACR2G,IAAI,EAAEA,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAIlF,IAAI,CAAC,MAAM,CAAC;IAC1BwF,MAAM,EAAE1C,OAAO,CAACC,GAAG,CAAC,OAAO;EAAC,EAC7B,CAAC;EACF+B,UAAU,CAACS,GAAG,CAAC,GAAGhK,UAAU,CAACuJ,UAAU,CAACS,GAAG,CAAC,EAAEhH,KAAK,CAAC6G,GAAG,EAAE7G,KAAK,CAAC8G,GAAG,CAAC;EACnE,OAAOP,UAAU;AACnB;AACA,SAASW,SAASA,CAAC3F,MAAM,EAAE7C,KAAK,EAAEiI,IAAI,EAAE;EACtC,MAAM;IAAEpC,OAAO;IAAE9C;EAAK,CAAC,GAAGF,MAAM;EAChC,MAAMyF,GAAG,GAAGtI,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI6F,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAChD,MAAMxE,KAAK,GAAG0G,eAAe,CAACnF,MAAM,EAAEyF,GAAG,CAAC;EAC1C,MAAMT,UAAU,GAAGrJ,gBAAgB,CAAC8J,GAAG,EAAAhB,aAAA,CAAAA,aAAA,KAClChG,KAAK;IACR2G,IAAI,EAAEA,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAIlF,IAAI,CAAC,MAAM,CAAC;IAC1BwF,MAAM,EAAE1C,OAAO,CAACC,GAAG,CAAC,OAAO;EAAC,EAC7B,CAAC;EACF+B,UAAU,CAACS,GAAG,CAAC,GAAGhK,UAAU,CAACuJ,UAAU,CAACS,GAAG,CAAC,EAAEhH,KAAK,CAAC6G,GAAG,EAAE7G,KAAK,CAAC8G,GAAG,CAAC;EACnE,OAAOP,UAAU;AACnB;AACA,SAASY,eAAeA,CAAC5F,MAAM,EAAE6F,UAAU,EAAE;EAC3C,MAAM;IAAE7C;EAAQ,CAAC,GAAGhD,MAAM;EAC1B,OAAOlE,oBAAoB,CAACkH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE4C,UAAU,CAAC;AAC/D;;AAEA;AACA,SAASC,OAAOA,CAACC,OAAO,EAAEC,UAAU,EAAE;EACpC,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAElD,OAAO;IAAE9C,IAAI;IAAEgC,QAAQ;IAAE/B;EAAM,CAAC,GAAG4F,OAAO;EAC/D,MAAMI,SAAS,GAAGjG,IAAI,CAAC,YAAY,CAAC;EACpC,MAAMkG,cAAc,GAAGlG,IAAI,CAAC,iBAAiB,CAAC;EAC9C,MAAMmG,WAAW,GAAGrD,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACxC,MAAMqD,YAAY,GAAGtD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAChD,MAAMsD,OAAO,GAAGN,KAAK,CAACO,OAAO,CAAC,OAAO,CAAC;EACtC,MAAMC,QAAQ,GAAGR,KAAK,CAACO,OAAO,CAAC,UAAU,CAAC;EAC1C,MAAME,QAAQ,GAAGxE,QAAQ,CAAC,YAAY,CAAC;EACvC,MAAMyE,OAAO,GAAGzG,IAAI,CAAC,SAAS,CAAC;EAC/B,MAAM0G,WAAW,GAAG1E,QAAQ,CAAC,eAAe,CAAC;EAC7C,MAAMyC,YAAY,GAAGzE,IAAI,CAAC,aAAa,CAAC,KAAK,YAAY;EACzD,MAAMwC,UAAU,GAAGxC,IAAI,CAAC,aAAa,CAAC,KAAK,UAAU;EACrD,SAAS2G,iBAAiBA,CAAC1H,KAAK,EAAE;IAChC,OAAO9D,eAAe,CAAC8D,KAAK,EAAEe,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,CAAC;EACzD;EACA,SAAS4G,iBAAiBA,CAACxG,OAAO,EAAE;IAClC,OAAOzE,eAAe,CAACyE,OAAO,EAAEJ,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,MAAM,CAAC,CAAC;EACzE;EACA,OAAO;IACLf,KAAK,EAAEkH,WAAW;IAClBI,QAAQ;IACRF,OAAO;IACPQ,QAAQA,CAAC5H,KAAK,EAAE;MACd+G,IAAI,CAAC;QAAEc,IAAI,EAAE,WAAW;QAAE7H;MAAM,CAAC,CAAC;IACpC,CAAC;IACD8H,aAAaA,CAAC9J,KAAK,EAAE;MACnB,OAAOkJ,WAAW,CAAClJ,KAAK,CAAC;IAC3B,CAAC;IACD+J,aAAaA,CAAC/J,KAAK,EAAEgC,KAAK,EAAE;MAC1B+G,IAAI,CAAC;QAAEc,IAAI,EAAE,WAAW;QAAE7J,KAAK;QAAEgC;MAAM,CAAC,CAAC;IAC3C,CAAC;IACD9D,eAAe,EAAEwL,iBAAiB;IAClChL,eAAe,EAAEiL,iBAAiB;IAClCK,eAAeA,CAAChK,KAAK,EAAE;MACrB,OAAO0J,iBAAiB,CAACR,WAAW,CAAClJ,KAAK,CAAC,CAAC;IAC9C,CAAC;IACDiK,eAAeA,CAACjK,KAAK,EAAEmD,OAAO,EAAE;MAC9B,MAAMnB,KAAK,GAAG2H,iBAAiB,CAACxG,OAAO,CAAC;MACxC4F,IAAI,CAAC;QAAEc,IAAI,EAAE,WAAW;QAAE7J,KAAK;QAAEgC;MAAM,CAAC,CAAC;IAC3C,CAAC;IACDkI,WAAWA,CAAClK,KAAK,EAAE;MACjB,OAAOgI,eAAe,CAACY,OAAO,EAAE5I,KAAK,CAAC,CAACmI,GAAG;IAC5C,CAAC;IACDgC,WAAWA,CAACnK,KAAK,EAAE;MACjB,OAAOgI,eAAe,CAACY,OAAO,EAAE5I,KAAK,CAAC,CAACoI,GAAG;IAC5C,CAAC;IACDI,SAASA,CAACxI,KAAK,EAAE;MACf+I,IAAI,CAAC;QAAEc,IAAI,EAAE,WAAW;QAAE7J;MAAM,CAAC,CAAC;IACpC,CAAC;IACDqI,SAASA,CAACrI,KAAK,EAAE;MACf+I,IAAI,CAAC;QAAEc,IAAI,EAAE,WAAW;QAAE7J;MAAM,CAAC,CAAC;IACpC,CAAC;IACDoK,KAAKA,CAAA,EAAG;MACN,IAAI,CAACX,WAAW,EAAE;MAClBV,IAAI,CAAC;QAAEc,IAAI,EAAE,OAAO;QAAE7J,KAAK,EAAE;MAAE,CAAC,CAAC;IACnC,CAAC;IACDqK,aAAaA,CAAA,EAAG;MACd,OAAOxB,UAAU,CAACnH,KAAK,CAAA4F,aAAA,CAAAA,aAAA,KAClBjI,KAAK,CAACqC,KAAK,CAAC4I,KAAK;QACpBjH,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChB,eAAe,EAAEtF,QAAQ,CAAC8L,QAAQ,CAAC;QACnC,kBAAkB,EAAExG,IAAI,CAAC,aAAa,CAAC;QACvC,cAAc,EAAEtF,QAAQ,CAAC+L,OAAO,CAAC;QACjC,eAAe,EAAE/L,QAAQ,CAAC6L,QAAQ,CAAC;QACnC,YAAY,EAAE7L,QAAQ,CAAC2L,OAAO,CAAC;QAC/BtJ,EAAE,EAAEyB,UAAU,CAACyB,KAAK,CAAC;QACrBuH,OAAO,EAAEjK,gBAAgB,CAAC0C,KAAK,EAAE,CAAC,CAAC;QACnCwH,OAAOA,CAACC,KAAK,EAAE;UAAA,IAAAC,gBAAA;UACb,IAAI,CAACjB,WAAW,EAAE;UAClBgB,KAAK,CAACE,cAAc,CAAC,CAAC;UACtB,CAAAD,gBAAA,GAAAhI,eAAe,CAACM,KAAK,CAAC,cAAA0H,gBAAA,eAAtBA,gBAAA,CAAwBN,KAAK,CAAC,CAAC;QACjC,CAAC;QACDQ,KAAK,EAAE;UACL7D,UAAU,EAAE,MAAM;UAClBC,gBAAgB,EAAE;QACpB;MAAC,EACF,CAAC;IACJ,CAAC;IACD6D,YAAYA,CAAA,EAAG;MACb,OAAOhC,UAAU,CAACiC,OAAO,CAAAxD,aAAA,CAAAA,aAAA,KACpBjI,KAAK,CAACO,IAAI,CAAC0K,KAAK;QACnB,eAAe,EAAE7M,QAAQ,CAAC8L,QAAQ,CAAC;QACnC,kBAAkB,EAAExG,IAAI,CAAC,aAAa,CAAC;QACvC,eAAe,EAAEtF,QAAQ,CAAC6L,QAAQ,CAAC;QACnC,cAAc,EAAE7L,QAAQ,CAAC+L,OAAO,CAAC;QACjC,YAAY,EAAE/L,QAAQ,CAAC2L,OAAO,CAAC;QAC/BtJ,EAAE,EAAEP,SAAS,CAACyD,KAAK,CAAC;QACpBK,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChB6H,KAAK,EAAE3D,YAAY,CAAC2B,OAAO;MAAC,EAC7B,CAAC;IACJ,CAAC;IACDmC,iBAAiBA,CAAA,EAAG;MAClB,OAAOlC,UAAU,CAACiC,OAAO,CAAAxD,aAAA,CAAAA,aAAA,KACpBjI,KAAK,CAACyC,SAAS,CAACwI,KAAK;QACxBjH,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChB,eAAe,EAAEtF,QAAQ,CAAC8L,QAAQ,CAAC;QACnC,kBAAkB,EAAExG,IAAI,CAAC,aAAa,CAAC;QACvC,cAAc,EAAEtF,QAAQ,CAAC+L,OAAO,CAAC;QACjC,YAAY,EAAE/L,QAAQ,CAAC2L,OAAO,CAAC;QAC/BtJ,EAAE,EAAE6B,cAAc,CAACqB,KAAK;MAAC,EAC1B,CAAC;IACJ,CAAC;IACDgI,aAAaA,CAAA,EAAG;MACd,OAAOnC,UAAU,CAACiC,OAAO,CAAAxD,aAAA,CAAAA,aAAA,KACpBjI,KAAK,CAAC6B,KAAK,CAACoJ,KAAK;QACpBjH,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChBjD,EAAE,EAAEiB,UAAU,CAACiC,KAAK,CAAC;QACrB,eAAe,EAAEvF,QAAQ,CAAC8L,QAAQ,CAAC;QACnC,cAAc,EAAE9L,QAAQ,CAAC+L,OAAO,CAAC;QACjC,eAAe,EAAE/L,QAAQ,CAAC6L,QAAQ,CAAC;QACnC,kBAAkB,EAAEvG,IAAI,CAAC,aAAa,CAAC;QACvC,YAAY,EAAEtF,QAAQ,CAAC2L,OAAO,CAAC;QAC/BwB,KAAK,EAAE;UAAEnF,QAAQ,EAAE;QAAW;MAAC,EAChC,CAAC;IACJ,CAAC;IACDwF,aAAaA,CAACC,MAAM,EAAE;MAAA,IAAAC,KAAA;MACpB,MAAM;QAAEnL,KAAK,GAAG,CAAC;QAAEoL;MAAK,CAAC,GAAGF,MAAM;MAClC,MAAMlJ,KAAK,GAAGkH,WAAW,CAAClJ,KAAK,CAAC;MAChC,MAAMsB,KAAK,GAAG0G,eAAe,CAACY,OAAO,EAAE5I,KAAK,CAAC;MAC7C,MAAM8B,SAAS,IAAAqJ,KAAA,GAAGpI,IAAI,CAAC,kBAAkB,CAAC,cAAAoI,KAAA,uBAAxBA,KAAA,CAA2B;QAAEnJ,KAAK;QAAEhC;MAAM,CAAC,CAAC;MAC9D,MAAMqL,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACvC,SAAS,CAAC,GAAGA,SAAS,CAAChJ,KAAK,CAAC,GAAGgJ,SAAS;MAC1E,MAAMwC,eAAe,GAAGF,KAAK,CAACC,OAAO,CAACtC,cAAc,CAAC,GAAGA,cAAc,CAACjJ,KAAK,CAAC,GAAGiJ,cAAc;MAC9F,OAAOJ,UAAU,CAACiC,OAAO,CAAAxD,aAAA,CAAAA,aAAA,KACpBjI,KAAK,CAACe,KAAK,CAACkK,KAAK;QACpBjH,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChB,YAAY,EAAE/C,KAAK;QACnB,WAAW,EAAEoL,IAAI;QACjBtL,EAAE,EAAEC,UAAU,CAACiD,KAAK,EAAEhD,KAAK,CAAC;QAC5B,eAAe,EAAEvC,QAAQ,CAAC8L,QAAQ,CAAC;QACnC,kBAAkB,EAAExG,IAAI,CAAC,aAAa,CAAC;QACvC,YAAY,EAAEtF,QAAQ,CAAC2L,OAAO,IAAID,YAAY,KAAKnJ,KAAK,CAAC;QACzD,eAAe,EAAEvC,QAAQ,CAAC6L,QAAQ,IAAIH,YAAY,KAAKnJ,KAAK,CAAC;QAC7DyL,SAAS,EAAE,KAAK;QAChB,eAAe,EAAE5N,QAAQ,CAAC0L,QAAQ,CAAC;QACnC,YAAY,EAAE8B,UAAU;QACxB,iBAAiB,EAAEG,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAIjK,UAAU,CAACyB,KAAK,CAAC;QACvD,kBAAkB,EAAED,IAAI,CAAC,aAAa,CAAC;QACvC,eAAe,EAAEzB,KAAK,CAAC8G,GAAG;QAC1B,eAAe,EAAE9G,KAAK,CAAC6G,GAAG;QAC1B,eAAe,EAAEe,WAAW,CAAClJ,KAAK,CAAC;QACnC,gBAAgB,EAAE8B,SAAS;QAC3B4J,IAAI,EAAE,QAAQ;QACdC,QAAQ,EAAEpC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;QAC/BqB,KAAK,EAAElE,aAAa,CAACkC,OAAO,EAAE5I,KAAK,CAAC;QACpC4L,aAAaA,CAACnB,KAAK,EAAE;UACnB,IAAI,CAAChB,WAAW,EAAE;UAClB,IAAI,CAAC/L,WAAW,CAAC+M,KAAK,CAAC,EAAE;UACzB1B,IAAI,CAAC;YAAEc,IAAI,EAAE,oBAAoB;YAAE7J;UAAM,CAAC,CAAC;UAC3CyK,KAAK,CAACoB,eAAe,CAAC,CAAC;QACzB,CAAC;QACDC,MAAMA,CAAA,EAAG;UACP,IAAI,CAACrC,WAAW,EAAE;UAClBV,IAAI,CAAC;YAAEc,IAAI,EAAE;UAAO,CAAC,CAAC;QACxB,CAAC;QACDkC,OAAOA,CAAA,EAAG;UACR,IAAI,CAACtC,WAAW,EAAE;UAClBV,IAAI,CAAC;YAAEc,IAAI,EAAE,OAAO;YAAE7J;UAAM,CAAC,CAAC;QAChC,CAAC;QACDgM,SAASA,CAACvB,KAAK,EAAE;UACf,IAAIA,KAAK,CAACwB,gBAAgB,EAAE;UAC5B,IAAI,CAACxC,WAAW,EAAE;UAClB,MAAMxB,IAAI,GAAGnK,YAAY,CAAC2M,KAAK,CAAC,GAAG1H,IAAI,CAAC,MAAM,CAAC;UAC/C,MAAMmJ,MAAM,GAAG;YACbC,OAAOA,CAAA,EAAG;cACR,IAAI3E,YAAY,EAAE;cAClBuB,IAAI,CAAC;gBAAEc,IAAI,EAAE,WAAW;gBAAE5B,IAAI;gBAAEmE,GAAG,EAAE;cAAU,CAAC,CAAC;YACnD,CAAC;YACDC,SAASA,CAAA,EAAG;cACV,IAAI7E,YAAY,EAAE;cAClBuB,IAAI,CAAC;gBAAEc,IAAI,EAAE,WAAW;gBAAE5B,IAAI;gBAAEmE,GAAG,EAAE;cAAY,CAAC,CAAC;YACrD,CAAC;YACDE,SAASA,CAAA,EAAG;cACV,IAAI/G,UAAU,EAAE;cAChBwD,IAAI,CAAC;gBAAEc,IAAI,EAAE,WAAW;gBAAE5B,IAAI;gBAAEmE,GAAG,EAAE;cAAY,CAAC,CAAC;YACrD,CAAC;YACDG,UAAUA,CAAA,EAAG;cACX,IAAIhH,UAAU,EAAE;cAChBwD,IAAI,CAAC;gBAAEc,IAAI,EAAE,WAAW;gBAAE5B,IAAI;gBAAEmE,GAAG,EAAE;cAAa,CAAC,CAAC;YACtD,CAAC;YACDI,MAAMA,CAAA,EAAG;cACPzD,IAAI,CAAC;gBAAEc,IAAI,EAAE,WAAW;gBAAE5B,IAAI;gBAAEmE,GAAG,EAAE;cAAS,CAAC,CAAC;YAClD,CAAC;YACDK,QAAQA,CAAA,EAAG;cACT1D,IAAI,CAAC;gBAAEc,IAAI,EAAE,WAAW;gBAAE5B,IAAI;gBAAEmE,GAAG,EAAE;cAAW,CAAC,CAAC;YACpD,CAAC;YACDM,IAAIA,CAAA,EAAG;cACL3D,IAAI,CAAC;gBAAEc,IAAI,EAAE;cAAO,CAAC,CAAC;YACxB,CAAC;YACD8C,GAAGA,CAAA,EAAG;cACJ5D,IAAI,CAAC;gBAAEc,IAAI,EAAE;cAAM,CAAC,CAAC;YACvB;UACF,CAAC;UACD,MAAM+C,GAAG,GAAG7O,WAAW,CAAC0M,KAAK,EAAE;YAC7BpH,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;YAChBK,WAAW,EAAEL,IAAI,CAAC,aAAa;UACjC,CAAC,CAAC;UACF,MAAM8J,IAAI,GAAGX,MAAM,CAACU,GAAG,CAAC;UACxB,IAAIC,IAAI,EAAE;YACRA,IAAI,CAACpC,KAAK,CAAC;YACXA,KAAK,CAACE,cAAc,CAAC,CAAC;YACtBF,KAAK,CAACoB,eAAe,CAAC,CAAC;UACzB;QACF;MAAC,EACF,CAAC;IACJ,CAAC;IACDiB,mBAAmBA,CAAC5B,MAAM,EAAE;MAC1B,MAAM;QAAElL,KAAK,GAAG,CAAC;QAAEoL;MAAK,CAAC,GAAGF,MAAM;MAClC,OAAOrC,UAAU,CAACkE,KAAK,CAAC;QACtB3B,IAAI,EAAEA,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAKrI,IAAI,CAAC,MAAM,CAAC,GAAGA,IAAI,CAAC,MAAM,CAAC,IAAImG,WAAW,CAACrE,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,KAAK,CAAE;QAC3FmI,IAAI,EAAEjK,IAAI,CAAC,MAAM,CAAC;QAClB8G,IAAI,EAAE,MAAM;QACZoD,MAAM,EAAE,IAAI;QACZC,YAAY,EAAEhE,WAAW,CAAClJ,KAAK,CAAC;QAChCF,EAAE,EAAEQ,gBAAgB,CAAC0C,KAAK,EAAEhD,KAAK;MACnC,CAAC,CAAC;IACJ,CAAC;IACDmN,aAAaA,CAAA,EAAG;MACd,OAAOtE,UAAU,CAACiC,OAAO,CAAAxD,aAAA,CAAAA,aAAA;QACvBxH,EAAE,EAAEqB,UAAU,CAAC6B,KAAK;MAAC,GAClB3D,KAAK,CAACiC,KAAK,CAACgJ,KAAK;QACpBjH,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChB,eAAe,EAAEtF,QAAQ,CAAC6L,QAAQ,CAAC;QACnC,YAAY,EAAE7L,QAAQ,CAAC2L,OAAO,CAAC;QAC/B,cAAc,EAAE3L,QAAQ,CAAC+L,OAAO,CAAC;QACjC,eAAe,EAAE/L,QAAQ,CAAC8L,QAAQ,CAAC;QACnC,kBAAkB,EAAExG,IAAI,CAAC,aAAa,CAAC;QACvC6H,KAAK,EAAEtF,aAAa,CAACsD,OAAO;MAAC,EAC9B,CAAC;IACJ,CAAC;IACDwE,eAAeA,CAAA,EAAG;MAChB,OAAOvE,UAAU,CAACiC,OAAO,CAAAxD,aAAA,CAAAA,aAAA,KACpBjI,KAAK,CAACyB,OAAO,CAACwJ,KAAK;QACtBjH,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChBjD,EAAE,EAAEa,YAAY,CAACqC,KAAK,CAAC;QACvB,eAAe,EAAEvF,QAAQ,CAAC6L,QAAQ,CAAC;QACnC,eAAe,EAAE7L,QAAQ,CAAC8L,QAAQ,CAAC;QACnC,kBAAkB,EAAExG,IAAI,CAAC,aAAa,CAAC;QACvC,cAAc,EAAEtF,QAAQ,CAAC+L,OAAO,CAAC;QACjC,YAAY,EAAE/L,QAAQ,CAAC2L,OAAO,CAAC;QAC/BwB,KAAK,EAAE/D,eAAe,CAAC,CAAC;QACxB+E,aAAaA,CAACnB,KAAK,EAAE;UACnB,IAAI,CAAChB,WAAW,EAAE;UAClB,IAAI,CAAC/L,WAAW,CAAC+M,KAAK,CAAC,EAAE;UACzB,IAAI9M,aAAa,CAAC8M,KAAK,CAAC,EAAE;UAC1B,MAAM3H,KAAK,GAAGlF,aAAa,CAAC6M,KAAK,CAAC;UAClC1B,IAAI,CAAC;YAAEc,IAAI,EAAE,cAAc;YAAE/G;UAAM,CAAC,CAAC;UACrC2H,KAAK,CAACE,cAAc,CAAC,CAAC;UACtBF,KAAK,CAACoB,eAAe,CAAC,CAAC;QACzB;MAAC,EACF,CAAC;IACJ,CAAC;IACDwB,mBAAmBA,CAAA,EAAG;MACpB,OAAOxE,UAAU,CAACiC,OAAO,CAAAxD,aAAA,CAAAA,aAAA,KACpBjI,KAAK,CAACiO,WAAW,CAAChD,KAAK;QAC1BoB,IAAI,EAAE,cAAc;QACpBrI,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChB,aAAa,EAAE,IAAI;QACnB,kBAAkB,EAAEA,IAAI,CAAC,aAAa,CAAC;QACvC6H,KAAK,EAAEjD,mBAAmB,CAAC;MAAC,EAC7B,CAAC;IACJ,CAAC;IACD4F,cAAcA,CAACrC,MAAM,EAAE;MACrB,MAAMN,KAAK,GAAGrD,cAAc,CAACqB,OAAO,EAAEsC,MAAM,CAAClJ,KAAK,CAAC;MACnD,IAAIwL,WAAW;MACf,IAAItC,MAAM,CAAClJ,KAAK,GAAGnD,KAAK,CAACqK,WAAW,CAAC,EAAE;QACrCsE,WAAW,GAAG,aAAa;MAC7B,CAAC,MAAM,IAAItC,MAAM,CAAClJ,KAAK,GAAGlD,IAAI,CAACoK,WAAW,CAAC,EAAE;QAC3CsE,WAAW,GAAG,YAAY;MAC5B,CAAC,MAAM;QACLA,WAAW,GAAG,UAAU;MAC1B;MACA,OAAO3E,UAAU,CAACiC,OAAO,CAAAxD,aAAA,CAAAA,aAAA,KACpBjI,KAAK,CAAC+C,MAAM,CAACkI,KAAK;QACrBxK,EAAE,EAAEiC,WAAW,CAACiB,KAAK,EAAEkI,MAAM,CAAClJ,KAAK,CAAC;QACpC0J,IAAI,EAAE,cAAc;QACpBrI,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChB,kBAAkB,EAAEA,IAAI,CAAC,aAAa,CAAC;QACvC,YAAY,EAAEmI,MAAM,CAAClJ,KAAK;QAC1B,eAAe,EAAEvE,QAAQ,CAAC8L,QAAQ,CAAC;QACnC,YAAY,EAAEiE,WAAW;QACzB5C;MAAK,EACN,CAAC;IACJ,CAAC;IACD6C,yBAAyBA,CAACvC,MAAM,EAAE;MAChC,MAAM;QAAElL,KAAK,GAAG;MAAE,CAAC,GAAGkL,MAAM;MAC5B,MAAMwC,UAAU,GAAG1N,KAAK,KAAKmJ,YAAY,IAAIG,QAAQ;MACrD,OAAOT,UAAU,CAACiC,OAAO,CAAAxD,aAAA,CAAAA,aAAA,KACpBjI,KAAK,CAACsO,iBAAiB,CAACrD,KAAK;QAChCoB,IAAI,EAAE,cAAc;QACpBrI,GAAG,EAAEN,IAAI,CAAC,KAAK,CAAC;QAChBkK,MAAM,EAAE,CAACS,UAAU;QACnB,kBAAkB,EAAE3K,IAAI,CAAC,aAAa,CAAC;QACvC,YAAY,EAAE2K,UAAU,GAAG,MAAM,GAAG,QAAQ;QAC5C9C,KAAK,EAAElE,aAAa,CAACkC,OAAO,EAAE5I,KAAK;MAAC,EACrC,CAAC;IACJ;EACF,CAAC;AACH;AACA,IAAI4N,WAAW,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC1B,OAAO,CAAAD,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEvJ,KAAK,OAAKwJ,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAExJ,KAAK,KAAI,CAAAuJ,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAErJ,MAAM,OAAKsJ,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEtJ,MAAM;AACzD,CAAC;AACD,IAAIuJ,SAAS,GAAGA,CAAC/L,KAAK,EAAEmG,GAAG,EAAEC,GAAG,EAAEH,IAAI,EAAE+F,qBAAqB,KAAK;EAChE,MAAMC,MAAM,GAAG1P,cAAc,CAACyD,KAAK,EAAEmG,GAAG,EAAEC,GAAG,EAAE4F,qBAAqB,GAAG/F,IAAI,CAAC;EAC5E,OAAOgG,MAAM,CAACnG,GAAG,CAAExG,KAAK,IAAK;IAC3B,MAAM4G,SAAS,GAAG7J,eAAe,CAACiD,KAAK,CAACU,KAAK,EAAEV,KAAK,CAAC6G,GAAG,EAAE7G,KAAK,CAAC8G,GAAG,EAAEH,IAAI,CAAC;IAC1E,MAAMiG,UAAU,GAAG5P,UAAU,CAAC4J,SAAS,EAAE5G,KAAK,CAAC6G,GAAG,EAAE7G,KAAK,CAAC8G,GAAG,CAAC;IAC9D,IAAI,CAACxJ,kBAAkB,CAACsP,UAAU,EAAE/F,GAAG,EAAEC,GAAG,CAAC,EAAE;MAC7C,MAAM,IAAI+F,KAAK,CACb,mGACF,CAAC;IACH;IACA,OAAOD,UAAU;EACnB,CAAC,CAAC;AACJ,CAAC;AACD,IAAIE,OAAO,GAAGnP,aAAa,CAAC;EAC1BoP,KAAKA,CAAAC,IAAA,EAAoB;IAAA,IAAAC,WAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,oBAAA,EAAAC,qBAAA;IAAA,IAAnB;MAAEN,KAAK,EAAEnD;IAAO,CAAC,GAAAoD,IAAA;IACrB,MAAMnG,GAAG,IAAAoG,WAAA,GAAGrD,MAAM,CAAC/C,GAAG,cAAAoG,WAAA,cAAAA,WAAA,GAAI,CAAC;IAC3B,MAAMnG,GAAG,IAAAoG,WAAA,GAAGtD,MAAM,CAAC9C,GAAG,cAAAoG,WAAA,cAAAA,WAAA,GAAI,GAAG;IAC7B,MAAMvG,IAAI,IAAAwG,YAAA,GAAGvD,MAAM,CAACjD,IAAI,cAAAwG,YAAA,cAAAA,YAAA,GAAI,CAAC;IAC7B,MAAMvB,YAAY,IAAAwB,oBAAA,GAAGxD,MAAM,CAACgC,YAAY,cAAAwB,oBAAA,cAAAA,oBAAA,GAAI,CAACvG,GAAG,CAAC;IACjD,MAAM6F,qBAAqB,IAAAW,qBAAA,GAAGzD,MAAM,CAAC8C,qBAAqB,cAAAW,qBAAA,cAAAA,qBAAA,GAAI,CAAC;IAC/D,OAAArH,aAAA,CAAAA,aAAA;MACEjE,GAAG,EAAE,KAAK;MACVuL,cAAc,EAAE,SAAS;MACzBC,MAAM,EAAE,OAAO;MACfzL,WAAW,EAAE,YAAY;MACzB4K;IAAqB,GAClB9C,MAAM;MACTgC,YAAY,EAAEa,SAAS,CAACb,YAAY,EAAE/E,GAAG,EAAEC,GAAG,EAAEH,IAAI,EAAE+F,qBAAqB,CAAC;MAC5EhM,KAAK,EAAEkJ,MAAM,CAAClJ,KAAK,GAAG+L,SAAS,CAAC7C,MAAM,CAAClJ,KAAK,EAAEmG,GAAG,EAAEC,GAAG,EAAEH,IAAI,EAAE+F,qBAAqB,CAAC,GAAG,KAAK,CAAC;MAC7F5F,GAAG;MACHH,IAAI;MACJE;IAAG;EAEP,CAAC;EACD2G,YAAYA,CAAA,EAAG;IACb,OAAO,MAAM;EACf,CAAC;EACDjJ,OAAOA,CAAAkJ,KAAA,EAAiC;IAAA,IAAhC;MAAEhM,IAAI;MAAEiM,QAAQ;MAAEC;IAAW,CAAC,GAAAF,KAAA;IACpC,OAAO;MACL7H,SAAS,EAAE8H,QAAQ,CAAC,OAAO;QACzB9B,YAAY,EAAEnK,IAAI,CAAC,WAAW,CAAC,IAAI;MACrC,CAAC,CAAC,CAAC;MACHf,KAAK,EAAEgN,QAAQ,CAAC,OAAO;QACrB9B,YAAY,EAAEnK,IAAI,CAAC,cAAc,CAAC;QAClCf,KAAK,EAAEe,IAAI,CAAC,OAAO,CAAC;QACpB5E,OAAO;QACP+Q,IAAIA,CAACrB,CAAC,EAAE;UACN,OAAOA,CAAC,CAACsB,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC;QACDC,QAAQA,CAACpN,KAAK,EAAE;UAAA,IAAAqN,MAAA;UACd,CAAAA,MAAA,GAAAtM,IAAI,CAAC,eAAe,CAAC,cAAAsM,MAAA,eAArBA,MAAA,CAAwB;YAAErN;UAAM,CAAC,CAAC;QACpC;MACF,CAAC,CAAC,CAAC;MACHmH,YAAY,EAAE6F,QAAQ,CAAC,OAAO;QAC5B9B,YAAY,EAAE,CAAC,CAAC;QAChBkC,QAAQA,CAACpN,KAAK,EAAE;UAAA,IAAAsN,MAAA;UACd,MAAM9P,GAAG,GAAGyP,UAAU,CAAC,CAAC;UACxB,CAAAK,MAAA,GAAAvM,IAAI,CAAC,eAAe,CAAC,cAAAuM,MAAA,eAArBA,MAAA,CAAwB;YAAEnG,YAAY,EAAEnH,KAAK;YAAEA,KAAK,EAAExC,GAAG,CAACsG,GAAG,CAAC,OAAO;UAAE,CAAC,CAAC;QAC3E;MACF,CAAC,CAAC,CAAC;MACHyJ,gBAAgB,EAAEP,QAAQ,CAAC,OAAO;QAChC9B,YAAY,EAAE;MAChB,CAAC,CAAC;IACJ,CAAC;EACH,CAAC;EACDnI,QAAQ,EAAE;IACRyC,YAAY,EAAEgI,KAAA;MAAA,IAAC;QAAEzM;MAAK,CAAC,GAAAyM,KAAA;MAAA,OAAKzM,IAAI,CAAC,aAAa,CAAC,KAAK,YAAY;IAAA;IAChEwC,UAAU,EAAEkK,KAAA;MAAA,IAAC;QAAE1M;MAAK,CAAC,GAAA0M,KAAA;MAAA,OAAK1M,IAAI,CAAC,aAAa,CAAC,KAAK,UAAU;IAAA;IAC5DyC,KAAK,EAAEkK,KAAA;MAAA,IAAC;QAAE3M;MAAK,CAAC,GAAA2M,KAAA;MAAA,OAAK3M,IAAI,CAAC,aAAa,CAAC,KAAK,YAAY,IAAIA,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK;IAAA;IAClF4M,UAAU,EAAEC,KAAA;MAAA,IAAC;QAAE/J,OAAO;QAAE9C;MAAK,CAAC,GAAA6M,KAAA;MAAA,OAAK,CAAC,CAAC7M,IAAI,CAAC,UAAU,CAAC,IAAI8C,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAAA;IACxF+J,aAAa,EAAEC,KAAA;MAAA,IAAC;QAAE/M,IAAI;QAAEgC;MAAS,CAAC,GAAA+K,KAAA;MAAA,OAAK,EAAE/M,IAAI,CAAC,UAAU,CAAC,IAAIgC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAAA;IACpFgL,oBAAoB,EAAEC,KAAA;MAAA,IAAC;QAAEnK;MAAQ,CAAC,GAAAmK,KAAA;MAAA,OAAKnK,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI;IAAA;IACvEd,YAAY,EAAE9F,IAAI,CAChB+Q,KAAA;MAAA,IAAC;QAAEpK,OAAO;QAAE9C;MAAK,CAAC,GAAAkN,KAAA;MAAA,OAAK,CAACpK,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE/C,IAAI,CAAC,KAAK,CAAC,EAAEA,IAAI,CAAC,KAAK,CAAC,CAAC;IAAA,GACvEmN,KAAA;MAAA,IAAC,CAAClO,KAAK,EAAEmG,GAAG,EAAEC,GAAG,CAAC,GAAA8H,KAAA;MAAA,OAAKlO,KAAK,CAAC8F,GAAG,CAAEpE,MAAM,IAAK,GAAG,GAAGxF,eAAe,CAACwF,MAAM,EAAEyE,GAAG,EAAEC,GAAG,CAAC,CAAC;IAAA,CACvF;EACF,CAAC;EACD+H,KAAKA,CAAAC,KAAA,EAA6B;IAAA,IAA5B;MAAElP,KAAK;MAAEmP,MAAM;MAAExK;IAAQ,CAAC,GAAAuK,KAAA;IAC9BlP,KAAK,CAAC,CAAC,MAAM2E,OAAO,CAACqJ,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,MAAM;MACzCmB,MAAM,CAAC,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC;EACJ,CAAC;EACDC,OAAO,EAAE,CAAC,uBAAuB,EAAE,gBAAgB,CAAC;EACpDC,EAAE,EAAE;IACFC,SAAS,EAAE,CACT;MACEC,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE,CAAC,iBAAiB;IAC7B,CAAC,EACD;MACEA,OAAO,EAAE,CAAC,UAAU;IACtB,CAAC,CACF;IACDC,SAAS,EAAE;MACTD,OAAO,EAAE,CAAC,uBAAuB;IACnC,CAAC;IACDE,SAAS,EAAE;MACTF,OAAO,EAAE,CAAC,uBAAuB;IACnC;EACF,CAAC;EACDG,MAAM,EAAE;IACNC,IAAI,EAAE;MACJP,EAAE,EAAE;QACFQ,YAAY,EAAE;UACZC,MAAM,EAAE,UAAU;UAClBN,OAAO,EAAE,CAAC,sBAAsB,EAAE,iBAAiB,EAAE,kBAAkB;QACzE,CAAC;QACDO,KAAK,EAAE;UACLD,MAAM,EAAE,OAAO;UACfN,OAAO,EAAE,CAAC,iBAAiB;QAC7B,CAAC;QACDQ,kBAAkB,EAAE;UAClBF,MAAM,EAAE,UAAU;UAClBN,OAAO,EAAE,CAAC,iBAAiB,EAAE,kBAAkB;QACjD;MACF;IACF,CAAC;IACDtG,KAAK,EAAE;MACL+G,KAAK,EAAE,CAAC,kBAAkB,CAAC;MAC3BZ,EAAE,EAAE;QACFQ,YAAY,EAAE;UACZC,MAAM,EAAE,UAAU;UAClBN,OAAO,EAAE,CAAC,sBAAsB,EAAE,iBAAiB,EAAE,kBAAkB;QACzE,CAAC;QACDQ,kBAAkB,EAAE;UAClBF,MAAM,EAAE,UAAU;UAClBN,OAAO,EAAE,CAAC,iBAAiB,EAAE,kBAAkB;QACjD,CAAC;QACDU,SAAS,EAAE;UACTV,OAAO,EAAE,CAAC,uBAAuB,EAAE,mBAAmB;QACxD,CAAC;QACDW,SAAS,EAAE;UACTX,OAAO,EAAE,CAAC,uBAAuB,EAAE,mBAAmB;QACxD,CAAC;QACDY,IAAI,EAAE;UACJZ,OAAO,EAAE,CAAC,sBAAsB,EAAE,mBAAmB;QACvD,CAAC;QACDa,GAAG,EAAE;UACHb,OAAO,EAAE,CAAC,sBAAsB,EAAE,mBAAmB;QACvD,CAAC;QACDc,IAAI,EAAE;UACJR,MAAM,EAAE,MAAM;UACdN,OAAO,EAAE,CAAC,mBAAmB;QAC/B;MACF;IACF,CAAC;IACDpH,QAAQ,EAAE;MACR6H,KAAK,EAAE,CAAC,kBAAkB,CAAC;MAC3Bb,OAAO,EAAE,CAAC,kBAAkB,CAAC;MAC7BC,EAAE,EAAE;QACFkB,UAAU,EAAE;UACVT,MAAM,EAAE,OAAO;UACfN,OAAO,EAAE,CAAC,mBAAmB;QAC/B,CAAC;QACDgB,YAAY,EAAE;UACZhB,OAAO,EAAE,CAAC,iBAAiB;QAC7B;MACF;IACF;EACF,CAAC;EACDiB,eAAe,EAAE;IACfC,MAAM,EAAE;MACNC,QAAQ,EAAEC,MAAA;QAAA,IAAC;UAAErH;QAAM,CAAC,GAAAqH,MAAA;QAAA,OAAKrH,KAAK,CAACzK,KAAK,IAAI,IAAI;MAAA;IAC9C,CAAC;IACDsQ,OAAO,EAAE;MACPyB,qBAAqBA,CAAAC,MAAA,EAAqB;QAAA,IAApB;UAAEnM,OAAO;UAAE7C;QAAM,CAAC,GAAAgP,MAAA;QACtC,OAAO1U,gBAAgB,CAAC+E,SAAS,CAACW,KAAK,CAAC,EAAE;UACxCiP,wBAAwBA,CAAC1I,QAAQ,EAAE;YACjC1D,OAAO,CAACqM,GAAG,CAAC,kBAAkB,EAAE3I,QAAQ,CAAC;UAC3C,CAAC;UACD4I,WAAWA,CAAA,EAAG;YACZtM,OAAO,CAACqM,GAAG,CAAC,OAAO,EAAErM,OAAO,CAACuM,OAAO,CAAC,OAAO,CAAC,CAAC;UAChD;QACF,CAAC,CAAC;MACJ,CAAC;MACD/U,gBAAgBA,CAAAgV,MAAA,EAAkB;QAAA,IAAjB;UAAErP,KAAK;UAAE+F;QAAK,CAAC,GAAAsJ,MAAA;QAC9B,OAAOhV,gBAAgB,CAAC2F,KAAK,CAACsP,MAAM,CAAC,CAAC,EAAE;UACtCC,aAAaA,CAACC,IAAI,EAAE;YAClBzJ,IAAI,CAAC;cAAEc,IAAI,EAAE,cAAc;cAAE/G,KAAK,EAAE0P,IAAI,CAAC1P;YAAM,CAAC,CAAC;UACnD,CAAC;UACD2P,WAAWA,CAAA,EAAG;YACZ1J,IAAI,CAAC;cAAEc,IAAI,EAAE;YAAa,CAAC,CAAC;UAC9B;QACF,CAAC,CAAC;MACJ,CAAC;MACD6I,cAAcA,CAAAC,MAAA,EAA2B;QAAA,IAA1B;UAAE9M,OAAO;UAAE7C,KAAK;UAAED;QAAK,CAAC,GAAA4P,MAAA;QACrC,IAAI5P,IAAI,CAAC,gBAAgB,CAAC,KAAK,SAAS,IAAIA,IAAI,CAAC,WAAW,CAAC,EAAE;QAC/D,OAAO5F,gBAAgB,CAACqF,WAAW,CAACQ,KAAK,CAAC,EAAE;UAC1C4P,GAAG,EAAE,YAAY;UACjBC,OAAOA,CAAChP,EAAE,EAAE;YACV,OAAOD,aAAa,CAACC,EAAE,CAAC;UAC1B,CAAC;UACDiP,OAAOA,CAAAC,MAAA,EAAY;YAAA,IAAX;cAAEC;YAAM,CAAC,GAAAD,MAAA;YACf,IAAIC,KAAK,CAACnO,MAAM,KAAK,CAAC,EAAE;YACxB,MAAMoO,IAAI,GAAGhV,IAAI,CAAC+U,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAChD,IAAIpF,WAAW,CAAC/H,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEmN,IAAI,CAAC,EAAE;YACjDpN,OAAO,CAACqM,GAAG,CAAC,WAAW,EAAEe,IAAI,CAAC;UAChC;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IACDvC,OAAO,EAAE;MACPlN,mBAAmBA,CAAA0P,MAAA,EAAqB;QAAA,IAApB;UAAErN,OAAO;UAAE7C;QAAM,CAAC,GAAAkQ,MAAA;QACpC1P,mBAAmB,CAACR,KAAK,EAAE6C,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC;MAClD,CAAC;MACDqN,iBAAiBA,CAAAC,MAAA,EAAqB;QAAA,IAApB;UAAEvN,OAAO;UAAE7C;QAAM,CAAC,GAAAoQ,MAAA;QAClCvN,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAACrC,OAAO,CAAC,CAACzB,KAAK,EAAEhC,KAAK,KAAK;UAC7C,MAAM2D,OAAO,GAAGhB,gBAAgB,CAACK,KAAK,EAAEhD,KAAK,CAAC;UAC9C9C,eAAe,CAACyG,OAAO,EAAE3B,KAAK,CAACqR,QAAQ,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;MACJ,CAAC;MACDC,iBAAiBA,CAAAC,MAAA,EAAoB;QAAA,IAAnB;UAAExQ,IAAI;UAAE8C;QAAQ,CAAC,GAAA0N,MAAA;QACjCC,cAAc,CAAC,MAAM;UAAA,IAAAC,MAAA;UACnB,CAAAA,MAAA,GAAA1Q,IAAI,CAAC,kBAAkB,CAAC,cAAA0Q,MAAA,eAAxBA,MAAA,CAA2B;YAAEzR,KAAK,EAAE6D,OAAO,CAACC,GAAG,CAAC,OAAO;UAAE,CAAC,CAAC;QAC7D,CAAC,CAAC;MACJ,CAAC;MACD4N,oBAAoBA,CAAC7Q,MAAM,EAAE;QAC3B,MAAM;UAAEgD,OAAO;UAAE4E;QAAM,CAAC,GAAG5H,MAAM;QACjC,MAAM6F,UAAU,GAAG9F,aAAa,CAACC,MAAM,EAAE4H,KAAK,CAAC3H,KAAK,CAAC;QACrD,IAAI4F,UAAU,IAAI,IAAI,EAAE;QACxB,MAAMS,YAAY,GAAGV,eAAe,CAAC5F,MAAM,EAAE6F,UAAU,CAAC;QACxD7C,OAAO,CAACqM,GAAG,CAAC,cAAc,EAAE/I,YAAY,CAAC;MAC3C,CAAC;MACDwK,eAAeA,CAAAC,MAAA,EAAqB;QAAA,IAApB;UAAE/N,OAAO;UAAE4E;QAAM,CAAC,GAAAmJ,MAAA;QAChC/N,OAAO,CAACqM,GAAG,CAAC,cAAc,EAAEzH,KAAK,CAACzK,KAAK,CAAC;MAC1C,CAAC;MACD6T,iBAAiBA,CAAAC,MAAA,EAAc;QAAA,IAAb;UAAEjO;QAAQ,CAAC,GAAAiO,MAAA;QAC3BjO,OAAO,CAACqM,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;MACjC,CAAC;MACD6B,eAAeA,CAAClR,MAAM,EAAE;QACtB2Q,cAAc,CAAC,MAAM;UACnB,MAAM;YAAE3N,OAAO;YAAE4E;UAAM,CAAC,GAAG5H,MAAM;UACjC,MAAM6F,UAAU,GAAG9F,aAAa,CAACC,MAAM,EAAE4H,KAAK,CAAC3H,KAAK,CAAC;UACrD,IAAI4F,UAAU,IAAI,IAAI,EAAE;UACxB,MAAMS,YAAY,GAAGtD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAChD,MAAM9D,KAAK,GAAG+F,cAAc,CAAClF,MAAM,EAAE6F,UAAU,EAAES,YAAY,CAAC;UAC9DtD,OAAO,CAACqM,GAAG,CAAC,OAAO,EAAG8B,IAAI,IAAKhW,eAAe,CAACgW,IAAI,EAAE7K,YAAY,EAAEnH,KAAK,CAAC,CAAC;QAC5E,CAAC,CAAC;MACJ,CAAC;MACDiS,gBAAgBA,CAAAC,MAAA,EAAqB;QAAA,IAApB;UAAElR,KAAK;UAAE6C;QAAQ,CAAC,GAAAqO,MAAA;QACjCjX,GAAG,CAAC,MAAM;UACR,MAAMkX,OAAO,GAAG5R,UAAU,CAACS,KAAK,EAAE6C,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC;UAC9DqO,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAE/J,KAAK,CAAC;YAAEgK,aAAa,EAAE;UAAK,CAAC,CAAC;QACzC,CAAC,CAAC;MACJ,CAAC;MACDC,qBAAqBA,CAACxR,MAAM,EAAE;QAC5B,MAAM;UAAEgD,OAAO;UAAE4E;QAAM,CAAC,GAAG5H,MAAM;QACjC,MAAMb,KAAK,GAAGqG,SAAS,CAACxF,MAAM,EAAE4H,KAAK,CAACzK,KAAK,EAAEyK,KAAK,CAACxC,IAAI,CAAC;QACxDpC,OAAO,CAACqM,GAAG,CAAC,OAAO,EAAElQ,KAAK,CAAC;MAC7B,CAAC;MACDsS,qBAAqBA,CAACzR,MAAM,EAAE;QAC5B,MAAM;UAAEgD,OAAO;UAAE4E;QAAM,CAAC,GAAG5H,MAAM;QACjC,MAAMb,KAAK,GAAGwG,SAAS,CAAC3F,MAAM,EAAE4H,KAAK,CAACzK,KAAK,EAAEyK,KAAK,CAACxC,IAAI,CAAC;QACxDpC,OAAO,CAACqM,GAAG,CAAC,OAAO,EAAElQ,KAAK,CAAC;MAC7B,CAAC;MACDuS,oBAAoBA,CAAC1R,MAAM,EAAE;QAC3B,MAAM;UAAEgD;QAAQ,CAAC,GAAGhD,MAAM;QAC1B,MAAM7C,KAAK,GAAG6F,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QACzC,MAAM;UAAEqC;QAAI,CAAC,GAAGH,eAAe,CAACnF,MAAM,EAAE7C,KAAK,CAAC;QAC9C6F,OAAO,CAACqM,GAAG,CAAC,OAAO,EAAG8B,IAAI,IAAKhW,eAAe,CAACgW,IAAI,EAAEhU,KAAK,EAAEmI,GAAG,CAAC,CAAC;MACnE,CAAC;MACDqM,oBAAoBA,CAAC3R,MAAM,EAAE;QAC3B,MAAM;UAAEgD;QAAQ,CAAC,GAAGhD,MAAM;QAC1B,MAAM7C,KAAK,GAAG6F,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QACzC,MAAM;UAAEsC;QAAI,CAAC,GAAGJ,eAAe,CAACnF,MAAM,EAAE7C,KAAK,CAAC;QAC9C6F,OAAO,CAACqM,GAAG,CAAC,OAAO,EAAG8B,IAAI,IAAKhW,eAAe,CAACgW,IAAI,EAAEhU,KAAK,EAAEoI,GAAG,CAAC,CAAC;MACnE,CAAC;MACDpK,eAAeA,CAAC6E,MAAM,EAAE;QACtB,MAAM;UAAEgD,OAAO;UAAE4E;QAAM,CAAC,GAAG5H,MAAM;QACjC,MAAMb,KAAK,GAAG+F,cAAc,CAAClF,MAAM,EAAE4H,KAAK,CAACzI,KAAK,EAAEyI,KAAK,CAACzK,KAAK,CAAC;QAC9D6F,OAAO,CAACqM,GAAG,CAAC,OAAO,EAAG8B,IAAI,IAAKhW,eAAe,CAACgW,IAAI,EAAEvJ,KAAK,CAACzK,KAAK,EAAEgC,KAAK,CAAC,CAAC;MAC3E,CAAC;MACD4H,QAAQA,CAAC/G,MAAM,EAAE;QACf,MAAM;UAAEgD,OAAO;UAAE4E;QAAM,CAAC,GAAG5H,MAAM;QACjC,MAAMb,KAAK,GAAG4F,eAAe,CAAC/E,MAAM,EAAE4H,KAAK,CAACzI,KAAK,CAAC;QAClD6D,OAAO,CAACqM,GAAG,CAAC,OAAO,EAAElQ,KAAK,CAAC;MAC7B;IACF;EACF;AACF,CAAC,CAAC;AACF,IAAIqM,KAAK,GAAGlP,WAAW,CAAC,CAAC,CAAC,CACxB,YAAY,EACZ,iBAAiB,EACjB,KAAK,EACL,UAAU,EACV,MAAM,EACN,kBAAkB,EAClB,aAAa,EACb,IAAI,EACJ,KAAK,EACL,SAAS,EACT,KAAK,EACL,KAAK,EACL,uBAAuB,EACvB,MAAM,EACN,eAAe,EACf,eAAe,EACf,kBAAkB,EAClB,aAAa,EACb,QAAQ,EACR,UAAU,EACV,MAAM,EACN,gBAAgB,EAChB,gBAAgB,EAChB,WAAW,EACX,OAAO,EACP,cAAc,CACf,CAAC;AACF,IAAIsV,UAAU,GAAGrW,gBAAgB,CAACiQ,KAAK,CAAC;AACxC,IAAIqG,UAAU,GAAGvV,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AACjD,IAAIwV,eAAe,GAAGvW,gBAAgB,CAACsW,UAAU,CAAC;AAElD,SAAStV,OAAO,EAAEuJ,OAAO,EAAEyF,OAAO,EAAEC,KAAK,EAAEoG,UAAU,EAAEE,eAAe,EAAED,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}