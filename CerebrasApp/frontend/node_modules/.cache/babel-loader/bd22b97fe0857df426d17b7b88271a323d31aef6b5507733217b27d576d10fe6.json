{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"initialItems\", \"filter\", \"limit\"];\nimport { useState, useRef, useCallback, useMemo } from 'react';\nimport { useEvent } from '../../utils/use-event.js';\nimport { createListCollection } from './list-collection.js';\nfunction useListCollection(props) {\n  const {\n      initialItems = [],\n      filter,\n      limit\n    } = props,\n    collectionOptions = _objectWithoutProperties(props, _excluded);\n  const [items, setItemsImpl] = useState(initialItems);\n  const [filterText, setFilterText] = useState(\"\");\n  const setItems = useEvent(items2 => {\n    setItemsImpl(items2);\n    setFilterText(\"\");\n  });\n  const collectionOptionsRef = useRef(collectionOptions);\n  collectionOptionsRef.current = collectionOptions;\n  const create = useCallback(items2 => {\n    return createListCollection(_objectSpread(_objectSpread({}, collectionOptionsRef.current), {}, {\n      items: items2\n    }));\n  }, []);\n  const collection = useMemo(() => {\n    let activeItems = items;\n    if (filterText && filter) {\n      activeItems = create(items).filter((itemString, _index, item) => filter(itemString, filterText, item)).items;\n    }\n    const limitedItems = limit == null ? activeItems : activeItems.slice(0, limit);\n    return createListCollection(_objectSpread(_objectSpread({}, collectionOptionsRef.current), {}, {\n      items: limitedItems\n    }));\n  }, [items, filterText, filter, limit, create]);\n  return {\n    collection,\n    filter: useEvent(inputValue => {\n      setFilterText(inputValue || \"\");\n    }),\n    set: useEvent(newItems => {\n      setItems(newItems);\n    }),\n    reset: useEvent(() => {\n      setItems(initialItems);\n    }),\n    clear: useEvent(() => {\n      setItems([]);\n    }),\n    insert: useEvent(function (index) {\n      for (var _len = arguments.length, itemsToInsert = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        itemsToInsert[_key - 1] = arguments[_key];\n      }\n      const newItems = create(items).insert(index, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    insertBefore: useEvent(function (value) {\n      for (var _len2 = arguments.length, itemsToInsert = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        itemsToInsert[_key2 - 1] = arguments[_key2];\n      }\n      const newItems = create(items).insertBefore(value, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    insertAfter: useEvent(function (value) {\n      for (var _len3 = arguments.length, itemsToInsert = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        itemsToInsert[_key3 - 1] = arguments[_key3];\n      }\n      const newItems = create(items).insertAfter(value, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    remove: useEvent(function () {\n      const newItems = create(items).remove(...arguments).items;\n      setItems(newItems);\n    }),\n    move: useEvent((value, to) => {\n      const newItems = create(items).move(value, to).items;\n      setItems(newItems);\n    }),\n    moveBefore: useEvent(function (value) {\n      for (var _len4 = arguments.length, values = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        values[_key4 - 1] = arguments[_key4];\n      }\n      const newItems = create(items).moveBefore(value, ...values).items;\n      setItems(newItems);\n    }),\n    moveAfter: useEvent(function (value) {\n      for (var _len5 = arguments.length, values = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n        values[_key5 - 1] = arguments[_key5];\n      }\n      const newItems = create(items).moveAfter(value, ...values).items;\n      setItems(newItems);\n    }),\n    reorder: useEvent((from, to) => {\n      const newItems = create(items).reorder(from, to).items;\n      setItems(newItems);\n    }),\n    append: useEvent(function () {\n      const newItems = create(items).append(...arguments).items;\n      setItems(newItems);\n    }),\n    upsert: useEvent(function (value, item) {\n      let mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"append\";\n      const newItems = create(items).upsert(value, item, mode).items;\n      setItems(newItems);\n    }),\n    prepend: useEvent(function () {\n      const newItems = create(items).prepend(...arguments).items;\n      setItems(newItems);\n    }),\n    update: useEvent((value, item) => {\n      const newItems = create(items).update(value, item).items;\n      setItems(newItems);\n    })\n  };\n}\nexport { useListCollection };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","useState","useRef","useCallback","useMemo","useEvent","createListCollection","useListCollection","props","initialItems","filter","limit","collectionOptions","items","setItemsImpl","filterText","setFilterText","setItems","items2","collectionOptionsRef","current","create","collection","activeItems","itemString","_index","item","limitedItems","slice","inputValue","set","newItems","reset","clear","insert","index","_len","arguments","length","itemsToInsert","Array","_key","insertBefore","value","_len2","_key2","insertAfter","_len3","_key3","remove","move","to","moveBefore","_len4","values","_key4","moveAfter","_len5","_key5","reorder","from","append","upsert","mode","undefined","prepend","update"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@ark-ui/react/dist/components/collection/use-list-collection.js"],"sourcesContent":["'use client';\nimport { useState, useRef, useCallback, useMemo } from 'react';\nimport { useEvent } from '../../utils/use-event.js';\nimport { createListCollection } from './list-collection.js';\n\nfunction useListCollection(props) {\n  const { initialItems = [], filter, limit, ...collectionOptions } = props;\n  const [items, setItemsImpl] = useState(initialItems);\n  const [filterText, setFilterText] = useState(\"\");\n  const setItems = useEvent((items2) => {\n    setItemsImpl(items2);\n    setFilterText(\"\");\n  });\n  const collectionOptionsRef = useRef(collectionOptions);\n  collectionOptionsRef.current = collectionOptions;\n  const create = useCallback((items2) => {\n    return createListCollection({ ...collectionOptionsRef.current, items: items2 });\n  }, []);\n  const collection = useMemo(() => {\n    let activeItems = items;\n    if (filterText && filter) {\n      activeItems = create(items).filter((itemString, _index, item) => filter(itemString, filterText, item)).items;\n    }\n    const limitedItems = limit == null ? activeItems : activeItems.slice(0, limit);\n    return createListCollection({ ...collectionOptionsRef.current, items: limitedItems });\n  }, [items, filterText, filter, limit, create]);\n  return {\n    collection,\n    filter: useEvent((inputValue) => {\n      setFilterText(inputValue || \"\");\n    }),\n    set: useEvent((newItems) => {\n      setItems(newItems);\n    }),\n    reset: useEvent(() => {\n      setItems(initialItems);\n    }),\n    clear: useEvent(() => {\n      setItems([]);\n    }),\n    insert: useEvent((index, ...itemsToInsert) => {\n      const newItems = create(items).insert(index, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    insertBefore: useEvent((value, ...itemsToInsert) => {\n      const newItems = create(items).insertBefore(value, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    insertAfter: useEvent((value, ...itemsToInsert) => {\n      const newItems = create(items).insertAfter(value, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    remove: useEvent((...itemOrValues) => {\n      const newItems = create(items).remove(...itemOrValues).items;\n      setItems(newItems);\n    }),\n    move: useEvent((value, to) => {\n      const newItems = create(items).move(value, to).items;\n      setItems(newItems);\n    }),\n    moveBefore: useEvent((value, ...values) => {\n      const newItems = create(items).moveBefore(value, ...values).items;\n      setItems(newItems);\n    }),\n    moveAfter: useEvent((value, ...values) => {\n      const newItems = create(items).moveAfter(value, ...values).items;\n      setItems(newItems);\n    }),\n    reorder: useEvent((from, to) => {\n      const newItems = create(items).reorder(from, to).items;\n      setItems(newItems);\n    }),\n    append: useEvent((...itemsToAppend) => {\n      const newItems = create(items).append(...itemsToAppend).items;\n      setItems(newItems);\n    }),\n    upsert: useEvent((value, item, mode = \"append\") => {\n      const newItems = create(items).upsert(value, item, mode).items;\n      setItems(newItems);\n    }),\n    prepend: useEvent((...itemsToPrepend) => {\n      const newItems = create(items).prepend(...itemsToPrepend).items;\n      setItems(newItems);\n    }),\n    update: useEvent((value, item) => {\n      const newItems = create(items).update(value, item).items;\n      setItems(newItems);\n    })\n  };\n}\n\nexport { useListCollection };\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AAAA,OAAAC,wBAAA;AAAA,MAAAC,SAAA;AACb,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC9D,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,oBAAoB,QAAQ,sBAAsB;AAE3D,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAChC,MAAM;MAAEC,YAAY,GAAG,EAAE;MAAEC,MAAM;MAAEC;IAA4B,CAAC,GAAGH,KAAK;IAA3BI,iBAAiB,GAAAb,wBAAA,CAAKS,KAAK,EAAAR,SAAA;EACxE,MAAM,CAACa,KAAK,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACQ,YAAY,CAAC;EACpD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMgB,QAAQ,GAAGZ,QAAQ,CAAEa,MAAM,IAAK;IACpCJ,YAAY,CAACI,MAAM,CAAC;IACpBF,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC,CAAC;EACF,MAAMG,oBAAoB,GAAGjB,MAAM,CAACU,iBAAiB,CAAC;EACtDO,oBAAoB,CAACC,OAAO,GAAGR,iBAAiB;EAChD,MAAMS,MAAM,GAAGlB,WAAW,CAAEe,MAAM,IAAK;IACrC,OAAOZ,oBAAoB,CAAAR,aAAA,CAAAA,aAAA,KAAMqB,oBAAoB,CAACC,OAAO;MAAEP,KAAK,EAAEK;IAAM,EAAE,CAAC;EACjF,CAAC,EAAE,EAAE,CAAC;EACN,MAAMI,UAAU,GAAGlB,OAAO,CAAC,MAAM;IAC/B,IAAImB,WAAW,GAAGV,KAAK;IACvB,IAAIE,UAAU,IAAIL,MAAM,EAAE;MACxBa,WAAW,GAAGF,MAAM,CAACR,KAAK,CAAC,CAACH,MAAM,CAAC,CAACc,UAAU,EAAEC,MAAM,EAAEC,IAAI,KAAKhB,MAAM,CAACc,UAAU,EAAET,UAAU,EAAEW,IAAI,CAAC,CAAC,CAACb,KAAK;IAC9G;IACA,MAAMc,YAAY,GAAGhB,KAAK,IAAI,IAAI,GAAGY,WAAW,GAAGA,WAAW,CAACK,KAAK,CAAC,CAAC,EAAEjB,KAAK,CAAC;IAC9E,OAAOL,oBAAoB,CAAAR,aAAA,CAAAA,aAAA,KAAMqB,oBAAoB,CAACC,OAAO;MAAEP,KAAK,EAAEc;IAAY,EAAE,CAAC;EACvF,CAAC,EAAE,CAACd,KAAK,EAAEE,UAAU,EAAEL,MAAM,EAAEC,KAAK,EAAEU,MAAM,CAAC,CAAC;EAC9C,OAAO;IACLC,UAAU;IACVZ,MAAM,EAAEL,QAAQ,CAAEwB,UAAU,IAAK;MAC/Bb,aAAa,CAACa,UAAU,IAAI,EAAE,CAAC;IACjC,CAAC,CAAC;IACFC,GAAG,EAAEzB,QAAQ,CAAE0B,QAAQ,IAAK;MAC1Bd,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACFC,KAAK,EAAE3B,QAAQ,CAAC,MAAM;MACpBY,QAAQ,CAACR,YAAY,CAAC;IACxB,CAAC,CAAC;IACFwB,KAAK,EAAE5B,QAAQ,CAAC,MAAM;MACpBY,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC;IACFiB,MAAM,EAAE7B,QAAQ,CAAC,UAAC8B,KAAK,EAAuB;MAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAlBC,aAAa,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAbF,aAAa,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;MAAA;MACvC,MAAMV,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAACqB,MAAM,CAACC,KAAK,EAAE,GAAGI,aAAa,CAAC,CAAC1B,KAAK;MACpEI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACFW,YAAY,EAAErC,QAAQ,CAAC,UAACsC,KAAK,EAAuB;MAAA,SAAAC,KAAA,GAAAP,SAAA,CAAAC,MAAA,EAAlBC,aAAa,OAAAC,KAAA,CAAAI,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAbN,aAAa,CAAAM,KAAA,QAAAR,SAAA,CAAAQ,KAAA;MAAA;MAC7C,MAAMd,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAAC6B,YAAY,CAACC,KAAK,EAAE,GAAGJ,aAAa,CAAC,CAAC1B,KAAK;MAC1EI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACFe,WAAW,EAAEzC,QAAQ,CAAC,UAACsC,KAAK,EAAuB;MAAA,SAAAI,KAAA,GAAAV,SAAA,CAAAC,MAAA,EAAlBC,aAAa,OAAAC,KAAA,CAAAO,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAAbT,aAAa,CAAAS,KAAA,QAAAX,SAAA,CAAAW,KAAA;MAAA;MAC5C,MAAMjB,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAACiC,WAAW,CAACH,KAAK,EAAE,GAAGJ,aAAa,CAAC,CAAC1B,KAAK;MACzEI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACFkB,MAAM,EAAE5C,QAAQ,CAAC,YAAqB;MACpC,MAAM0B,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAACoC,MAAM,CAAC,GAAAZ,SAAe,CAAC,CAACxB,KAAK;MAC5DI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACFmB,IAAI,EAAE7C,QAAQ,CAAC,CAACsC,KAAK,EAAEQ,EAAE,KAAK;MAC5B,MAAMpB,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAACqC,IAAI,CAACP,KAAK,EAAEQ,EAAE,CAAC,CAACtC,KAAK;MACpDI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACFqB,UAAU,EAAE/C,QAAQ,CAAC,UAACsC,KAAK,EAAgB;MAAA,SAAAU,KAAA,GAAAhB,SAAA,CAAAC,MAAA,EAAXgB,MAAM,OAAAd,KAAA,CAAAa,KAAA,OAAAA,KAAA,WAAAE,KAAA,MAAAA,KAAA,GAAAF,KAAA,EAAAE,KAAA;QAAND,MAAM,CAAAC,KAAA,QAAAlB,SAAA,CAAAkB,KAAA;MAAA;MACpC,MAAMxB,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAACuC,UAAU,CAACT,KAAK,EAAE,GAAGW,MAAM,CAAC,CAACzC,KAAK;MACjEI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACFyB,SAAS,EAAEnD,QAAQ,CAAC,UAACsC,KAAK,EAAgB;MAAA,SAAAc,KAAA,GAAApB,SAAA,CAAAC,MAAA,EAAXgB,MAAM,OAAAd,KAAA,CAAAiB,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAANJ,MAAM,CAAAI,KAAA,QAAArB,SAAA,CAAAqB,KAAA;MAAA;MACnC,MAAM3B,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAAC2C,SAAS,CAACb,KAAK,EAAE,GAAGW,MAAM,CAAC,CAACzC,KAAK;MAChEI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACF4B,OAAO,EAAEtD,QAAQ,CAAC,CAACuD,IAAI,EAAET,EAAE,KAAK;MAC9B,MAAMpB,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAAC8C,OAAO,CAACC,IAAI,EAAET,EAAE,CAAC,CAACtC,KAAK;MACtDI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACF8B,MAAM,EAAExD,QAAQ,CAAC,YAAsB;MACrC,MAAM0B,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAACgD,MAAM,CAAC,GAAAxB,SAAgB,CAAC,CAACxB,KAAK;MAC7DI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACF+B,MAAM,EAAEzD,QAAQ,CAAC,UAACsC,KAAK,EAAEjB,IAAI,EAAsB;MAAA,IAApBqC,IAAI,GAAA1B,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA2B,SAAA,GAAA3B,SAAA,MAAG,QAAQ;MAC5C,MAAMN,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAACiD,MAAM,CAACnB,KAAK,EAAEjB,IAAI,EAAEqC,IAAI,CAAC,CAAClD,KAAK;MAC9DI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACFkC,OAAO,EAAE5D,QAAQ,CAAC,YAAuB;MACvC,MAAM0B,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAACoD,OAAO,CAAC,GAAA5B,SAAiB,CAAC,CAACxB,KAAK;MAC/DI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC,CAAC;IACFmC,MAAM,EAAE7D,QAAQ,CAAC,CAACsC,KAAK,EAAEjB,IAAI,KAAK;MAChC,MAAMK,QAAQ,GAAGV,MAAM,CAACR,KAAK,CAAC,CAACqD,MAAM,CAACvB,KAAK,EAAEjB,IAAI,CAAC,CAACb,KAAK;MACxDI,QAAQ,CAACc,QAAQ,CAAC;IACpB,CAAC;EACH,CAAC;AACH;AAEA,SAASxB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}