{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"lazyMount\", \"unmountOnExit\"];\nimport * as collapsible from '@zag-js/collapsible';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId, useRef } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nconst useCollapsible = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n      lazyMount,\n      unmountOnExit\n    } = props,\n    collapsibleProps = _objectWithoutProperties(props, _excluded);\n  const id = useId();\n  const wasVisible = useRef(false);\n  const {\n    dir\n  } = useLocaleContext();\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const machineProps = _objectSpread({\n    id,\n    dir,\n    getRootNode\n  }, collapsibleProps);\n  const service = useMachine(collapsible.machine, machineProps);\n  const api = collapsible.connect(service, normalizeProps);\n  if (api.visible) {\n    wasVisible.current = true;\n  }\n  const isUnmounted = !api.visible && !wasVisible.current && lazyMount || unmountOnExit && !api.visible && wasVisible.current;\n  return _objectSpread(_objectSpread({}, api), {}, {\n    isUnmounted\n  });\n};\nexport { useCollapsible };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","collapsible","useMachine","normalizeProps","useId","useRef","useEnvironmentContext","useLocaleContext","useCollapsible","props","arguments","length","undefined","lazyMount","unmountOnExit","collapsibleProps","id","wasVisible","dir","getRootNode","machineProps","service","machine","api","connect","visible","current","isUnmounted"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@ark-ui/react/dist/components/collapsible/use-collapsible.js"],"sourcesContent":["'use client';\nimport * as collapsible from '@zag-js/collapsible';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId, useRef } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\n\nconst useCollapsible = (props = {}) => {\n  const { lazyMount, unmountOnExit, ...collapsibleProps } = props;\n  const id = useId();\n  const wasVisible = useRef(false);\n  const { dir } = useLocaleContext();\n  const { getRootNode } = useEnvironmentContext();\n  const machineProps = {\n    id,\n    dir,\n    getRootNode,\n    ...collapsibleProps\n  };\n  const service = useMachine(collapsible.machine, machineProps);\n  const api = collapsible.connect(service, normalizeProps);\n  if (api.visible) {\n    wasVisible.current = true;\n  }\n  const isUnmounted = !api.visible && !wasVisible.current && lazyMount || unmountOnExit && !api.visible && wasVisible.current;\n  return { ...api, isUnmounted };\n};\n\nexport { useCollapsible };\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AAAA,OAAAC,wBAAA;AAAA,MAAAC,SAAA;AACb,OAAO,KAAKC,WAAW,MAAM,qBAAqB;AAClD,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,KAAK,EAAEC,MAAM,QAAQ,OAAO;AACrC,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAE/E,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAgB;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChC,MAAM;MAAEG,SAAS;MAAEC;IAAmC,CAAC,GAAGL,KAAK;IAA1BM,gBAAgB,GAAAhB,wBAAA,CAAKU,KAAK,EAAAT,SAAA;EAC/D,MAAMgB,EAAE,GAAGZ,KAAK,CAAC,CAAC;EAClB,MAAMa,UAAU,GAAGZ,MAAM,CAAC,KAAK,CAAC;EAChC,MAAM;IAAEa;EAAI,CAAC,GAAGX,gBAAgB,CAAC,CAAC;EAClC,MAAM;IAAEY;EAAY,CAAC,GAAGb,qBAAqB,CAAC,CAAC;EAC/C,MAAMc,YAAY,GAAAtB,aAAA;IAChBkB,EAAE;IACFE,GAAG;IACHC;EAAW,GACRJ,gBAAgB,CACpB;EACD,MAAMM,OAAO,GAAGnB,UAAU,CAACD,WAAW,CAACqB,OAAO,EAAEF,YAAY,CAAC;EAC7D,MAAMG,GAAG,GAAGtB,WAAW,CAACuB,OAAO,CAACH,OAAO,EAAElB,cAAc,CAAC;EACxD,IAAIoB,GAAG,CAACE,OAAO,EAAE;IACfR,UAAU,CAACS,OAAO,GAAG,IAAI;EAC3B;EACA,MAAMC,WAAW,GAAG,CAACJ,GAAG,CAACE,OAAO,IAAI,CAACR,UAAU,CAACS,OAAO,IAAIb,SAAS,IAAIC,aAAa,IAAI,CAACS,GAAG,CAACE,OAAO,IAAIR,UAAU,CAACS,OAAO;EAC3H,OAAA5B,aAAA,CAAAA,aAAA,KAAYyB,GAAG;IAAEI;EAAW;AAC9B,CAAC;AAED,SAASnB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}