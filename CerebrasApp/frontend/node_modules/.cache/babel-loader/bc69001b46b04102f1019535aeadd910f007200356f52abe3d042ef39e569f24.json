{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport * as checkbox from '@zag-js/checkbox';\nimport { mergeProps, useMachine, normalizeProps } from '@zag-js/react';\nimport { useMemo, useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nimport { useCheckboxGroupContext } from './use-checkbox-group-context.js';\nconst useCheckbox = function () {\n  let ownProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const checkboxGroup = useCheckboxGroupContext();\n  const field = useFieldContext();\n  const props = useMemo(() => {\n    var _checkboxGroup$getIte;\n    return mergeProps(ownProps, (_checkboxGroup$getIte = checkboxGroup === null || checkboxGroup === void 0 ? void 0 : checkboxGroup.getItemProps({\n      value: ownProps.value\n    })) !== null && _checkboxGroup$getIte !== void 0 ? _checkboxGroup$getIte : {});\n  }, [ownProps, checkboxGroup]);\n  const id = useId();\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const machineProps = _objectSpread({\n    id,\n    ids: {\n      label: field === null || field === void 0 ? void 0 : field.ids.label,\n      hiddenInput: field === null || field === void 0 ? void 0 : field.ids.control\n    },\n    dir,\n    disabled: field === null || field === void 0 ? void 0 : field.disabled,\n    readOnly: field === null || field === void 0 ? void 0 : field.readOnly,\n    invalid: field === null || field === void 0 ? void 0 : field.invalid,\n    required: field === null || field === void 0 ? void 0 : field.required,\n    getRootNode\n  }, props);\n  const service = useMachine(checkbox.machine, machineProps);\n  return checkbox.connect(service, normalizeProps);\n};\nexport { useCheckbox };","map":{"version":3,"names":["_objectSpread","checkbox","mergeProps","useMachine","normalizeProps","useMemo","useId","useEnvironmentContext","useLocaleContext","useFieldContext","useCheckboxGroupContext","useCheckbox","ownProps","arguments","length","undefined","checkboxGroup","field","props","_checkboxGroup$getIte","getItemProps","value","id","getRootNode","dir","machineProps","ids","label","hiddenInput","control","disabled","readOnly","invalid","required","service","machine","connect"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@ark-ui/react/dist/components/checkbox/use-checkbox.js"],"sourcesContent":["'use client';\nimport * as checkbox from '@zag-js/checkbox';\nimport { mergeProps, useMachine, normalizeProps } from '@zag-js/react';\nimport { useMemo, useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nimport { useCheckboxGroupContext } from './use-checkbox-group-context.js';\n\nconst useCheckbox = (ownProps = {}) => {\n  const checkboxGroup = useCheckboxGroupContext();\n  const field = useFieldContext();\n  const props = useMemo(() => {\n    return mergeProps(ownProps, checkboxGroup?.getItemProps({ value: ownProps.value }) ?? {});\n  }, [ownProps, checkboxGroup]);\n  const id = useId();\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const machineProps = {\n    id,\n    ids: {\n      label: field?.ids.label,\n      hiddenInput: field?.ids.control\n    },\n    dir,\n    disabled: field?.disabled,\n    readOnly: field?.readOnly,\n    invalid: field?.invalid,\n    required: field?.required,\n    getRootNode,\n    ...props\n  };\n  const service = useMachine(checkbox.machine, machineProps);\n  return checkbox.connect(service, normalizeProps);\n};\n\nexport { useCheckbox };\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AACb,OAAO,KAAKC,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AACtE,SAASC,OAAO,EAAEC,KAAK,QAAQ,OAAO;AACtC,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,uBAAuB,QAAQ,iCAAiC;AAEzE,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAmB;EAAA,IAAlBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChC,MAAMG,aAAa,GAAGN,uBAAuB,CAAC,CAAC;EAC/C,MAAMO,KAAK,GAAGR,eAAe,CAAC,CAAC;EAC/B,MAAMS,KAAK,GAAGb,OAAO,CAAC,MAAM;IAAA,IAAAc,qBAAA;IAC1B,OAAOjB,UAAU,CAACU,QAAQ,GAAAO,qBAAA,GAAEH,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEI,YAAY,CAAC;MAAEC,KAAK,EAAET,QAAQ,CAACS;IAAM,CAAC,CAAC,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAC,CAAC;EAC3F,CAAC,EAAE,CAACP,QAAQ,EAAEI,aAAa,CAAC,CAAC;EAC7B,MAAMM,EAAE,GAAGhB,KAAK,CAAC,CAAC;EAClB,MAAM;IAAEiB;EAAY,CAAC,GAAGhB,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEiB;EAAI,CAAC,GAAGhB,gBAAgB,CAAC,CAAC;EAClC,MAAMiB,YAAY,GAAAzB,aAAA;IAChBsB,EAAE;IACFI,GAAG,EAAE;MACHC,KAAK,EAAEV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAES,GAAG,CAACC,KAAK;MACvBC,WAAW,EAAEX,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAES,GAAG,CAACG;IAC1B,CAAC;IACDL,GAAG;IACHM,QAAQ,EAAEb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEa,QAAQ;IACzBC,QAAQ,EAAEd,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,QAAQ;IACzBC,OAAO,EAAEf,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEe,OAAO;IACvBC,QAAQ,EAAEhB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEgB,QAAQ;IACzBV;EAAW,GACRL,KAAK,CACT;EACD,MAAMgB,OAAO,GAAG/B,UAAU,CAACF,QAAQ,CAACkC,OAAO,EAAEV,YAAY,CAAC;EAC1D,OAAOxB,QAAQ,CAACmC,OAAO,CAACF,OAAO,EAAE9B,cAAc,CAAC;AAClD,CAAC;AAED,SAASO,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}