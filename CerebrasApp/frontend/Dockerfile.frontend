# ---------- Build stage ----------
# Use a Node image that already ships with npm 11 (Node 22)
FROM node:22-alpine AS build

WORKDIR /app

# (optional) make sure we have the latest npm 11.x
RUN npm install -g npm@latest

# Copy only the package manifest files – this layer is cached unless they change
COPY package*.json ./

# Install all dependencies. `npm ci` reads the lockfile (if present) and fails fast on version problems.
RUN npm ci

# Copy the rest of the source code
COPY . .

# Build the React application
RUN npm run build

# ---------- Production stage ----------
FROM node:22-alpine AS runtime

WORKDIR /app

# Bring the built assets and the already‑installed node_modules from the build stage
COPY --from=build /app/build ./build
COPY --from=build /app/package*.json ./
COPY --from=build /app/node_modules ./node_modules

# Expose the port the app will be served on
EXPOSE 3000

# Serve the static build with the tiny `serve` package (installed as a dev‑dependency of create‑react‑app)
CMD ["npx", "serve", "-s", "build", "-l", "3000"]