# ---------- Build stage ----------
FROM node:22-alpine AS build

LABEL maintainer="James <james@example.com>"
LABEL description="Frontend build for Cerebras Bank‑Statement Analyzer"
LABEL version="1.0.0"

WORKDIR /app

# 1️⃣  Copy only the manifest files (package.json + lockfile)
COPY package*.json ./

# 2️⃣  Install **all** dependencies (dev + prod) deterministically.
RUN npm ci --prefer-offline --no-audit --no-fund

# 3️⃣  Copy the rest of the source (respect .dockerignore)
COPY . .

# 4️⃣  Build the React app (needs react‑scripts)
RUN npm run build

# 5️⃣  Remove dev‑dependencies now that the build artefacts are ready
RUN npm prune --production

# ---------- Production stage ----------
FROM node:22-alpine AS runtime

WORKDIR /app

# Run as non‑root user (node user exists in the official image)
USER node

# Bring only the artefacts needed at runtime
COPY --from=build /app/build ./build
COPY --from=build /app/package*.json ./
COPY --from=build /app/node_modules ./node_modules

EXPOSE 3000

# Simple health‑check
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s \
  CMD wget -qO- http://localhost:3000 || exit 1

# Serve the static build
CMD ["npx", "serve", "-s", "build", "-l", "3000"]