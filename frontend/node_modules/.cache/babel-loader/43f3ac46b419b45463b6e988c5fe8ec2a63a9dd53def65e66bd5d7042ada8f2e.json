{"ast":null,"code":"import _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/affine-transform.ts\nvar AffineTransform = class _AffineTransform {\n  constructor() {\n    var _this = this;\n    let [m00, m01, m02, m10, m11, m12] = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 0, 0, 0, 0];\n    __publicField(this, \"m00\");\n    __publicField(this, \"m01\");\n    __publicField(this, \"m02\");\n    __publicField(this, \"m10\");\n    __publicField(this, \"m11\");\n    __publicField(this, \"m12\");\n    __publicField(this, \"rotate\", function () {\n      return _this.prepend(_AffineTransform.rotate(...arguments));\n    });\n    __publicField(this, \"scale\", function () {\n      return _this.prepend(_AffineTransform.scale(...arguments));\n    });\n    __publicField(this, \"translate\", function () {\n      return _this.prepend(_AffineTransform.translate(...arguments));\n    });\n    this.m00 = m00;\n    this.m01 = m01;\n    this.m02 = m02;\n    this.m10 = m10;\n    this.m11 = m11;\n    this.m12 = m12;\n  }\n  applyTo(point) {\n    const {\n      x,\n      y\n    } = point;\n    const {\n      m00,\n      m01,\n      m02,\n      m10,\n      m11,\n      m12\n    } = this;\n    return {\n      x: m00 * x + m01 * y + m02,\n      y: m10 * x + m11 * y + m12\n    };\n  }\n  prepend(other) {\n    return new _AffineTransform([this.m00 * other.m00 + this.m01 * other.m10,\n    // m00\n    this.m00 * other.m01 + this.m01 * other.m11,\n    // m01\n    this.m00 * other.m02 + this.m01 * other.m12 + this.m02,\n    // m02\n    this.m10 * other.m00 + this.m11 * other.m10,\n    // m10\n    this.m10 * other.m01 + this.m11 * other.m11,\n    // m11\n    this.m10 * other.m02 + this.m11 * other.m12 + this.m12\n    // m12\n    ]);\n  }\n  append(other) {\n    return new _AffineTransform([other.m00 * this.m00 + other.m01 * this.m10,\n    // m00\n    other.m00 * this.m01 + other.m01 * this.m11,\n    // m01\n    other.m00 * this.m02 + other.m01 * this.m12 + other.m02,\n    // m02\n    other.m10 * this.m00 + other.m11 * this.m10,\n    // m10\n    other.m10 * this.m01 + other.m11 * this.m11,\n    // m11\n    other.m10 * this.m02 + other.m11 * this.m12 + other.m12\n    // m12\n    ]);\n  }\n  get determinant() {\n    return this.m00 * this.m11 - this.m01 * this.m10;\n  }\n  get isInvertible() {\n    const det = this.determinant;\n    return isFinite(det) && isFinite(this.m02) && isFinite(this.m12) && det !== 0;\n  }\n  invert() {\n    const det = this.determinant;\n    return new _AffineTransform([this.m11 / det,\n    // m00\n    -this.m01 / det,\n    // m01\n    (this.m01 * this.m12 - this.m11 * this.m02) / det,\n    // m02\n    -this.m10 / det,\n    // m10\n    this.m00 / det,\n    // m11\n    (this.m10 * this.m02 - this.m00 * this.m12) / det\n    // m12\n    ]);\n  }\n  get array() {\n    return [this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, 0, 0, 1];\n  }\n  get float32Array() {\n    return new Float32Array(this.array);\n  }\n  // Static\n  static get identity() {\n    return new _AffineTransform([1, 0, 0, 0, 1, 0]);\n  }\n  static rotate(theta, origin) {\n    const rotation = new _AffineTransform([Math.cos(theta), -Math.sin(theta), 0, Math.sin(theta), Math.cos(theta), 0]);\n    if (origin && (origin.x !== 0 || origin.y !== 0)) {\n      return _AffineTransform.multiply(_AffineTransform.translate(origin.x, origin.y), rotation, _AffineTransform.translate(-origin.x, -origin.y));\n    }\n    return rotation;\n  }\n  static scale(sx) {\n    let sy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : sx;\n    let origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      x: 0,\n      y: 0\n    };\n    const scale = new _AffineTransform([sx, 0, 0, 0, sy, 0]);\n    if (origin.x !== 0 || origin.y !== 0) {\n      return _AffineTransform.multiply(_AffineTransform.translate(origin.x, origin.y), scale, _AffineTransform.translate(-origin.x, -origin.y));\n    }\n    return scale;\n  }\n  static translate(tx, ty) {\n    return new _AffineTransform([1, 0, tx, 0, 1, ty]);\n  }\n  static multiply() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    let [first, ...rest] = _ref;\n    if (!first) return _AffineTransform.identity;\n    return rest.reduce((result, item) => result.prepend(item), first);\n  }\n  get a() {\n    return this.m00;\n  }\n  get b() {\n    return this.m10;\n  }\n  get c() {\n    return this.m01;\n  }\n  get d() {\n    return this.m11;\n  }\n  get tx() {\n    return this.m02;\n  }\n  get ty() {\n    return this.m12;\n  }\n  get scaleComponents() {\n    return {\n      x: this.a,\n      y: this.d\n    };\n  }\n  get translationComponents() {\n    return {\n      x: this.tx,\n      y: this.ty\n    };\n  }\n  get skewComponents() {\n    return {\n      x: this.c,\n      y: this.b\n    };\n  }\n  toString() {\n    return \"matrix(\".concat(this.a, \", \").concat(this.b, \", \").concat(this.c, \", \").concat(this.d, \", \").concat(this.tx, \", \").concat(this.ty, \")\");\n  }\n};\n\n// src/align.ts\nfunction hAlign(a, ref, h) {\n  let x = ref.minX;\n  if (h === \"left-inside\") x = ref.minX;\n  if (h === \"left-outside\") x = ref.minX - ref.width;\n  if (h === \"right-inside\") x = ref.maxX - ref.width;\n  if (h === \"right-outside\") x = ref.maxX;\n  if (h === \"center\") x = ref.midX - ref.width / 2;\n  return _objectSpread(_objectSpread({}, a), {}, {\n    x\n  });\n}\nfunction vAlign(a, ref, v) {\n  let y = ref.minY;\n  if (v === \"top-inside\") y = ref.minY;\n  if (v === \"top-outside\") y = ref.minY - a.height;\n  if (v === \"bottom-inside\") y = ref.maxY - a.height;\n  if (v === \"bottom-outside\") y = ref.maxY;\n  if (v === \"center\") y = ref.midY - a.height / 2;\n  return _objectSpread(_objectSpread({}, a), {}, {\n    y\n  });\n}\nfunction alignRect(a, ref, options) {\n  const {\n    h,\n    v\n  } = options;\n  return vAlign(hAlign(a, ref, h), ref, v);\n}\n\n// src/angle.ts\nfunction getPointAngle(rect, point) {\n  let reference = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : rect.center;\n  const x = point.x - reference.x;\n  const y = point.y - reference.y;\n  const deg = Math.atan2(x, y) * (180 / Math.PI) + 180;\n  return 360 - deg;\n}\n\n// src/clamp.ts\nvar clamp = (value, min3, max2) => Math.min(Math.max(value, min3), max2);\nvar clampPoint = (position, size, boundaryRect) => {\n  const x = clamp(position.x, boundaryRect.x, boundaryRect.x + boundaryRect.width - size.width);\n  const y = clamp(position.y, boundaryRect.y, boundaryRect.y + boundaryRect.height - size.height);\n  return {\n    x,\n    y\n  };\n};\nvar defaultMinSize = {\n  width: 0,\n  height: 0\n};\nvar defaultMaxSize = {\n  width: Infinity,\n  height: Infinity\n};\nvar clampSize = function (size) {\n  let minSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultMinSize;\n  let maxSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultMaxSize;\n  return {\n    width: Math.min(Math.max(size.width, minSize.width), maxSize.width),\n    height: Math.min(Math.max(size.height, minSize.height), maxSize.height)\n  };\n};\n\n// src/rect.ts\nvar createPoint = (x, y) => ({\n  x,\n  y\n});\nvar subtractPoints = (a, b) => {\n  if (!b) return a;\n  return createPoint(a.x - b.x, a.y - b.y);\n};\nvar addPoints = (a, b) => createPoint(a.x + b.x, a.y + b.y);\nfunction isPoint(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\");\n}\nfunction createRect(r) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = r;\n  const midX = x + width / 2;\n  const midY = y + height / 2;\n  return {\n    x,\n    y,\n    width,\n    height,\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height,\n    midX,\n    midY,\n    center: createPoint(midX, midY)\n  };\n}\nfunction isRect(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\") && Reflect.has(v, \"width\") && Reflect.has(v, \"height\");\n}\nfunction getRectCenters(v) {\n  const top = createPoint(v.midX, v.minY);\n  const right = createPoint(v.maxX, v.midY);\n  const bottom = createPoint(v.midX, v.maxY);\n  const left = createPoint(v.minX, v.midY);\n  return {\n    top,\n    right,\n    bottom,\n    left\n  };\n}\nfunction getRectCorners(v) {\n  const top = createPoint(v.minX, v.minY);\n  const right = createPoint(v.maxX, v.minY);\n  const bottom = createPoint(v.maxX, v.maxY);\n  const left = createPoint(v.minX, v.maxY);\n  return {\n    top,\n    right,\n    bottom,\n    left\n  };\n}\nfunction getRectEdges(v) {\n  const c = getRectCorners(v);\n  const top = [c.top, c.right];\n  const right = [c.right, c.bottom];\n  const bottom = [c.left, c.bottom];\n  const left = [c.top, c.left];\n  return {\n    top,\n    right,\n    bottom,\n    left\n  };\n}\n\n// src/intersection.ts\nfunction intersects(a, b) {\n  return a.x < b.maxX && a.y < b.maxY && a.maxX > b.x && a.maxY > b.y;\n}\nfunction intersection(a, b) {\n  const x = Math.max(a.x, b.x);\n  const y = Math.max(a.y, b.y);\n  const x2 = Math.min(a.x + a.width, b.x + b.width);\n  const y2 = Math.min(a.y + a.height, b.y + b.height);\n  return createRect({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y\n  });\n}\nfunction collisions(a, b) {\n  return {\n    top: a.minY <= b.minY,\n    right: a.maxX >= b.maxX,\n    bottom: a.maxY >= b.maxY,\n    left: a.minX <= b.minX\n  };\n}\n\n// src/distance.ts\nfunction distance(a) {\n  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    x: 0,\n    y: 0\n  };\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\nfunction distanceFromPoint(r, p) {\n  let x = 0;\n  let y = 0;\n  if (p.x < r.x) x = r.x - p.x;else if (p.x > r.maxX) x = p.x - r.maxX;\n  if (p.y < r.y) y = r.y - p.y;else if (p.y > r.maxY) y = p.y - r.maxY;\n  return {\n    x,\n    y,\n    value: distance({\n      x,\n      y\n    })\n  };\n}\nfunction distanceFromRect(a, b) {\n  if (intersects(a, b)) return {\n    x: 0,\n    y: 0,\n    value: 0\n  };\n  const left = a.x < b.x ? a : b;\n  const right = b.x < a.x ? a : b;\n  const upper = a.y < b.y ? a : b;\n  const lower = b.y < a.y ? a : b;\n  let x = left.x === right.x ? 0 : right.x - left.maxX;\n  x = Math.max(0, x);\n  let y = upper.y === lower.y ? 0 : lower.y - upper.maxY;\n  y = Math.max(0, y);\n  return {\n    x,\n    y,\n    value: distance({\n      x,\n      y\n    })\n  };\n}\nfunction distanceBtwEdges(a, b) {\n  return {\n    left: b.x - a.x,\n    top: b.y - a.y,\n    right: a.maxX - b.maxX,\n    bottom: a.maxY - b.maxY\n  };\n}\n\n// src/closest.ts\nfunction closest() {\n  for (var _len2 = arguments.length, pts = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    pts[_key2] = arguments[_key2];\n  }\n  return a => {\n    const ds = pts.map(b => distance(b, a));\n    const c = Math.min.apply(Math, ds);\n    return pts[ds.indexOf(c)];\n  };\n}\nfunction closestSideToRect(ref, r) {\n  if (r.maxX <= ref.minX) return \"left\";\n  if (r.minX >= ref.maxX) return \"right\";\n  if (r.maxY <= ref.minY) return \"top\";\n  if (r.minY >= ref.maxY) return \"bottom\";\n  return \"left\";\n}\nfunction closestSideToPoint(ref, p) {\n  const {\n    x,\n    y\n  } = p;\n  const dl = x - ref.minX;\n  const dr = ref.maxX - x;\n  const dt = y - ref.minY;\n  const db = ref.maxY - y;\n  let closest2 = dl;\n  let side = \"left\";\n  if (dr < closest2) {\n    closest2 = dr;\n    side = \"right\";\n  }\n  if (dt < closest2) {\n    closest2 = dt;\n    side = \"top\";\n  }\n  if (db < closest2) {\n    side = \"bottom\";\n  }\n  return side;\n}\n\n// src/constrain.ts\nvar constrainRect = (rect, boundary) => {\n  const left = Math.max(boundary.x, Math.min(rect.x, boundary.x + boundary.width - rect.width));\n  const top = Math.max(boundary.y, Math.min(rect.y, boundary.y + boundary.height - rect.height));\n  return {\n    x: left,\n    y: top,\n    width: Math.min(rect.width, boundary.width),\n    height: Math.min(rect.height, boundary.height)\n  };\n};\n\n// src/contains.ts\nfunction containsPoint(r, p) {\n  return r.minX <= p.x && p.x <= r.maxX && r.minY <= p.y && p.y <= r.maxY;\n}\nfunction containsRect(a, b) {\n  return Object.values(getRectCorners(b)).every(c => containsPoint(a, c));\n}\nfunction contains(r, v) {\n  return isRect(v) ? containsRect(r, v) : containsPoint(r, v);\n}\n\n// src/equality.ts\nvar isSizeEqual = (a, b) => {\n  return a.width === (b === null || b === void 0 ? void 0 : b.width) && a.height === (b === null || b === void 0 ? void 0 : b.height);\n};\nvar isPointEqual = (a, b) => {\n  return a.x === (b === null || b === void 0 ? void 0 : b.x) && a.y === (b === null || b === void 0 ? void 0 : b.y);\n};\nvar isRectEqual = (a, b) => {\n  return isPointEqual(a, b) && isSizeEqual(a, b);\n};\n\n// src/from-element.ts\nvar styleCache = /* @__PURE__ */new WeakMap();\nfunction getCacheComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    const win = el.ownerDocument.defaultView || window;\n    styleCache.set(el, win.getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\nfunction getElementRect(el) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return createRect(getClientRect(el, opts));\n}\nfunction getClientRect(el) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    excludeScrollbar = false,\n    excludeBorders = false\n  } = opts;\n  const {\n    x,\n    y,\n    width,\n    height\n  } = el.getBoundingClientRect();\n  const r = {\n    x,\n    y,\n    width,\n    height\n  };\n  const style = getCacheComputedStyle(el);\n  const {\n    borderLeftWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderBottomWidth\n  } = style;\n  const borderXWidth = sum(borderLeftWidth, borderRightWidth);\n  const borderYWidth = sum(borderTopWidth, borderBottomWidth);\n  if (excludeBorders) {\n    r.width -= borderXWidth;\n    r.height -= borderYWidth;\n    r.x += px(borderLeftWidth);\n    r.y += px(borderTopWidth);\n  }\n  if (excludeScrollbar) {\n    const scrollbarWidth = el.offsetWidth - el.clientWidth - borderXWidth;\n    const scrollbarHeight = el.offsetHeight - el.clientHeight - borderYWidth;\n    r.width -= scrollbarWidth;\n    r.height -= scrollbarHeight;\n  }\n  return r;\n}\nvar px = v => parseFloat(v.replace(\"px\", \"\"));\nvar sum = function () {\n  for (var _len3 = arguments.length, vals = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    vals[_key3] = arguments[_key3];\n  }\n  return vals.reduce((sum2, v) => sum2 + (v ? px(v) : 0), 0);\n};\n\n// src/from-points.ts\nfunction getRectFromPoints() {\n  for (var _len4 = arguments.length, pts = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    pts[_key4] = arguments[_key4];\n  }\n  const xs = pts.map(p => p.x);\n  const ys = pts.map(p => p.y);\n  const x = Math.min(...xs);\n  const y = Math.min(...ys);\n  const width = Math.max(...xs) - x;\n  const height = Math.max(...ys) - y;\n  return createRect({\n    x,\n    y,\n    width,\n    height\n  });\n}\n\n// src/union.ts\nvar {\n  min,\n  max\n} = Math;\nfunction union() {\n  for (var _len5 = arguments.length, rs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    rs[_key5] = arguments[_key5];\n  }\n  const pMin = {\n    x: min(...rs.map(r => r.minX)),\n    y: min(...rs.map(r => r.minY))\n  };\n  const pMax = {\n    x: max(...rs.map(r => r.maxX)),\n    y: max(...rs.map(r => r.maxY))\n  };\n  return getRectFromPoints(pMin, pMax);\n}\n\n// src/from-range.ts\nfunction fromRange(range) {\n  let rs = [];\n  const rects = Array.from(range.getClientRects());\n  if (rects.length) {\n    rs = rs.concat(rects.map(createRect));\n    return union.apply(void 0, rs);\n  }\n  let start = range.startContainer;\n  if (start.nodeType === Node.TEXT_NODE) {\n    start = start.parentNode;\n  }\n  if (start instanceof HTMLElement) {\n    const r = getElementRect(start);\n    rs.push(_objectSpread(_objectSpread({}, r), {}, {\n      x: r.maxX,\n      width: 0\n    }));\n  }\n  return union.apply(void 0, rs);\n}\n\n// src/from-rotation.ts\nfunction toRad(d) {\n  return d % 360 * Math.PI / 180;\n}\nfunction rotate(a, d, c) {\n  const r = toRad(d);\n  const sin = Math.sin(r);\n  const cos = Math.cos(r);\n  const x = a.x - c.x;\n  const y = a.y - c.y;\n  return {\n    x: c.x + x * cos - y * sin,\n    y: c.y + x * sin + y * cos\n  };\n}\nfunction getRotationRect(r, deg) {\n  const rr = Object.values(getRectCorners(r)).map(p => rotate(p, deg, r.center));\n  const xs = rr.map(p => p.x);\n  const ys = rr.map(p => p.y);\n  const minX = Math.min(...xs);\n  const minY = Math.min(...ys);\n  const maxX = Math.max(...xs);\n  const maxY = Math.max(...ys);\n  return createRect({\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  });\n}\n\n// src/from-window.ts\nfunction getWindowRect(win) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return createRect(getViewportRect(win, opts));\n}\nfunction getViewportRect(win, opts) {\n  const {\n    excludeScrollbar = false\n  } = opts;\n  const {\n    innerWidth,\n    innerHeight,\n    document: doc,\n    visualViewport\n  } = win;\n  const width = (visualViewport === null || visualViewport === void 0 ? void 0 : visualViewport.width) || innerWidth;\n  const height = (visualViewport === null || visualViewport === void 0 ? void 0 : visualViewport.height) || innerHeight;\n  const rect = {\n    x: 0,\n    y: 0,\n    width,\n    height\n  };\n  if (excludeScrollbar) {\n    const scrollbarWidth = innerWidth - doc.documentElement.clientWidth;\n    const scrollbarHeight = innerHeight - doc.documentElement.clientHeight;\n    rect.width -= scrollbarWidth;\n    rect.height -= scrollbarHeight;\n  }\n  return rect;\n}\n\n// src/operations.ts\nvar isSymmetric = v => \"dx\" in v || \"dy\" in v;\nfunction inset(r, i) {\n  const v = isSymmetric(i) ? {\n    left: i.dx,\n    right: i.dx,\n    top: i.dy,\n    bottom: i.dy\n  } : i;\n  const {\n    top = 0,\n    right = 0,\n    bottom = 0,\n    left = 0\n  } = v;\n  return createRect({\n    x: r.x + left,\n    y: r.y + top,\n    width: r.width - left - right,\n    height: r.height - top - bottom\n  });\n}\nfunction expand(r, v) {\n  const value = typeof v === \"number\" ? {\n    dx: -v,\n    dy: -v\n  } : v;\n  return inset(r, value);\n}\nfunction shrink(r, v) {\n  const value = typeof v === \"number\" ? {\n    dx: -v,\n    dy: -v\n  } : v;\n  return inset(r, value);\n}\nfunction shift(r, o) {\n  const {\n    x = 0,\n    y = 0\n  } = o;\n  return createRect({\n    x: r.x + x,\n    y: r.y + y,\n    width: r.width,\n    height: r.height\n  });\n}\n\n// src/polygon.ts\nfunction getElementPolygon(rectValue, placement) {\n  const rect = createRect(rectValue);\n  const {\n    top,\n    right,\n    left,\n    bottom\n  } = getRectCorners(rect);\n  const [base] = placement.split(\"-\");\n  return {\n    top: [left, top, right, bottom],\n    right: [top, right, bottom, left],\n    bottom: [top, left, bottom, right],\n    left: [right, top, left, bottom]\n  }[base];\n}\nfunction isPointInPolygon(polygon, point) {\n  const {\n    x,\n    y\n  } = point;\n  let c = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) {\n      c = !c;\n    }\n  }\n  return c;\n}\nfunction createPolygonElement() {\n  const id = \"debug-polygon\";\n  const existingPolygon = document.getElementById(id);\n  if (existingPolygon) {\n    return existingPolygon;\n  }\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  Object.assign(svg.style, {\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: \"0.15\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    fill: \"red\"\n  });\n  const polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n  polygon.setAttribute(\"id\", id);\n  polygon.setAttribute(\"points\", \"0,0 0,0\");\n  svg.appendChild(polygon);\n  document.body.appendChild(svg);\n  return polygon;\n}\nfunction debugPolygon(polygon) {\n  const el = createPolygonElement();\n  const points = polygon.map(point => \"\".concat(point.x, \",\").concat(point.y)).join(\" \");\n  el.setAttribute(\"points\", points);\n  return () => {\n    el.remove();\n  };\n}\n\n// src/compass.ts\nvar compassDirectionMap = {\n  n: {\n    x: 0.5,\n    y: 0\n  },\n  ne: {\n    x: 1,\n    y: 0\n  },\n  e: {\n    x: 1,\n    y: 0.5\n  },\n  se: {\n    x: 1,\n    y: 1\n  },\n  s: {\n    x: 0.5,\n    y: 1\n  },\n  sw: {\n    x: 0,\n    y: 1\n  },\n  w: {\n    x: 0,\n    y: 0.5\n  },\n  nw: {\n    x: 0,\n    y: 0\n  }\n};\nvar oppositeDirectionMap = {\n  n: \"s\",\n  ne: \"sw\",\n  e: \"w\",\n  se: \"nw\",\n  s: \"n\",\n  sw: \"ne\",\n  w: \"e\",\n  nw: \"se\"\n};\n\n// src/resize.ts\nvar {\n  sign,\n  abs,\n  min: min2\n} = Math;\nfunction getRectExtentPoint(rect, direction) {\n  const {\n    minX,\n    minY,\n    maxX,\n    maxY,\n    midX,\n    midY\n  } = rect;\n  const x = direction.includes(\"w\") ? minX : direction.includes(\"e\") ? maxX : midX;\n  const y = direction.includes(\"n\") ? minY : direction.includes(\"s\") ? maxY : midY;\n  return {\n    x,\n    y\n  };\n}\nfunction getOppositeDirection(direction) {\n  return oppositeDirectionMap[direction];\n}\nfunction resizeRect(rect, offset, direction, opts) {\n  const {\n    scalingOriginMode,\n    lockAspectRatio\n  } = opts;\n  const extent = getRectExtentPoint(rect, direction);\n  const oppositeDirection = getOppositeDirection(direction);\n  const oppositeExtent = getRectExtentPoint(rect, oppositeDirection);\n  if (scalingOriginMode === \"center\") {\n    offset = {\n      x: offset.x * 2,\n      y: offset.y * 2\n    };\n  }\n  const newExtent = {\n    x: extent.x + offset.x,\n    y: extent.y + offset.y\n  };\n  const multiplier = {\n    x: compassDirectionMap[direction].x * 2 - 1,\n    y: compassDirectionMap[direction].y * 2 - 1\n  };\n  const newSize = {\n    width: newExtent.x - oppositeExtent.x,\n    height: newExtent.y - oppositeExtent.y\n  };\n  const scaleX = multiplier.x * newSize.width / rect.width;\n  const scaleY = multiplier.y * newSize.height / rect.height;\n  const largestMagnitude = abs(scaleX) > abs(scaleY) ? scaleX : scaleY;\n  const scale = lockAspectRatio ? {\n    x: largestMagnitude,\n    y: largestMagnitude\n  } : {\n    x: extent.x === oppositeExtent.x ? 1 : scaleX,\n    y: extent.y === oppositeExtent.y ? 1 : scaleY\n  };\n  if (extent.y === oppositeExtent.y) {\n    scale.y = abs(scale.y);\n  } else if (sign(scale.y) !== sign(scaleY)) {\n    scale.y *= -1;\n  }\n  if (extent.x === oppositeExtent.x) {\n    scale.x = abs(scale.x);\n  } else if (sign(scale.x) !== sign(scaleX)) {\n    scale.x *= -1;\n  }\n  switch (scalingOriginMode) {\n    case \"extent\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, oppositeExtent), false);\n    case \"center\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, {\n        x: rect.midX,\n        y: rect.midY\n      }), false);\n  }\n}\nfunction createRectFromPoints(initialPoint, finalPoint) {\n  let normalized = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (normalized) {\n    return {\n      x: min2(finalPoint.x, initialPoint.x),\n      y: min2(finalPoint.y, initialPoint.y),\n      width: abs(finalPoint.x - initialPoint.x),\n      height: abs(finalPoint.y - initialPoint.y)\n    };\n  }\n  return {\n    x: initialPoint.x,\n    y: initialPoint.y,\n    width: finalPoint.x - initialPoint.x,\n    height: finalPoint.y - initialPoint.y\n  };\n}\nfunction transformRect(rect, transform) {\n  let normalized = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const p1 = transform.applyTo({\n    x: rect.minX,\n    y: rect.minY\n  });\n  const p2 = transform.applyTo({\n    x: rect.maxX,\n    y: rect.maxY\n  });\n  return createRectFromPoints(p1, p2, normalized);\n}\nexport { AffineTransform, addPoints, alignRect, clampPoint, clampSize, closest, closestSideToPoint, closestSideToRect, collisions, constrainRect, contains, containsPoint, containsRect, createPoint, createRect, debugPolygon, distance, distanceBtwEdges, distanceFromPoint, distanceFromRect, expand, fromRange, getElementPolygon, getElementRect, getPointAngle, getRectCenters, getRectCorners, getRectEdges, getRectFromPoints, getRotationRect, getViewportRect, getWindowRect, inset, intersection, intersects, isPoint, isPointEqual, isPointInPolygon, isRect, isRectEqual, isSizeEqual, isSymmetric, resizeRect, rotate, shift, shrink, subtractPoints, toRad, union };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","AffineTransform","_AffineTransform","constructor","_this","m00","m01","m02","m10","m11","m12","arguments","length","undefined","prepend","rotate","scale","translate","applyTo","point","x","y","other","append","determinant","isInvertible","det","isFinite","invert","array","float32Array","Float32Array","identity","theta","origin","rotation","Math","cos","sin","multiply","sx","sy","tx","ty","_len","_ref","Array","_key","first","rest","reduce","result","item","a","b","c","d","scaleComponents","translationComponents","skewComponents","toString","concat","hAlign","ref","h","minX","width","maxX","midX","_objectSpread","vAlign","v","minY","height","maxY","midY","alignRect","options","getPointAngle","rect","reference","center","deg","atan2","PI","clamp","min3","max2","min","max","clampPoint","position","size","boundaryRect","defaultMinSize","defaultMaxSize","Infinity","clampSize","minSize","maxSize","createPoint","subtractPoints","addPoints","isPoint","Reflect","has","createRect","r","isRect","getRectCenters","top","right","bottom","left","getRectCorners","getRectEdges","intersects","intersection","x2","y2","collisions","distance","sqrt","pow","distanceFromPoint","p","distanceFromRect","upper","lower","distanceBtwEdges","closest","_len2","pts","_key2","ds","map","apply","indexOf","closestSideToRect","closestSideToPoint","dl","dr","dt","db","closest2","side","constrainRect","boundary","containsPoint","containsRect","values","every","contains","isSizeEqual","isPointEqual","isRectEqual","styleCache","WeakMap","getCacheComputedStyle","el","win","ownerDocument","defaultView","window","set","getComputedStyle","get","getElementRect","opts","getClientRect","excludeScrollbar","excludeBorders","getBoundingClientRect","style","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderXWidth","sum","borderYWidth","px","scrollbarWidth","offsetWidth","clientWidth","scrollbarHeight","offsetHeight","clientHeight","parseFloat","replace","_len3","vals","_key3","sum2","getRectFromPoints","_len4","_key4","xs","ys","union","_len5","rs","_key5","pMin","pMax","fromRange","range","rects","from","getClientRects","start","startContainer","nodeType","Node","TEXT_NODE","parentNode","HTMLElement","push","toRad","getRotationRect","rr","getWindowRect","getViewportRect","innerWidth","innerHeight","document","doc","visualViewport","documentElement","isSymmetric","inset","i","dx","dy","expand","shrink","shift","o","getElementPolygon","rectValue","placement","base","split","isPointInPolygon","polygon","j","xi","yi","xj","yj","createPolygonElement","id","existingPolygon","getElementById","svg","createElementNS","assign","opacity","pointerEvents","fill","setAttribute","appendChild","body","debugPolygon","points","join","remove","compassDirectionMap","n","ne","e","se","s","sw","w","nw","oppositeDirectionMap","sign","abs","min2","getRectExtentPoint","direction","includes","getOppositeDirection","resizeRect","offset","scalingOriginMode","lockAspectRatio","extent","oppositeDirection","oppositeExtent","newExtent","multiplier","newSize","scaleX","scaleY","largestMagnitude","transformRect","createRectFromPoints","initialPoint","finalPoint","normalized","transform","p1","p2"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@zag-js/rect-utils/dist/index.mjs"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/affine-transform.ts\nvar AffineTransform = class _AffineTransform {\n  constructor([m00, m01, m02, m10, m11, m12] = [0, 0, 0, 0, 0, 0]) {\n    __publicField(this, \"m00\");\n    __publicField(this, \"m01\");\n    __publicField(this, \"m02\");\n    __publicField(this, \"m10\");\n    __publicField(this, \"m11\");\n    __publicField(this, \"m12\");\n    __publicField(this, \"rotate\", (...args) => {\n      return this.prepend(_AffineTransform.rotate(...args));\n    });\n    __publicField(this, \"scale\", (...args) => {\n      return this.prepend(_AffineTransform.scale(...args));\n    });\n    __publicField(this, \"translate\", (...args) => {\n      return this.prepend(_AffineTransform.translate(...args));\n    });\n    this.m00 = m00;\n    this.m01 = m01;\n    this.m02 = m02;\n    this.m10 = m10;\n    this.m11 = m11;\n    this.m12 = m12;\n  }\n  applyTo(point) {\n    const { x, y } = point;\n    const { m00, m01, m02, m10, m11, m12 } = this;\n    return {\n      x: m00 * x + m01 * y + m02,\n      y: m10 * x + m11 * y + m12\n    };\n  }\n  prepend(other) {\n    return new _AffineTransform([\n      this.m00 * other.m00 + this.m01 * other.m10,\n      // m00\n      this.m00 * other.m01 + this.m01 * other.m11,\n      // m01\n      this.m00 * other.m02 + this.m01 * other.m12 + this.m02,\n      // m02\n      this.m10 * other.m00 + this.m11 * other.m10,\n      // m10\n      this.m10 * other.m01 + this.m11 * other.m11,\n      // m11\n      this.m10 * other.m02 + this.m11 * other.m12 + this.m12\n      // m12\n    ]);\n  }\n  append(other) {\n    return new _AffineTransform([\n      other.m00 * this.m00 + other.m01 * this.m10,\n      // m00\n      other.m00 * this.m01 + other.m01 * this.m11,\n      // m01\n      other.m00 * this.m02 + other.m01 * this.m12 + other.m02,\n      // m02\n      other.m10 * this.m00 + other.m11 * this.m10,\n      // m10\n      other.m10 * this.m01 + other.m11 * this.m11,\n      // m11\n      other.m10 * this.m02 + other.m11 * this.m12 + other.m12\n      // m12\n    ]);\n  }\n  get determinant() {\n    return this.m00 * this.m11 - this.m01 * this.m10;\n  }\n  get isInvertible() {\n    const det = this.determinant;\n    return isFinite(det) && isFinite(this.m02) && isFinite(this.m12) && det !== 0;\n  }\n  invert() {\n    const det = this.determinant;\n    return new _AffineTransform([\n      this.m11 / det,\n      // m00\n      -this.m01 / det,\n      // m01\n      (this.m01 * this.m12 - this.m11 * this.m02) / det,\n      // m02\n      -this.m10 / det,\n      // m10\n      this.m00 / det,\n      // m11\n      (this.m10 * this.m02 - this.m00 * this.m12) / det\n      // m12\n    ]);\n  }\n  get array() {\n    return [this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, 0, 0, 1];\n  }\n  get float32Array() {\n    return new Float32Array(this.array);\n  }\n  // Static\n  static get identity() {\n    return new _AffineTransform([1, 0, 0, 0, 1, 0]);\n  }\n  static rotate(theta, origin) {\n    const rotation = new _AffineTransform([Math.cos(theta), -Math.sin(theta), 0, Math.sin(theta), Math.cos(theta), 0]);\n    if (origin && (origin.x !== 0 || origin.y !== 0)) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        rotation,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return rotation;\n  }\n  static scale(sx, sy = sx, origin = { x: 0, y: 0 }) {\n    const scale = new _AffineTransform([sx, 0, 0, 0, sy, 0]);\n    if (origin.x !== 0 || origin.y !== 0) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        scale,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return scale;\n  }\n  static translate(tx, ty) {\n    return new _AffineTransform([1, 0, tx, 0, 1, ty]);\n  }\n  static multiply(...[first, ...rest]) {\n    if (!first) return _AffineTransform.identity;\n    return rest.reduce((result, item) => result.prepend(item), first);\n  }\n  get a() {\n    return this.m00;\n  }\n  get b() {\n    return this.m10;\n  }\n  get c() {\n    return this.m01;\n  }\n  get d() {\n    return this.m11;\n  }\n  get tx() {\n    return this.m02;\n  }\n  get ty() {\n    return this.m12;\n  }\n  get scaleComponents() {\n    return { x: this.a, y: this.d };\n  }\n  get translationComponents() {\n    return { x: this.tx, y: this.ty };\n  }\n  get skewComponents() {\n    return { x: this.c, y: this.b };\n  }\n  toString() {\n    return `matrix(${this.a}, ${this.b}, ${this.c}, ${this.d}, ${this.tx}, ${this.ty})`;\n  }\n};\n\n// src/align.ts\nfunction hAlign(a, ref, h) {\n  let x = ref.minX;\n  if (h === \"left-inside\") x = ref.minX;\n  if (h === \"left-outside\") x = ref.minX - ref.width;\n  if (h === \"right-inside\") x = ref.maxX - ref.width;\n  if (h === \"right-outside\") x = ref.maxX;\n  if (h === \"center\") x = ref.midX - ref.width / 2;\n  return { ...a, x };\n}\nfunction vAlign(a, ref, v) {\n  let y = ref.minY;\n  if (v === \"top-inside\") y = ref.minY;\n  if (v === \"top-outside\") y = ref.minY - a.height;\n  if (v === \"bottom-inside\") y = ref.maxY - a.height;\n  if (v === \"bottom-outside\") y = ref.maxY;\n  if (v === \"center\") y = ref.midY - a.height / 2;\n  return { ...a, y };\n}\nfunction alignRect(a, ref, options) {\n  const { h, v } = options;\n  return vAlign(hAlign(a, ref, h), ref, v);\n}\n\n// src/angle.ts\nfunction getPointAngle(rect, point, reference = rect.center) {\n  const x = point.x - reference.x;\n  const y = point.y - reference.y;\n  const deg = Math.atan2(x, y) * (180 / Math.PI) + 180;\n  return 360 - deg;\n}\n\n// src/clamp.ts\nvar clamp = (value, min3, max2) => Math.min(Math.max(value, min3), max2);\nvar clampPoint = (position, size, boundaryRect) => {\n  const x = clamp(position.x, boundaryRect.x, boundaryRect.x + boundaryRect.width - size.width);\n  const y = clamp(position.y, boundaryRect.y, boundaryRect.y + boundaryRect.height - size.height);\n  return { x, y };\n};\nvar defaultMinSize = {\n  width: 0,\n  height: 0\n};\nvar defaultMaxSize = {\n  width: Infinity,\n  height: Infinity\n};\nvar clampSize = (size, minSize = defaultMinSize, maxSize = defaultMaxSize) => {\n  return {\n    width: Math.min(Math.max(size.width, minSize.width), maxSize.width),\n    height: Math.min(Math.max(size.height, minSize.height), maxSize.height)\n  };\n};\n\n// src/rect.ts\nvar createPoint = (x, y) => ({ x, y });\nvar subtractPoints = (a, b) => {\n  if (!b) return a;\n  return createPoint(a.x - b.x, a.y - b.y);\n};\nvar addPoints = (a, b) => createPoint(a.x + b.x, a.y + b.y);\nfunction isPoint(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\");\n}\nfunction createRect(r) {\n  const { x, y, width, height } = r;\n  const midX = x + width / 2;\n  const midY = y + height / 2;\n  return {\n    x,\n    y,\n    width,\n    height,\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height,\n    midX,\n    midY,\n    center: createPoint(midX, midY)\n  };\n}\nfunction isRect(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\") && Reflect.has(v, \"width\") && Reflect.has(v, \"height\");\n}\nfunction getRectCenters(v) {\n  const top = createPoint(v.midX, v.minY);\n  const right = createPoint(v.maxX, v.midY);\n  const bottom = createPoint(v.midX, v.maxY);\n  const left = createPoint(v.minX, v.midY);\n  return { top, right, bottom, left };\n}\nfunction getRectCorners(v) {\n  const top = createPoint(v.minX, v.minY);\n  const right = createPoint(v.maxX, v.minY);\n  const bottom = createPoint(v.maxX, v.maxY);\n  const left = createPoint(v.minX, v.maxY);\n  return { top, right, bottom, left };\n}\nfunction getRectEdges(v) {\n  const c = getRectCorners(v);\n  const top = [c.top, c.right];\n  const right = [c.right, c.bottom];\n  const bottom = [c.left, c.bottom];\n  const left = [c.top, c.left];\n  return { top, right, bottom, left };\n}\n\n// src/intersection.ts\nfunction intersects(a, b) {\n  return a.x < b.maxX && a.y < b.maxY && a.maxX > b.x && a.maxY > b.y;\n}\nfunction intersection(a, b) {\n  const x = Math.max(a.x, b.x);\n  const y = Math.max(a.y, b.y);\n  const x2 = Math.min(a.x + a.width, b.x + b.width);\n  const y2 = Math.min(a.y + a.height, b.y + b.height);\n  return createRect({ x, y, width: x2 - x, height: y2 - y });\n}\nfunction collisions(a, b) {\n  return {\n    top: a.minY <= b.minY,\n    right: a.maxX >= b.maxX,\n    bottom: a.maxY >= b.maxY,\n    left: a.minX <= b.minX\n  };\n}\n\n// src/distance.ts\nfunction distance(a, b = { x: 0, y: 0 }) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\nfunction distanceFromPoint(r, p) {\n  let x = 0;\n  let y = 0;\n  if (p.x < r.x) x = r.x - p.x;\n  else if (p.x > r.maxX) x = p.x - r.maxX;\n  if (p.y < r.y) y = r.y - p.y;\n  else if (p.y > r.maxY) y = p.y - r.maxY;\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceFromRect(a, b) {\n  if (intersects(a, b)) return { x: 0, y: 0, value: 0 };\n  const left = a.x < b.x ? a : b;\n  const right = b.x < a.x ? a : b;\n  const upper = a.y < b.y ? a : b;\n  const lower = b.y < a.y ? a : b;\n  let x = left.x === right.x ? 0 : right.x - left.maxX;\n  x = Math.max(0, x);\n  let y = upper.y === lower.y ? 0 : lower.y - upper.maxY;\n  y = Math.max(0, y);\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceBtwEdges(a, b) {\n  return {\n    left: b.x - a.x,\n    top: b.y - a.y,\n    right: a.maxX - b.maxX,\n    bottom: a.maxY - b.maxY\n  };\n}\n\n// src/closest.ts\nfunction closest(...pts) {\n  return (a) => {\n    const ds = pts.map((b) => distance(b, a));\n    const c = Math.min.apply(Math, ds);\n    return pts[ds.indexOf(c)];\n  };\n}\nfunction closestSideToRect(ref, r) {\n  if (r.maxX <= ref.minX) return \"left\";\n  if (r.minX >= ref.maxX) return \"right\";\n  if (r.maxY <= ref.minY) return \"top\";\n  if (r.minY >= ref.maxY) return \"bottom\";\n  return \"left\";\n}\nfunction closestSideToPoint(ref, p) {\n  const { x, y } = p;\n  const dl = x - ref.minX;\n  const dr = ref.maxX - x;\n  const dt = y - ref.minY;\n  const db = ref.maxY - y;\n  let closest2 = dl;\n  let side = \"left\";\n  if (dr < closest2) {\n    closest2 = dr;\n    side = \"right\";\n  }\n  if (dt < closest2) {\n    closest2 = dt;\n    side = \"top\";\n  }\n  if (db < closest2) {\n    side = \"bottom\";\n  }\n  return side;\n}\n\n// src/constrain.ts\nvar constrainRect = (rect, boundary) => {\n  const left = Math.max(boundary.x, Math.min(rect.x, boundary.x + boundary.width - rect.width));\n  const top = Math.max(boundary.y, Math.min(rect.y, boundary.y + boundary.height - rect.height));\n  return {\n    x: left,\n    y: top,\n    width: Math.min(rect.width, boundary.width),\n    height: Math.min(rect.height, boundary.height)\n  };\n};\n\n// src/contains.ts\nfunction containsPoint(r, p) {\n  return r.minX <= p.x && p.x <= r.maxX && r.minY <= p.y && p.y <= r.maxY;\n}\nfunction containsRect(a, b) {\n  return Object.values(getRectCorners(b)).every((c) => containsPoint(a, c));\n}\nfunction contains(r, v) {\n  return isRect(v) ? containsRect(r, v) : containsPoint(r, v);\n}\n\n// src/equality.ts\nvar isSizeEqual = (a, b) => {\n  return a.width === b?.width && a.height === b?.height;\n};\nvar isPointEqual = (a, b) => {\n  return a.x === b?.x && a.y === b?.y;\n};\nvar isRectEqual = (a, b) => {\n  return isPointEqual(a, b) && isSizeEqual(a, b);\n};\n\n// src/from-element.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getCacheComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    const win = el.ownerDocument.defaultView || window;\n    styleCache.set(el, win.getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\nfunction getElementRect(el, opts = {}) {\n  return createRect(getClientRect(el, opts));\n}\nfunction getClientRect(el, opts = {}) {\n  const { excludeScrollbar = false, excludeBorders = false } = opts;\n  const { x, y, width, height } = el.getBoundingClientRect();\n  const r = { x, y, width, height };\n  const style = getCacheComputedStyle(el);\n  const { borderLeftWidth, borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n  const borderXWidth = sum(borderLeftWidth, borderRightWidth);\n  const borderYWidth = sum(borderTopWidth, borderBottomWidth);\n  if (excludeBorders) {\n    r.width -= borderXWidth;\n    r.height -= borderYWidth;\n    r.x += px(borderLeftWidth);\n    r.y += px(borderTopWidth);\n  }\n  if (excludeScrollbar) {\n    const scrollbarWidth = el.offsetWidth - el.clientWidth - borderXWidth;\n    const scrollbarHeight = el.offsetHeight - el.clientHeight - borderYWidth;\n    r.width -= scrollbarWidth;\n    r.height -= scrollbarHeight;\n  }\n  return r;\n}\nvar px = (v) => parseFloat(v.replace(\"px\", \"\"));\nvar sum = (...vals) => vals.reduce((sum2, v) => sum2 + (v ? px(v) : 0), 0);\n\n// src/from-points.ts\nfunction getRectFromPoints(...pts) {\n  const xs = pts.map((p) => p.x);\n  const ys = pts.map((p) => p.y);\n  const x = Math.min(...xs);\n  const y = Math.min(...ys);\n  const width = Math.max(...xs) - x;\n  const height = Math.max(...ys) - y;\n  return createRect({ x, y, width, height });\n}\n\n// src/union.ts\nvar { min, max } = Math;\nfunction union(...rs) {\n  const pMin = {\n    x: min(...rs.map((r) => r.minX)),\n    y: min(...rs.map((r) => r.minY))\n  };\n  const pMax = {\n    x: max(...rs.map((r) => r.maxX)),\n    y: max(...rs.map((r) => r.maxY))\n  };\n  return getRectFromPoints(pMin, pMax);\n}\n\n// src/from-range.ts\nfunction fromRange(range) {\n  let rs = [];\n  const rects = Array.from(range.getClientRects());\n  if (rects.length) {\n    rs = rs.concat(rects.map(createRect));\n    return union.apply(void 0, rs);\n  }\n  let start = range.startContainer;\n  if (start.nodeType === Node.TEXT_NODE) {\n    start = start.parentNode;\n  }\n  if (start instanceof HTMLElement) {\n    const r = getElementRect(start);\n    rs.push({ ...r, x: r.maxX, width: 0 });\n  }\n  return union.apply(void 0, rs);\n}\n\n// src/from-rotation.ts\nfunction toRad(d) {\n  return d % 360 * Math.PI / 180;\n}\nfunction rotate(a, d, c) {\n  const r = toRad(d);\n  const sin = Math.sin(r);\n  const cos = Math.cos(r);\n  const x = a.x - c.x;\n  const y = a.y - c.y;\n  return {\n    x: c.x + x * cos - y * sin,\n    y: c.y + x * sin + y * cos\n  };\n}\nfunction getRotationRect(r, deg) {\n  const rr = Object.values(getRectCorners(r)).map((p) => rotate(p, deg, r.center));\n  const xs = rr.map((p) => p.x);\n  const ys = rr.map((p) => p.y);\n  const minX = Math.min(...xs);\n  const minY = Math.min(...ys);\n  const maxX = Math.max(...xs);\n  const maxY = Math.max(...ys);\n  return createRect({\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  });\n}\n\n// src/from-window.ts\nfunction getWindowRect(win, opts = {}) {\n  return createRect(getViewportRect(win, opts));\n}\nfunction getViewportRect(win, opts) {\n  const { excludeScrollbar = false } = opts;\n  const { innerWidth, innerHeight, document: doc, visualViewport } = win;\n  const width = visualViewport?.width || innerWidth;\n  const height = visualViewport?.height || innerHeight;\n  const rect = { x: 0, y: 0, width, height };\n  if (excludeScrollbar) {\n    const scrollbarWidth = innerWidth - doc.documentElement.clientWidth;\n    const scrollbarHeight = innerHeight - doc.documentElement.clientHeight;\n    rect.width -= scrollbarWidth;\n    rect.height -= scrollbarHeight;\n  }\n  return rect;\n}\n\n// src/operations.ts\nvar isSymmetric = (v) => \"dx\" in v || \"dy\" in v;\nfunction inset(r, i) {\n  const v = isSymmetric(i) ? { left: i.dx, right: i.dx, top: i.dy, bottom: i.dy } : i;\n  const { top = 0, right = 0, bottom = 0, left = 0 } = v;\n  return createRect({\n    x: r.x + left,\n    y: r.y + top,\n    width: r.width - left - right,\n    height: r.height - top - bottom\n  });\n}\nfunction expand(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shrink(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shift(r, o) {\n  const { x = 0, y = 0 } = o;\n  return createRect({\n    x: r.x + x,\n    y: r.y + y,\n    width: r.width,\n    height: r.height\n  });\n}\n\n// src/polygon.ts\nfunction getElementPolygon(rectValue, placement) {\n  const rect = createRect(rectValue);\n  const { top, right, left, bottom } = getRectCorners(rect);\n  const [base] = placement.split(\"-\");\n  return {\n    top: [left, top, right, bottom],\n    right: [top, right, bottom, left],\n    bottom: [top, left, bottom, right],\n    left: [right, top, left, bottom]\n  }[base];\n}\nfunction isPointInPolygon(polygon, point) {\n  const { x, y } = point;\n  let c = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) {\n      c = !c;\n    }\n  }\n  return c;\n}\nfunction createPolygonElement() {\n  const id = \"debug-polygon\";\n  const existingPolygon = document.getElementById(id);\n  if (existingPolygon) {\n    return existingPolygon;\n  }\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  Object.assign(svg.style, {\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: \"0.15\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    fill: \"red\"\n  });\n  const polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n  polygon.setAttribute(\"id\", id);\n  polygon.setAttribute(\"points\", \"0,0 0,0\");\n  svg.appendChild(polygon);\n  document.body.appendChild(svg);\n  return polygon;\n}\nfunction debugPolygon(polygon) {\n  const el = createPolygonElement();\n  const points = polygon.map((point) => `${point.x},${point.y}`).join(\" \");\n  el.setAttribute(\"points\", points);\n  return () => {\n    el.remove();\n  };\n}\n\n// src/compass.ts\nvar compassDirectionMap = {\n  n: { x: 0.5, y: 0 },\n  ne: { x: 1, y: 0 },\n  e: { x: 1, y: 0.5 },\n  se: { x: 1, y: 1 },\n  s: { x: 0.5, y: 1 },\n  sw: { x: 0, y: 1 },\n  w: { x: 0, y: 0.5 },\n  nw: { x: 0, y: 0 }\n};\nvar oppositeDirectionMap = {\n  n: \"s\",\n  ne: \"sw\",\n  e: \"w\",\n  se: \"nw\",\n  s: \"n\",\n  sw: \"ne\",\n  w: \"e\",\n  nw: \"se\"\n};\n\n// src/resize.ts\nvar { sign, abs, min: min2 } = Math;\nfunction getRectExtentPoint(rect, direction) {\n  const { minX, minY, maxX, maxY, midX, midY } = rect;\n  const x = direction.includes(\"w\") ? minX : direction.includes(\"e\") ? maxX : midX;\n  const y = direction.includes(\"n\") ? minY : direction.includes(\"s\") ? maxY : midY;\n  return { x, y };\n}\nfunction getOppositeDirection(direction) {\n  return oppositeDirectionMap[direction];\n}\nfunction resizeRect(rect, offset, direction, opts) {\n  const { scalingOriginMode, lockAspectRatio } = opts;\n  const extent = getRectExtentPoint(rect, direction);\n  const oppositeDirection = getOppositeDirection(direction);\n  const oppositeExtent = getRectExtentPoint(rect, oppositeDirection);\n  if (scalingOriginMode === \"center\") {\n    offset = { x: offset.x * 2, y: offset.y * 2 };\n  }\n  const newExtent = {\n    x: extent.x + offset.x,\n    y: extent.y + offset.y\n  };\n  const multiplier = {\n    x: compassDirectionMap[direction].x * 2 - 1,\n    y: compassDirectionMap[direction].y * 2 - 1\n  };\n  const newSize = {\n    width: newExtent.x - oppositeExtent.x,\n    height: newExtent.y - oppositeExtent.y\n  };\n  const scaleX = multiplier.x * newSize.width / rect.width;\n  const scaleY = multiplier.y * newSize.height / rect.height;\n  const largestMagnitude = abs(scaleX) > abs(scaleY) ? scaleX : scaleY;\n  const scale = lockAspectRatio ? { x: largestMagnitude, y: largestMagnitude } : {\n    x: extent.x === oppositeExtent.x ? 1 : scaleX,\n    y: extent.y === oppositeExtent.y ? 1 : scaleY\n  };\n  if (extent.y === oppositeExtent.y) {\n    scale.y = abs(scale.y);\n  } else if (sign(scale.y) !== sign(scaleY)) {\n    scale.y *= -1;\n  }\n  if (extent.x === oppositeExtent.x) {\n    scale.x = abs(scale.x);\n  } else if (sign(scale.x) !== sign(scaleX)) {\n    scale.x *= -1;\n  }\n  switch (scalingOriginMode) {\n    case \"extent\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, oppositeExtent), false);\n    case \"center\":\n      return transformRect(\n        rect,\n        AffineTransform.scale(scale.x, scale.y, {\n          x: rect.midX,\n          y: rect.midY\n        }),\n        false\n      );\n  }\n}\nfunction createRectFromPoints(initialPoint, finalPoint, normalized = true) {\n  if (normalized) {\n    return {\n      x: min2(finalPoint.x, initialPoint.x),\n      y: min2(finalPoint.y, initialPoint.y),\n      width: abs(finalPoint.x - initialPoint.x),\n      height: abs(finalPoint.y - initialPoint.y)\n    };\n  }\n  return {\n    x: initialPoint.x,\n    y: initialPoint.y,\n    width: finalPoint.x - initialPoint.x,\n    height: finalPoint.y - initialPoint.y\n  };\n}\nfunction transformRect(rect, transform, normalized = true) {\n  const p1 = transform.applyTo({ x: rect.minX, y: rect.minY });\n  const p2 = transform.applyTo({ x: rect.maxX, y: rect.maxY });\n  return createRectFromPoints(p1, p2, normalized);\n}\n\nexport { AffineTransform, addPoints, alignRect, clampPoint, clampSize, closest, closestSideToPoint, closestSideToRect, collisions, constrainRect, contains, containsPoint, containsRect, createPoint, createRect, debugPolygon, distance, distanceBtwEdges, distanceFromPoint, distanceFromRect, expand, fromRange, getElementPolygon, getElementRect, getPointAngle, getRectCenters, getRectCorners, getRectEdges, getRectFromPoints, getRotationRect, getViewportRect, getWindowRect, inset, intersection, intersects, isPoint, isPointEqual, isPointInPolygon, isRect, isRectEqual, isSizeEqual, isSymmetric, resizeRect, rotate, shift, shrink, subtractPoints, toRad, union };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}