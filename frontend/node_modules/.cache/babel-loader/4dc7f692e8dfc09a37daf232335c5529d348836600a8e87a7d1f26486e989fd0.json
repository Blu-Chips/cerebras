{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useState, useEffect } from 'react';\nimport { useCallbackRef } from './use-callback-ref.js';\nfunction listen(query, callback) {\n  try {\n    query.addEventListener(\"change\", callback);\n    return () => query.removeEventListener(\"change\", callback);\n  } catch (e) {\n    query.addListener(callback);\n    return () => query.removeListener(callback);\n  }\n}\nfunction useMediaQuery(query) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    fallback: _fallback = [],\n    ssr = true,\n    getWindow\n  } = options;\n  const getWin = useCallbackRef(getWindow);\n  const queries = Array.isArray(query) ? query : [query];\n  const fallback = _fallback === null || _fallback === void 0 ? void 0 : _fallback.filter(v => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => {\n      if (!ssr) {\n        var _getWindow;\n        const {\n          media,\n          matches\n        } = ((_getWindow = getWindow === null || getWindow === void 0 ? void 0 : getWindow()) !== null && _getWindow !== void 0 ? _getWindow : window).matchMedia(query2);\n        return {\n          media,\n          matches\n        };\n      }\n      return {\n        media: query2,\n        matches: !!fallback[index]\n      };\n    });\n  });\n  useEffect(() => {\n    var _getWin;\n    const win = (_getWin = getWin()) !== null && _getWin !== void 0 ? _getWin : window;\n    setValue(prev => {\n      const current = queries.map(query2 => {\n        const {\n          media,\n          matches\n        } = win.matchMedia(query2);\n        return {\n          media,\n          matches\n        };\n      });\n      return prev.every((v, i) => v.matches === current[i].matches && v.media === current[i].media) ? prev : current;\n    });\n    const mql = queries.map(query2 => win.matchMedia(query2));\n    const handler = evt => {\n      setValue(prev => {\n        return prev.slice().map(item => {\n          if (item.media === evt.media) return _objectSpread(_objectSpread({}, item), {}, {\n            matches: evt.matches\n          });\n          return item;\n        });\n      });\n    };\n    const cleanups = mql.map(v => listen(v, handler));\n    return () => cleanups.forEach(fn => fn());\n  }, [getWin]);\n  return value.map(item => item.matches);\n}\nexport { useMediaQuery };","map":{"version":3,"names":["_objectSpread","useState","useEffect","useCallbackRef","listen","query","callback","addEventListener","removeEventListener","e","addListener","removeListener","useMediaQuery","options","arguments","length","undefined","fallback","_fallback","ssr","getWindow","getWin","queries","Array","isArray","filter","v","value","setValue","map","query2","index","_getWindow","media","matches","window","matchMedia","_getWin","win","prev","current","every","i","mql","handler","evt","slice","item","cleanups","forEach","fn"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@chakra-ui/react/dist/esm/hooks/use-media-query.js"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { useState, useEffect } from 'react';\nimport { useCallbackRef } from './use-callback-ref.js';\n\nfunction listen(query, callback) {\n  try {\n    query.addEventListener(\"change\", callback);\n    return () => query.removeEventListener(\"change\", callback);\n  } catch (e) {\n    query.addListener(callback);\n    return () => query.removeListener(callback);\n  }\n}\nfunction useMediaQuery(query, options = {}) {\n  const { fallback: _fallback = [], ssr = true, getWindow } = options;\n  const getWin = useCallbackRef(getWindow);\n  const queries = Array.isArray(query) ? query : [query];\n  const fallback = _fallback?.filter((v) => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => {\n      if (!ssr) {\n        const { media, matches } = (getWindow?.() ?? window).matchMedia(query2);\n        return { media, matches };\n      }\n      return { media: query2, matches: !!fallback[index] };\n    });\n  });\n  useEffect(() => {\n    const win = getWin() ?? window;\n    setValue((prev) => {\n      const current = queries.map((query2) => {\n        const { media, matches } = win.matchMedia(query2);\n        return { media, matches };\n      });\n      return prev.every(\n        (v, i) => v.matches === current[i].matches && v.media === current[i].media\n      ) ? prev : current;\n    });\n    const mql = queries.map((query2) => win.matchMedia(query2));\n    const handler = (evt) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media) return { ...item, matches: evt.matches };\n          return item;\n        });\n      });\n    };\n    const cleanups = mql.map((v) => listen(v, handler));\n    return () => cleanups.forEach((fn) => fn());\n  }, [getWin]);\n  return value.map((item) => item.matches);\n}\n\nexport { useMediaQuery };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}