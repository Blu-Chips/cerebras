{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"unstyled\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { useMemo, forwardRef } from 'react';\nimport { createContext } from '../create-context.js';\nimport { mergeProps } from '../merge-props.js';\nimport { cx } from '../utils/cx.js';\nimport { EMPTY_STYLES } from './empty.js';\nimport { chakra } from './factory.js';\nimport { useRecipe } from './use-recipe.js';\nconst upperFirst = str => str.charAt(0).toUpperCase() + str.slice(1);\nfunction createRecipeContext(options) {\n  const {\n    key: recipeKey,\n    recipe: recipeConfig\n  } = options;\n  const contextName = upperFirst(recipeKey || recipeConfig.className || \"Component\");\n  const [PropsProvider, usePropsContext] = createContext({\n    strict: false,\n    name: \"\".concat(contextName, \"PropsContext\"),\n    providerName: \"\".concat(contextName, \"PropsContext\")\n  });\n  function useRecipeResult(props) {\n    const {\n        unstyled\n      } = props,\n      restProps = _objectWithoutProperties(props, _excluded);\n    const recipe = useRecipe({\n      key: recipeKey,\n      recipe: restProps.recipe || recipeConfig\n    });\n    const [variantProps, otherProps] = useMemo(() => recipe.splitVariantProps(restProps), [recipe, restProps]);\n    const styles = unstyled ? EMPTY_STYLES : recipe(variantProps);\n    return {\n      styles,\n      className: recipe.className,\n      props: otherProps\n    };\n  }\n  const withContext = (Component, options2) => {\n    const SuperComponent = chakra(Component, {}, options2);\n    const StyledComponent = forwardRef((inProps, ref) => {\n      const propsContext = usePropsContext();\n      const props = useMemo(() => mergeProps(propsContext, inProps), [inProps, propsContext]);\n      const {\n        styles,\n        className,\n        props: localProps\n      } = useRecipeResult(props);\n      return /* @__PURE__ */jsx(SuperComponent, _objectSpread(_objectSpread({}, localProps), {}, {\n        ref,\n        css: [styles, props.css],\n        className: cx(className, props.className)\n      }));\n    });\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  };\n  function withPropsProvider() {\n    return PropsProvider;\n  }\n  return {\n    withContext,\n    PropsProvider,\n    withPropsProvider,\n    usePropsContext,\n    useRecipeResult\n  };\n}\nexport { createRecipeContext };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","jsx","useMemo","forwardRef","createContext","mergeProps","cx","EMPTY_STYLES","chakra","useRecipe","upperFirst","str","charAt","toUpperCase","slice","createRecipeContext","options","key","recipeKey","recipe","recipeConfig","contextName","className","PropsProvider","usePropsContext","strict","name","concat","providerName","useRecipeResult","props","unstyled","restProps","variantProps","otherProps","splitVariantProps","styles","withContext","Component","options2","SuperComponent","StyledComponent","inProps","ref","propsContext","localProps","css","displayName","withPropsProvider"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@chakra-ui/react/dist/esm/styled-system/create-recipe-context.js"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useMemo, forwardRef } from 'react';\nimport { createContext } from '../create-context.js';\nimport { mergeProps } from '../merge-props.js';\nimport { cx } from '../utils/cx.js';\nimport { EMPTY_STYLES } from './empty.js';\nimport { chakra } from './factory.js';\nimport { useRecipe } from './use-recipe.js';\n\nconst upperFirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);\nfunction createRecipeContext(options) {\n  const { key: recipeKey, recipe: recipeConfig } = options;\n  const contextName = upperFirst(\n    recipeKey || recipeConfig.className || \"Component\"\n  );\n  const [PropsProvider, usePropsContext] = createContext({\n    strict: false,\n    name: `${contextName}PropsContext`,\n    providerName: `${contextName}PropsContext`\n  });\n  function useRecipeResult(props) {\n    const { unstyled, ...restProps } = props;\n    const recipe = useRecipe({\n      key: recipeKey,\n      recipe: restProps.recipe || recipeConfig\n    });\n    const [variantProps, otherProps] = useMemo(\n      () => recipe.splitVariantProps(restProps),\n      [recipe, restProps]\n    );\n    const styles = unstyled ? EMPTY_STYLES : recipe(variantProps);\n    return {\n      styles,\n      className: recipe.className,\n      props: otherProps\n    };\n  }\n  const withContext = (Component, options2) => {\n    const SuperComponent = chakra(Component, {}, options2);\n    const StyledComponent = forwardRef((inProps, ref) => {\n      const propsContext = usePropsContext();\n      const props = useMemo(\n        () => mergeProps(propsContext, inProps),\n        [inProps, propsContext]\n      );\n      const { styles, className, props: localProps } = useRecipeResult(props);\n      return /* @__PURE__ */ jsx(\n        SuperComponent,\n        {\n          ...localProps,\n          ref,\n          css: [styles, props.css],\n          className: cx(className, props.className)\n        }\n      );\n    });\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  };\n  function withPropsProvider() {\n    return PropsProvider;\n  }\n  return {\n    withContext,\n    PropsProvider,\n    withPropsProvider,\n    usePropsContext,\n    useRecipeResult\n  };\n}\n\nexport { createRecipeContext };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}