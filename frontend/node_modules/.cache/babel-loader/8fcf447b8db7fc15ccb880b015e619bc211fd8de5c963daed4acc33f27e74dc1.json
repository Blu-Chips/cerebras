{"ast":null,"code":"\"use strict\";\n\nimport { isString } from '../utils/is.js';\nconst REFERENCE_REGEX = /({([^}]*)})/g;\nconst CURLY_REGEX = /[{}]/g;\nconst TOKEN_PATH_REGEX = /\\w+\\.\\w+/;\nconst getReferences = value => {\n  if (!isString(value)) return [];\n  const matches = value.match(REFERENCE_REGEX);\n  if (!matches) return [];\n  return matches.map(match => match.replace(CURLY_REGEX, \"\")).map(value2 => value2.trim());\n};\nconst hasReference = value => REFERENCE_REGEX.test(value);\nfunction expandReferences(token) {\n  var _token$extensions, _token$extensions$ref;\n  if (!((_token$extensions = token.extensions) !== null && _token$extensions !== void 0 && _token$extensions.references)) {\n    var _token$extensions$css, _token$extensions2;\n    return (_token$extensions$css = (_token$extensions2 = token.extensions) === null || _token$extensions2 === void 0 || (_token$extensions2 = _token$extensions2.cssVar) === null || _token$extensions2 === void 0 ? void 0 : _token$extensions2.ref) !== null && _token$extensions$css !== void 0 ? _token$extensions$css : token.value;\n  }\n  const references = (_token$extensions$ref = token.extensions.references) !== null && _token$extensions$ref !== void 0 ? _token$extensions$ref : {};\n  token.value = Object.keys(references).reduce((valueStr, key) => {\n    const referenceToken = references[key];\n    if (referenceToken.extensions.conditions) {\n      return valueStr;\n    }\n    const value = expandReferences(referenceToken);\n    return valueStr.replace(\"{\".concat(key, \"}\"), value);\n  }, token.value);\n  delete token.extensions.references;\n  return token.value;\n}\nexport { TOKEN_PATH_REGEX, expandReferences, getReferences, hasReference };","map":{"version":3,"names":["isString","REFERENCE_REGEX","CURLY_REGEX","TOKEN_PATH_REGEX","getReferences","value","matches","match","map","replace","value2","trim","hasReference","test","expandReferences","token","_token$extensions","_token$extensions$ref","extensions","references","_token$extensions$css","_token$extensions2","cssVar","ref","Object","keys","reduce","valueStr","key","referenceToken","conditions","concat"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@chakra-ui/react/dist/esm/styled-system/references.js"],"sourcesContent":["\"use strict\";\nimport { isString } from '../utils/is.js';\n\nconst REFERENCE_REGEX = /({([^}]*)})/g;\nconst CURLY_REGEX = /[{}]/g;\nconst TOKEN_PATH_REGEX = /\\w+\\.\\w+/;\nconst getReferences = (value) => {\n  if (!isString(value)) return [];\n  const matches = value.match(REFERENCE_REGEX);\n  if (!matches) return [];\n  return matches.map((match) => match.replace(CURLY_REGEX, \"\")).map((value2) => value2.trim());\n};\nconst hasReference = (value) => REFERENCE_REGEX.test(value);\nfunction expandReferences(token) {\n  if (!token.extensions?.references) {\n    return token.extensions?.cssVar?.ref ?? token.value;\n  }\n  const references = token.extensions.references ?? {};\n  token.value = Object.keys(references).reduce((valueStr, key) => {\n    const referenceToken = references[key];\n    if (referenceToken.extensions.conditions) {\n      return valueStr;\n    }\n    const value = expandReferences(referenceToken);\n    return valueStr.replace(`{${key}}`, value);\n  }, token.value);\n  delete token.extensions.references;\n  return token.value;\n}\n\nexport { TOKEN_PATH_REGEX, expandReferences, getReferences, hasReference };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,QAAQ,gBAAgB;AAEzC,MAAMC,eAAe,GAAG,cAAc;AACtC,MAAMC,WAAW,GAAG,OAAO;AAC3B,MAAMC,gBAAgB,GAAG,UAAU;AACnC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,IAAI,CAACL,QAAQ,CAACK,KAAK,CAAC,EAAE,OAAO,EAAE;EAC/B,MAAMC,OAAO,GAAGD,KAAK,CAACE,KAAK,CAACN,eAAe,CAAC;EAC5C,IAAI,CAACK,OAAO,EAAE,OAAO,EAAE;EACvB,OAAOA,OAAO,CAACE,GAAG,CAAED,KAAK,IAAKA,KAAK,CAACE,OAAO,CAACP,WAAW,EAAE,EAAE,CAAC,CAAC,CAACM,GAAG,CAAEE,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC;AAC9F,CAAC;AACD,MAAMC,YAAY,GAAIP,KAAK,IAAKJ,eAAe,CAACY,IAAI,CAACR,KAAK,CAAC;AAC3D,SAASS,gBAAgBA,CAACC,KAAK,EAAE;EAAA,IAAAC,iBAAA,EAAAC,qBAAA;EAC/B,IAAI,GAAAD,iBAAA,GAACD,KAAK,CAACG,UAAU,cAAAF,iBAAA,eAAhBA,iBAAA,CAAkBG,UAAU,GAAE;IAAA,IAAAC,qBAAA,EAAAC,kBAAA;IACjC,QAAAD,qBAAA,IAAAC,kBAAA,GAAON,KAAK,CAACG,UAAU,cAAAG,kBAAA,gBAAAA,kBAAA,GAAhBA,kBAAA,CAAkBC,MAAM,cAAAD,kBAAA,uBAAxBA,kBAAA,CAA0BE,GAAG,cAAAH,qBAAA,cAAAA,qBAAA,GAAIL,KAAK,CAACV,KAAK;EACrD;EACA,MAAMc,UAAU,IAAAF,qBAAA,GAAGF,KAAK,CAACG,UAAU,CAACC,UAAU,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAC;EACpDF,KAAK,CAACV,KAAK,GAAGmB,MAAM,CAACC,IAAI,CAACN,UAAU,CAAC,CAACO,MAAM,CAAC,CAACC,QAAQ,EAAEC,GAAG,KAAK;IAC9D,MAAMC,cAAc,GAAGV,UAAU,CAACS,GAAG,CAAC;IACtC,IAAIC,cAAc,CAACX,UAAU,CAACY,UAAU,EAAE;MACxC,OAAOH,QAAQ;IACjB;IACA,MAAMtB,KAAK,GAAGS,gBAAgB,CAACe,cAAc,CAAC;IAC9C,OAAOF,QAAQ,CAAClB,OAAO,KAAAsB,MAAA,CAAKH,GAAG,QAAKvB,KAAK,CAAC;EAC5C,CAAC,EAAEU,KAAK,CAACV,KAAK,CAAC;EACf,OAAOU,KAAK,CAACG,UAAU,CAACC,UAAU;EAClC,OAAOJ,KAAK,CAACV,KAAK;AACpB;AAEA,SAASF,gBAAgB,EAAEW,gBAAgB,EAAEV,aAAa,EAAEQ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}