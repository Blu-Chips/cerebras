{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"indeterminate\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useCheckboxContext } from './use-checkbox-context.js';\nconst CheckboxIndicator = forwardRef((props, ref) => {\n  const {\n      indeterminate\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const checkbox = useCheckboxContext();\n  const mergedProps = mergeProps(checkbox.getIndicatorProps(), rest);\n  const isVisible = indeterminate ? checkbox.indeterminate : checkbox.checked;\n  return /* @__PURE__ */jsx(ark.div, _objectSpread(_objectSpread({}, mergedProps), {}, {\n    hidden: !isVisible,\n    ref\n  }));\n});\nCheckboxIndicator.displayName = \"CheckboxIndicator\";\nexport { CheckboxIndicator };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","jsx","mergeProps","forwardRef","ark","useCheckboxContext","CheckboxIndicator","props","ref","indeterminate","rest","checkbox","mergedProps","getIndicatorProps","isVisible","checked","div","hidden","displayName"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@ark-ui/react/dist/components/checkbox/checkbox-indicator.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useCheckboxContext } from './use-checkbox-context.js';\n\nconst CheckboxIndicator = forwardRef((props, ref) => {\n  const { indeterminate, ...rest } = props;\n  const checkbox = useCheckboxContext();\n  const mergedProps = mergeProps(checkbox.getIndicatorProps(), rest);\n  const isVisible = indeterminate ? checkbox.indeterminate : checkbox.checked;\n  return /* @__PURE__ */ jsx(ark.div, { ...mergedProps, hidden: !isVisible, ref });\n});\nCheckboxIndicator.displayName = \"CheckboxIndicator\";\n\nexport { CheckboxIndicator };\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AAAA,OAAAC,wBAAA;AAAA,MAAAC,SAAA;AACb,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,kBAAkB,QAAQ,2BAA2B;AAE9D,MAAMC,iBAAiB,GAAGH,UAAU,CAAC,CAACI,KAAK,EAAEC,GAAG,KAAK;EACnD,MAAM;MAAEC;IAAuB,CAAC,GAAGF,KAAK;IAAdG,IAAI,GAAAX,wBAAA,CAAKQ,KAAK,EAAAP,SAAA;EACxC,MAAMW,QAAQ,GAAGN,kBAAkB,CAAC,CAAC;EACrC,MAAMO,WAAW,GAAGV,UAAU,CAACS,QAAQ,CAACE,iBAAiB,CAAC,CAAC,EAAEH,IAAI,CAAC;EAClE,MAAMI,SAAS,GAAGL,aAAa,GAAGE,QAAQ,CAACF,aAAa,GAAGE,QAAQ,CAACI,OAAO;EAC3E,OAAO,eAAgBd,GAAG,CAACG,GAAG,CAACY,GAAG,EAAAlB,aAAA,CAAAA,aAAA,KAAOc,WAAW;IAAEK,MAAM,EAAE,CAACH,SAAS;IAAEN;EAAG,EAAE,CAAC;AAClF,CAAC,CAAC;AACFF,iBAAiB,CAACY,WAAW,GAAG,mBAAmB;AAEnD,SAASZ,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}