{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"fallback\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/core';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useFieldContext } from './use-field-context.js';\nconst FieldRequiredIndicator = forwardRef((_ref, ref) => {\n  var _props$children;\n  let {\n      fallback\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const field = useFieldContext();\n  if (!field.required) {\n    return fallback;\n  }\n  const mergedProps = mergeProps(field.getRequiredIndicatorProps(), props);\n  return /* @__PURE__ */jsx(ark.span, _objectSpread(_objectSpread({}, mergedProps), {}, {\n    ref,\n    children: (_props$children = props.children) !== null && _props$children !== void 0 ? _props$children : \"*\"\n  }));\n});\nFieldRequiredIndicator.displayName = \"FieldRequiredIndicator\";\nexport { FieldRequiredIndicator };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","jsx","mergeProps","forwardRef","ark","useFieldContext","FieldRequiredIndicator","_ref","ref","_props$children","fallback","props","field","required","mergedProps","getRequiredIndicatorProps","span","children","displayName"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@ark-ui/react/dist/components/field/field-required-indicator.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/core';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useFieldContext } from './use-field-context.js';\n\nconst FieldRequiredIndicator = forwardRef(\n  ({ fallback, ...props }, ref) => {\n    const field = useFieldContext();\n    if (!field.required) {\n      return fallback;\n    }\n    const mergedProps = mergeProps(field.getRequiredIndicatorProps(), props);\n    return /* @__PURE__ */ jsx(ark.span, { ...mergedProps, ref, children: props.children ?? \"*\" });\n  }\n);\nFieldRequiredIndicator.displayName = \"FieldRequiredIndicator\";\n\nexport { FieldRequiredIndicator };\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AAAA,OAAAC,wBAAA;AAAA,MAAAC,SAAA;AACb,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,eAAe,QAAQ,wBAAwB;AAExD,MAAMC,sBAAsB,GAAGH,UAAU,CACvC,CAAAI,IAAA,EAAyBC,GAAG,KAAK;EAAA,IAAAC,eAAA;EAAA,IAAhC;MAAEC;IAAmB,CAAC,GAAAH,IAAA;IAAPI,KAAK,GAAAZ,wBAAA,CAAAQ,IAAA,EAAAP,SAAA;EACnB,MAAMY,KAAK,GAAGP,eAAe,CAAC,CAAC;EAC/B,IAAI,CAACO,KAAK,CAACC,QAAQ,EAAE;IACnB,OAAOH,QAAQ;EACjB;EACA,MAAMI,WAAW,GAAGZ,UAAU,CAACU,KAAK,CAACG,yBAAyB,CAAC,CAAC,EAAEJ,KAAK,CAAC;EACxE,OAAO,eAAgBV,GAAG,CAACG,GAAG,CAACY,IAAI,EAAAlB,aAAA,CAAAA,aAAA,KAAOgB,WAAW;IAAEN,GAAG;IAAES,QAAQ,GAAAR,eAAA,GAAEE,KAAK,CAACM,QAAQ,cAAAR,eAAA,cAAAA,eAAA,GAAI;EAAG,EAAE,CAAC;AAChG,CACF,CAAC;AACDH,sBAAsB,CAACY,WAAW,GAAG,wBAAwB;AAE7D,SAASZ,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}