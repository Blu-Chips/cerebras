{"ast":null,"code":"import _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { jsx } from 'react/jsx-runtime';\nimport { Fragment } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { useHighlight } from './use-highlight.js';\nconst Highlight = props => {\n  if (typeof props.text !== \"string\") {\n    throw new Error(\"[ark-ui/highlight] text must be a string\");\n  }\n  const [highlightProps, localProps] = createSplitProps()(props, [\"query\", \"text\", \"ignoreCase\", \"matchAll\", \"exactMatch\"]);\n  const chunks = useHighlight(highlightProps);\n  return /* @__PURE__ */jsx(Fragment, {\n    children: chunks.map((_ref, i) => {\n      let {\n        text,\n        match\n      } = _ref;\n      return match ? /* @__PURE__ */jsx(\"mark\", _objectSpread(_objectSpread({}, localProps), {}, {\n        children: text\n      }), i) : /* @__PURE__ */jsx(Fragment, {\n        children: text\n      }, i);\n    })\n  });\n};\nexport { Highlight };","map":{"version":3,"names":["jsx","Fragment","createSplitProps","useHighlight","Highlight","props","text","Error","highlightProps","localProps","chunks","children","map","_ref","i","match","_objectSpread"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@ark-ui/react/dist/components/highlight/highlight.js"],"sourcesContent":["import { jsx } from 'react/jsx-runtime';\nimport { Fragment } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { useHighlight } from './use-highlight.js';\n\nconst Highlight = (props) => {\n  if (typeof props.text !== \"string\") {\n    throw new Error(\"[ark-ui/highlight] text must be a string\");\n  }\n  const [highlightProps, localProps] = createSplitProps()(props, [\n    \"query\",\n    \"text\",\n    \"ignoreCase\",\n    \"matchAll\",\n    \"exactMatch\"\n  ]);\n  const chunks = useHighlight(highlightProps);\n  return /* @__PURE__ */ jsx(Fragment, { children: chunks.map(\n    ({ text, match }, i) => match ? /* @__PURE__ */ jsx(\"mark\", { ...localProps, children: text }, i) : /* @__PURE__ */ jsx(Fragment, { children: text }, i)\n  ) });\n};\n\nexport { Highlight };\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B,IAAI,OAAOA,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EAC7D;EACA,MAAM,CAACC,cAAc,EAAEC,UAAU,CAAC,GAAGP,gBAAgB,CAAC,CAAC,CAACG,KAAK,EAAE,CAC7D,OAAO,EACP,MAAM,EACN,YAAY,EACZ,UAAU,EACV,YAAY,CACb,CAAC;EACF,MAAMK,MAAM,GAAGP,YAAY,CAACK,cAAc,CAAC;EAC3C,OAAO,eAAgBR,GAAG,CAACC,QAAQ,EAAE;IAAEU,QAAQ,EAAED,MAAM,CAACE,GAAG,CACzD,CAAAC,IAAA,EAAkBC,CAAC;MAAA,IAAlB;QAAER,IAAI;QAAES;MAAM,CAAC,GAAAF,IAAA;MAAA,OAAQE,KAAK,GAAG,eAAgBf,GAAG,CAAC,MAAM,EAAAgB,aAAA,CAAAA,aAAA,KAAOP,UAAU;QAAEE,QAAQ,EAAEL;MAAI,IAAIQ,CAAC,CAAC,GAAG,eAAgBd,GAAG,CAACC,QAAQ,EAAE;QAAEU,QAAQ,EAAEL;MAAK,CAAC,EAAEQ,CAAC,CAAC;IAAA,CAC1J;EAAE,CAAC,CAAC;AACN,CAAC;AAED,SAASV,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}