{"ast":null,"code":"\"use strict\";\n\nimport _taggedTemplateLiteral from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _templateObject;\nconst BASE_FONT_SIZE = 16;\nconst UNIT_PX = \"px\";\nconst UNIT_EM = \"em\";\nconst UNIT_REM = \"rem\";\nfunction getUnit() {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  const DIGIT_REGEX = new RegExp(String.raw(_templateObject || (_templateObject = _taggedTemplateLiteral([\"-?d+(?:.d+|d*)\"], [\"-?\\\\d+(?:\\\\.\\\\d+|\\\\d*)\"]))));\n  const UNIT_REGEX = new RegExp(\"\".concat(UNIT_PX, \"|\").concat(UNIT_EM, \"|\").concat(UNIT_REM));\n  const unit = value.match(new RegExp(\"\".concat(DIGIT_REGEX.source, \"(\").concat(UNIT_REGEX.source, \")\")));\n  return unit === null || unit === void 0 ? void 0 : unit[1];\n}\nfunction toPx() {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  if (typeof value === \"number\") {\n    return \"\".concat(value, \"px\");\n  }\n  const unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_PX) {\n    return value;\n  }\n  if (unit === UNIT_EM || unit === UNIT_REM) {\n    return \"\".concat(parseFloat(value) * BASE_FONT_SIZE).concat(UNIT_PX);\n  }\n}\nfunction toEm() {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let fontSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_FONT_SIZE;\n  const unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_EM) {\n    return value;\n  }\n  if (unit === UNIT_PX) {\n    return \"\".concat(parseFloat(value) / fontSize).concat(UNIT_EM);\n  }\n  if (unit === UNIT_REM) {\n    return \"\".concat(parseFloat(value) * BASE_FONT_SIZE / fontSize).concat(UNIT_EM);\n  }\n}\nfunction toRem() {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  const unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_REM) {\n    return value;\n  }\n  if (unit === UNIT_EM) {\n    return \"\".concat(parseFloat(value)).concat(UNIT_REM);\n  }\n  if (unit === UNIT_PX) {\n    return \"\".concat(parseFloat(value) / BASE_FONT_SIZE).concat(UNIT_REM);\n  }\n}\nexport { getUnit, toEm, toPx, toRem };","map":{"version":3,"names":["_taggedTemplateLiteral","_templateObject","BASE_FONT_SIZE","UNIT_PX","UNIT_EM","UNIT_REM","getUnit","value","arguments","length","undefined","DIGIT_REGEX","RegExp","String","raw","UNIT_REGEX","concat","unit","match","source","toPx","parseFloat","toEm","fontSize","toRem"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@chakra-ui/react/dist/esm/styled-system/unit-conversion.js"],"sourcesContent":["\"use strict\";\nconst BASE_FONT_SIZE = 16;\nconst UNIT_PX = \"px\";\nconst UNIT_EM = \"em\";\nconst UNIT_REM = \"rem\";\nfunction getUnit(value = \"\") {\n  const DIGIT_REGEX = new RegExp(String.raw`-?\\d+(?:\\.\\d+|\\d*)`);\n  const UNIT_REGEX = new RegExp(`${UNIT_PX}|${UNIT_EM}|${UNIT_REM}`);\n  const unit = value.match(\n    new RegExp(`${DIGIT_REGEX.source}(${UNIT_REGEX.source})`)\n  );\n  return unit?.[1];\n}\nfunction toPx(value = \"\") {\n  if (typeof value === \"number\") {\n    return `${value}px`;\n  }\n  const unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_PX) {\n    return value;\n  }\n  if (unit === UNIT_EM || unit === UNIT_REM) {\n    return `${parseFloat(value) * BASE_FONT_SIZE}${UNIT_PX}`;\n  }\n}\nfunction toEm(value = \"\", fontSize = BASE_FONT_SIZE) {\n  const unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_EM) {\n    return value;\n  }\n  if (unit === UNIT_PX) {\n    return `${parseFloat(value) / fontSize}${UNIT_EM}`;\n  }\n  if (unit === UNIT_REM) {\n    return `${parseFloat(value) * BASE_FONT_SIZE / fontSize}${UNIT_EM}`;\n  }\n}\nfunction toRem(value = \"\") {\n  const unit = getUnit(value);\n  if (!unit) return value;\n  if (unit === UNIT_REM) {\n    return value;\n  }\n  if (unit === UNIT_EM) {\n    return `${parseFloat(value)}${UNIT_REM}`;\n  }\n  if (unit === UNIT_PX) {\n    return `${parseFloat(value) / BASE_FONT_SIZE}${UNIT_REM}`;\n  }\n}\n\nexport { getUnit, toEm, toPx, toRem };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}