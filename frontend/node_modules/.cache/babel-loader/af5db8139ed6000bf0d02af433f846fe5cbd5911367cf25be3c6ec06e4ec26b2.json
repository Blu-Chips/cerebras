{"ast":null,"code":"import _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createAnatomy } from '@zag-js/anatomy';\nimport { trackPointerMove, getRelativePoint, getDataUrl as getDataUrl$1, query, dataAttr, isLeftClick, isModifierKey, getEventTarget } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport getStroke from 'perfect-freehand';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/signature-pad.anatomy.ts\nvar anatomy = createAnatomy(\"signature-pad\").parts(\"root\", \"control\", \"segment\", \"segmentPath\", \"guide\", \"clearTrigger\", \"label\");\nvar parts = anatomy.build();\nvar getRootId = ctx => {\n  var _ctx$ids$root, _ctx$ids;\n  return (_ctx$ids$root = (_ctx$ids = ctx.ids) === null || _ctx$ids === void 0 ? void 0 : _ctx$ids.root) !== null && _ctx$ids$root !== void 0 ? _ctx$ids$root : \"signature-\".concat(ctx.id);\n};\nvar getControlId = ctx => {\n  var _ctx$ids$control, _ctx$ids2;\n  return (_ctx$ids$control = (_ctx$ids2 = ctx.ids) === null || _ctx$ids2 === void 0 ? void 0 : _ctx$ids2.control) !== null && _ctx$ids$control !== void 0 ? _ctx$ids$control : \"signature-control-\".concat(ctx.id);\n};\nvar getLabelId = ctx => {\n  var _ctx$ids$label, _ctx$ids3;\n  return (_ctx$ids$label = (_ctx$ids3 = ctx.ids) === null || _ctx$ids3 === void 0 ? void 0 : _ctx$ids3.label) !== null && _ctx$ids$label !== void 0 ? _ctx$ids$label : \"signature-label-\".concat(ctx.id);\n};\nvar getHiddenInputId = ctx => {\n  var _ctx$ids$hiddenInput, _ctx$ids4;\n  return (_ctx$ids$hiddenInput = (_ctx$ids4 = ctx.ids) === null || _ctx$ids4 === void 0 ? void 0 : _ctx$ids4.hiddenInput) !== null && _ctx$ids$hiddenInput !== void 0 ? _ctx$ids$hiddenInput : \"signature-input-\".concat(ctx.id);\n};\nvar getControlEl = ctx => ctx.getById(getControlId(ctx));\nvar getSegmentEl = ctx => query(getControlEl(ctx), \"[data-part=segment]\");\nvar getDataUrl = (ctx, options) => {\n  return getDataUrl$1(getSegmentEl(ctx), options);\n};\n\n// src/signature-pad.connect.ts\nfunction connect(service, normalize) {\n  const {\n    state,\n    send,\n    prop,\n    computed,\n    context,\n    scope\n  } = service;\n  const drawing = state.matches(\"drawing\");\n  const empty = computed(\"isEmpty\");\n  const interactive = computed(\"isInteractive\");\n  const disabled = !!prop(\"disabled\");\n  const required = !!prop(\"required\");\n  const translations = prop(\"translations\");\n  return {\n    empty,\n    drawing,\n    currentPath: context.get(\"currentPath\"),\n    paths: context.get(\"paths\"),\n    clear() {\n      send({\n        type: \"CLEAR\"\n      });\n    },\n    getDataUrl(type, quality) {\n      if (computed(\"isEmpty\")) return Promise.resolve(\"\");\n      return getDataUrl(scope, {\n        type,\n        quality\n      });\n    },\n    getLabelProps() {\n      return normalize.label(_objectSpread(_objectSpread({}, parts.label.attrs), {}, {\n        id: getLabelId(scope),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-required\": dataAttr(required),\n        htmlFor: getHiddenInputId(scope),\n        onClick(event) {\n          if (!interactive) return;\n          if (event.defaultPrevented) return;\n          const controlEl = getControlEl(scope);\n          controlEl === null || controlEl === void 0 || controlEl.focus({\n            preventScroll: true\n          });\n        }\n      }));\n    },\n    getRootProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.root.attrs), {}, {\n        \"data-disabled\": dataAttr(disabled),\n        id: getRootId(scope)\n      }));\n    },\n    getControlProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.control.attrs), {}, {\n        tabIndex: disabled ? void 0 : 0,\n        id: getControlId(scope),\n        role: \"application\",\n        \"aria-roledescription\": \"signature pad\",\n        \"aria-label\": translations.control,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": dataAttr(disabled),\n        onPointerDown(event) {\n          if (!isLeftClick(event)) return;\n          if (isModifierKey(event)) return;\n          if (!interactive) return;\n          const target = getEventTarget(event);\n          if (target !== null && target !== void 0 && target.closest(\"[data-part=clear-trigger]\")) return;\n          event.currentTarget.setPointerCapture(event.pointerId);\n          const point = {\n            x: event.clientX,\n            y: event.clientY\n          };\n          const controlEl = getControlEl(scope);\n          if (!controlEl) return;\n          const {\n            offset\n          } = getRelativePoint(point, controlEl);\n          send({\n            type: \"POINTER_DOWN\",\n            point: offset,\n            pressure: event.pressure\n          });\n        },\n        onPointerUp(event) {\n          if (!interactive) return;\n          if (event.currentTarget.hasPointerCapture(event.pointerId)) {\n            event.currentTarget.releasePointerCapture(event.pointerId);\n          }\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      }));\n    },\n    getSegmentProps() {\n      return normalize.svg(_objectSpread(_objectSpread({}, parts.segment.attrs), {}, {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          pointerEvents: \"none\",\n          fill: prop(\"drawing\").fill\n        }\n      }));\n    },\n    getSegmentPathProps(props2) {\n      return normalize.path(_objectSpread(_objectSpread({}, parts.segmentPath.attrs), {}, {\n        d: props2.path\n      }));\n    },\n    getGuideProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.guide.attrs), {}, {\n        \"data-disabled\": dataAttr(disabled)\n      }));\n    },\n    getClearTriggerProps() {\n      return normalize.button(_objectSpread(_objectSpread({}, parts.clearTrigger.attrs), {}, {\n        type: \"button\",\n        \"aria-label\": translations.clearTrigger,\n        hidden: !context.get(\"paths\").length || drawing,\n        disabled,\n        onClick() {\n          send({\n            type: \"CLEAR\"\n          });\n        }\n      }));\n    },\n    getHiddenInputProps(props2) {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        type: \"text\",\n        hidden: true,\n        disabled,\n        required: prop(\"required\"),\n        readOnly: true,\n        name: prop(\"name\"),\n        value: props2.value\n      });\n    }\n  };\n}\n\n// src/get-svg-path.ts\nvar average = (a, b) => (a + b) / 2;\nfunction getSvgPathFromStroke(points) {\n  let closed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const len = points.length;\n  if (len < 4) {\n    return \"\";\n  }\n  let a = points[0];\n  let b = points[1];\n  const c = points[2];\n  let result = \"M\".concat(a[0].toFixed(2), \",\").concat(a[1].toFixed(2), \" Q\").concat(b[0].toFixed(2), \",\").concat(b[1].toFixed(2), \" \").concat(average(b[0], c[0]).toFixed(2), \",\").concat(average(b[1], c[1]).toFixed(2), \" T\");\n  for (let i = 2, max = len - 1; i < max; i++) {\n    a = points[i];\n    b = points[i + 1];\n    result += \"\".concat(average(a[0], b[0]).toFixed(2), \",\").concat(average(a[1], b[1]).toFixed(2), \" \");\n  }\n  if (closed) {\n    result += \"Z\";\n  }\n  return result;\n}\n\n// src/signature-pad.machine.ts\nvar machine = createMachine({\n  props(_ref) {\n    let {\n      props: props2\n    } = _ref;\n    return _objectSpread(_objectSpread({\n      defaultPaths: []\n    }, props2), {}, {\n      drawing: _objectSpread({\n        size: 2,\n        simulatePressure: false,\n        thinning: 0.7,\n        smoothing: 0.4,\n        streamline: 0.6\n      }, props2.drawing),\n      translations: _objectSpread({\n        control: \"signature pad\",\n        clearTrigger: \"clear signature\"\n      }, props2.translations)\n    });\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context(_ref2) {\n    let {\n      prop,\n      bindable\n    } = _ref2;\n    return {\n      paths: bindable(() => ({\n        defaultValue: prop(\"defaultPaths\"),\n        value: prop(\"paths\"),\n        sync: true,\n        onChange(value) {\n          var _prop;\n          (_prop = prop(\"onDraw\")) === null || _prop === void 0 || _prop({\n            paths: value\n          });\n        }\n      })),\n      currentPoints: bindable(() => ({\n        defaultValue: []\n      })),\n      currentPath: bindable(() => ({\n        defaultValue: null\n      }))\n    };\n  },\n  computed: {\n    isInteractive: _ref3 => {\n      let {\n        prop\n      } = _ref3;\n      return !(prop(\"disabled\") || prop(\"readOnly\"));\n    },\n    isEmpty: _ref4 => {\n      let {\n        context\n      } = _ref4;\n      return context.get(\"paths\").length === 0;\n    }\n  },\n  on: {\n    CLEAR: {\n      actions: [\"clearPoints\", \"invokeOnDrawEnd\", \"focusCanvasEl\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        POINTER_DOWN: {\n          target: \"drawing\",\n          actions: [\"addPoint\"]\n        }\n      }\n    },\n    drawing: {\n      effects: [\"trackPointerMove\"],\n      on: {\n        POINTER_MOVE: {\n          actions: [\"addPoint\", \"invokeOnDraw\"]\n        },\n        POINTER_UP: {\n          target: \"idle\",\n          actions: [\"endStroke\", \"invokeOnDrawEnd\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    effects: {\n      trackPointerMove(_ref5) {\n        let {\n          scope,\n          send\n        } = _ref5;\n        const doc = scope.getDoc();\n        return trackPointerMove(doc, {\n          onPointerMove(_ref6) {\n            let {\n              event,\n              point\n            } = _ref6;\n            const controlEl = getControlEl(scope);\n            if (!controlEl) return;\n            const {\n              offset\n            } = getRelativePoint(point, controlEl);\n            send({\n              type: \"POINTER_MOVE\",\n              point: offset,\n              pressure: event.pressure\n            });\n          },\n          onPointerUp() {\n            send({\n              type: \"POINTER_UP\"\n            });\n          }\n        });\n      }\n    },\n    actions: {\n      addPoint(_ref7) {\n        let {\n          context,\n          event,\n          prop\n        } = _ref7;\n        const nextPoints = [...context.get(\"currentPoints\"), event.point];\n        context.set(\"currentPoints\", nextPoints);\n        const stroke = getStroke(nextPoints, prop(\"drawing\"));\n        context.set(\"currentPath\", getSvgPathFromStroke(stroke));\n      },\n      endStroke(_ref8) {\n        let {\n          context\n        } = _ref8;\n        const nextPaths = [...context.get(\"paths\"), context.get(\"currentPath\")];\n        context.set(\"paths\", nextPaths);\n        context.set(\"currentPoints\", []);\n        context.set(\"currentPath\", null);\n      },\n      clearPoints(_ref9) {\n        let {\n          context\n        } = _ref9;\n        context.set(\"currentPoints\", []);\n        context.set(\"paths\", []);\n        context.set(\"currentPath\", null);\n      },\n      focusCanvasEl(_ref0) {\n        let {\n          scope\n        } = _ref0;\n        queueMicrotask(() => {\n          var _scope$getActiveEleme;\n          (_scope$getActiveEleme = scope.getActiveElement()) === null || _scope$getActiveEleme === void 0 || _scope$getActiveEleme.focus({\n            preventScroll: true\n          });\n        });\n      },\n      invokeOnDraw(_ref1) {\n        var _prop2;\n        let {\n          context,\n          prop\n        } = _ref1;\n        (_prop2 = prop(\"onDraw\")) === null || _prop2 === void 0 || _prop2({\n          paths: [...context.get(\"paths\"), context.get(\"currentPath\")]\n        });\n      },\n      invokeOnDrawEnd(_ref10) {\n        var _prop3;\n        let {\n          context,\n          prop,\n          scope,\n          computed\n        } = _ref10;\n        (_prop3 = prop(\"onDrawEnd\")) === null || _prop3 === void 0 || _prop3({\n          paths: [...context.get(\"paths\")],\n          getDataUrl(type) {\n            let quality = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.92;\n            if (computed(\"isEmpty\")) return Promise.resolve(\"\");\n            return getDataUrl(scope, {\n              type,\n              quality\n            });\n          }\n        });\n      }\n    }\n  }\n});\nvar props = createProps()([\"defaultPaths\", \"dir\", \"disabled\", \"drawing\", \"getRootNode\", \"id\", \"ids\", \"name\", \"onDraw\", \"onDrawEnd\", \"paths\", \"readOnly\", \"required\", \"translations\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","trackPointerMove","getRelativePoint","getDataUrl","getDataUrl$1","query","dataAttr","isLeftClick","isModifierKey","getEventTarget","createMachine","getStroke","createProps","createSplitProps","anatomy","parts","build","getRootId","ctx","_ctx$ids$root","_ctx$ids","ids","root","concat","id","getControlId","_ctx$ids$control","_ctx$ids2","control","getLabelId","_ctx$ids$label","_ctx$ids3","label","getHiddenInputId","_ctx$ids$hiddenInput","_ctx$ids4","hiddenInput","getControlEl","getById","getSegmentEl","options","connect","service","normalize","state","send","prop","computed","context","scope","drawing","matches","empty","interactive","disabled","required","translations","currentPath","get","paths","clear","type","quality","Promise","resolve","getLabelProps","_objectSpread","attrs","htmlFor","onClick","event","defaultPrevented","controlEl","focus","preventScroll","getRootProps","element","getControlProps","tabIndex","role","onPointerDown","target","closest","currentTarget","setPointerCapture","pointerId","point","x","clientX","y","clientY","offset","pressure","onPointerUp","hasPointerCapture","releasePointerCapture","style","position","touchAction","userSelect","WebkitUserSelect","getSegmentProps","svg","segment","top","left","width","height","pointerEvents","fill","getSegmentPathProps","props2","path","segmentPath","d","getGuideProps","guide","getClearTriggerProps","button","clearTrigger","hidden","length","getHiddenInputProps","input","readOnly","name","value","average","a","b","getSvgPathFromStroke","points","closed","arguments","undefined","len","c","result","toFixed","i","max","machine","props","_ref","defaultPaths","size","simulatePressure","thinning","smoothing","streamline","initialState","_ref2","bindable","defaultValue","sync","onChange","_prop","currentPoints","isInteractive","_ref3","isEmpty","_ref4","on","CLEAR","actions","states","idle","POINTER_DOWN","effects","POINTER_MOVE","POINTER_UP","implementations","_ref5","doc","getDoc","onPointerMove","_ref6","addPoint","_ref7","nextPoints","set","stroke","endStroke","_ref8","nextPaths","clearPoints","_ref9","focusCanvasEl","_ref0","queueMicrotask","_scope$getActiveEleme","getActiveElement","invokeOnDraw","_ref1","_prop2","invokeOnDrawEnd","_ref10","_prop3","splitProps"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@zag-js/signature-pad/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { trackPointerMove, getRelativePoint, getDataUrl as getDataUrl$1, query, dataAttr, isLeftClick, isModifierKey, getEventTarget } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport getStroke from 'perfect-freehand';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/signature-pad.anatomy.ts\nvar anatomy = createAnatomy(\"signature-pad\").parts(\n  \"root\",\n  \"control\",\n  \"segment\",\n  \"segmentPath\",\n  \"guide\",\n  \"clearTrigger\",\n  \"label\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `signature-${ctx.id}`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `signature-control-${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `signature-label-${ctx.id}`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `signature-input-${ctx.id}`;\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getSegmentEl = (ctx) => query(getControlEl(ctx), \"[data-part=segment]\");\nvar getDataUrl = (ctx, options) => {\n  return getDataUrl$1(getSegmentEl(ctx), options);\n};\n\n// src/signature-pad.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, computed, context, scope } = service;\n  const drawing = state.matches(\"drawing\");\n  const empty = computed(\"isEmpty\");\n  const interactive = computed(\"isInteractive\");\n  const disabled = !!prop(\"disabled\");\n  const required = !!prop(\"required\");\n  const translations = prop(\"translations\");\n  return {\n    empty,\n    drawing,\n    currentPath: context.get(\"currentPath\"),\n    paths: context.get(\"paths\"),\n    clear() {\n      send({ type: \"CLEAR\" });\n    },\n    getDataUrl(type, quality) {\n      if (computed(\"isEmpty\")) return Promise.resolve(\"\");\n      return getDataUrl(scope, { type, quality });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        id: getLabelId(scope),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-required\": dataAttr(required),\n        htmlFor: getHiddenInputId(scope),\n        onClick(event) {\n          if (!interactive) return;\n          if (event.defaultPrevented) return;\n          const controlEl = getControlEl(scope);\n          controlEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        id: getRootId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        tabIndex: disabled ? void 0 : 0,\n        id: getControlId(scope),\n        role: \"application\",\n        \"aria-roledescription\": \"signature pad\",\n        \"aria-label\": translations.control,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": dataAttr(disabled),\n        onPointerDown(event) {\n          if (!isLeftClick(event)) return;\n          if (isModifierKey(event)) return;\n          if (!interactive) return;\n          const target = getEventTarget(event);\n          if (target?.closest(\"[data-part=clear-trigger]\")) return;\n          event.currentTarget.setPointerCapture(event.pointerId);\n          const point = { x: event.clientX, y: event.clientY };\n          const controlEl = getControlEl(scope);\n          if (!controlEl) return;\n          const { offset } = getRelativePoint(point, controlEl);\n          send({ type: \"POINTER_DOWN\", point: offset, pressure: event.pressure });\n        },\n        onPointerUp(event) {\n          if (!interactive) return;\n          if (event.currentTarget.hasPointerCapture(event.pointerId)) {\n            event.currentTarget.releasePointerCapture(event.pointerId);\n          }\n        },\n        style: {\n          position: \"relative\",\n          touchAction: \"none\",\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getSegmentProps() {\n      return normalize.svg({\n        ...parts.segment.attrs,\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          pointerEvents: \"none\",\n          fill: prop(\"drawing\").fill\n        }\n      });\n    },\n    getSegmentPathProps(props2) {\n      return normalize.path({\n        ...parts.segmentPath.attrs,\n        d: props2.path\n      });\n    },\n    getGuideProps() {\n      return normalize.element({\n        ...parts.guide.attrs,\n        \"data-disabled\": dataAttr(disabled)\n      });\n    },\n    getClearTriggerProps() {\n      return normalize.button({\n        ...parts.clearTrigger.attrs,\n        type: \"button\",\n        \"aria-label\": translations.clearTrigger,\n        hidden: !context.get(\"paths\").length || drawing,\n        disabled,\n        onClick() {\n          send({ type: \"CLEAR\" });\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        type: \"text\",\n        hidden: true,\n        disabled,\n        required: prop(\"required\"),\n        readOnly: true,\n        name: prop(\"name\"),\n        value: props2.value\n      });\n    }\n  };\n}\n\n// src/get-svg-path.ts\nvar average = (a, b) => (a + b) / 2;\nfunction getSvgPathFromStroke(points, closed = true) {\n  const len = points.length;\n  if (len < 4) {\n    return \"\";\n  }\n  let a = points[0];\n  let b = points[1];\n  const c = points[2];\n  let result = `M${a[0].toFixed(2)},${a[1].toFixed(2)} Q${b[0].toFixed(2)},${b[1].toFixed(2)} ${average(b[0], c[0]).toFixed(2)},${average(\n    b[1],\n    c[1]\n  ).toFixed(2)} T`;\n  for (let i = 2, max = len - 1; i < max; i++) {\n    a = points[i];\n    b = points[i + 1];\n    result += `${average(a[0], b[0]).toFixed(2)},${average(a[1], b[1]).toFixed(2)} `;\n  }\n  if (closed) {\n    result += \"Z\";\n  }\n  return result;\n}\n\n// src/signature-pad.machine.ts\nvar machine = createMachine({\n  props({ props: props2 }) {\n    return {\n      defaultPaths: [],\n      ...props2,\n      drawing: {\n        size: 2,\n        simulatePressure: false,\n        thinning: 0.7,\n        smoothing: 0.4,\n        streamline: 0.6,\n        ...props2.drawing\n      },\n      translations: {\n        control: \"signature pad\",\n        clearTrigger: \"clear signature\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable }) {\n    return {\n      paths: bindable(() => ({\n        defaultValue: prop(\"defaultPaths\"),\n        value: prop(\"paths\"),\n        sync: true,\n        onChange(value) {\n          prop(\"onDraw\")?.({ paths: value });\n        }\n      })),\n      currentPoints: bindable(() => ({\n        defaultValue: []\n      })),\n      currentPath: bindable(() => ({\n        defaultValue: null\n      }))\n    };\n  },\n  computed: {\n    isInteractive: ({ prop }) => !(prop(\"disabled\") || prop(\"readOnly\")),\n    isEmpty: ({ context }) => context.get(\"paths\").length === 0\n  },\n  on: {\n    CLEAR: {\n      actions: [\"clearPoints\", \"invokeOnDrawEnd\", \"focusCanvasEl\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        POINTER_DOWN: {\n          target: \"drawing\",\n          actions: [\"addPoint\"]\n        }\n      }\n    },\n    drawing: {\n      effects: [\"trackPointerMove\"],\n      on: {\n        POINTER_MOVE: {\n          actions: [\"addPoint\", \"invokeOnDraw\"]\n        },\n        POINTER_UP: {\n          target: \"idle\",\n          actions: [\"endStroke\", \"invokeOnDrawEnd\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    effects: {\n      trackPointerMove({ scope, send }) {\n        const doc = scope.getDoc();\n        return trackPointerMove(doc, {\n          onPointerMove({ event, point }) {\n            const controlEl = getControlEl(scope);\n            if (!controlEl) return;\n            const { offset } = getRelativePoint(point, controlEl);\n            send({ type: \"POINTER_MOVE\", point: offset, pressure: event.pressure });\n          },\n          onPointerUp() {\n            send({ type: \"POINTER_UP\" });\n          }\n        });\n      }\n    },\n    actions: {\n      addPoint({ context, event, prop }) {\n        const nextPoints = [...context.get(\"currentPoints\"), event.point];\n        context.set(\"currentPoints\", nextPoints);\n        const stroke = getStroke(nextPoints, prop(\"drawing\"));\n        context.set(\"currentPath\", getSvgPathFromStroke(stroke));\n      },\n      endStroke({ context }) {\n        const nextPaths = [...context.get(\"paths\"), context.get(\"currentPath\")];\n        context.set(\"paths\", nextPaths);\n        context.set(\"currentPoints\", []);\n        context.set(\"currentPath\", null);\n      },\n      clearPoints({ context }) {\n        context.set(\"currentPoints\", []);\n        context.set(\"paths\", []);\n        context.set(\"currentPath\", null);\n      },\n      focusCanvasEl({ scope }) {\n        queueMicrotask(() => {\n          scope.getActiveElement()?.focus({ preventScroll: true });\n        });\n      },\n      invokeOnDraw({ context, prop }) {\n        prop(\"onDraw\")?.({\n          paths: [...context.get(\"paths\"), context.get(\"currentPath\")]\n        });\n      },\n      invokeOnDrawEnd({ context, prop, scope, computed }) {\n        prop(\"onDrawEnd\")?.({\n          paths: [...context.get(\"paths\")],\n          getDataUrl(type, quality = 0.92) {\n            if (computed(\"isEmpty\")) return Promise.resolve(\"\");\n            return getDataUrl(scope, { type, quality });\n          }\n        });\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"defaultPaths\",\n  \"dir\",\n  \"disabled\",\n  \"drawing\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onDraw\",\n  \"onDrawEnd\",\n  \"paths\",\n  \"readOnly\",\n  \"required\",\n  \"translations\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}