{"ast":null,"code":"import _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { createAnatomy } from '@zag-js/anatomy';\nimport { raf, isHTMLElement, addDomEvent, trackPointerMove, dataAttr, isLeftClick, getEventTarget, getEventStep, getEventKey } from '@zag-js/dom-query';\nimport { invariant, match, pick, clampValue, ensureProps, createSplitProps, toPx } from '@zag-js/utils';\nimport { clampPoint, clampSize, createRect, subtractPoints, resizeRect, addPoints, getElementRect, isPointEqual, isSizeEqual, getWindowRect, constrainRect } from '@zag-js/rect-utils';\nimport { createGuards, createMachine } from '@zag-js/core';\nimport { proxy, subscribe } from '@zag-js/store';\nimport { createProps } from '@zag-js/types';\n\n// src/floating-panel.anatomy.ts\nvar anatomy = createAnatomy(\"floating-panel\").parts(\"trigger\", \"positioner\", \"content\", \"header\", \"body\", \"title\", \"resizeTrigger\", \"dragTrigger\", \"stageTrigger\", \"closeTrigger\", \"control\");\nvar parts = anatomy.build();\nvar getTriggerId = ctx => {\n  var _ctx$ids$trigger, _ctx$ids;\n  return (_ctx$ids$trigger = (_ctx$ids = ctx.ids) === null || _ctx$ids === void 0 ? void 0 : _ctx$ids.trigger) !== null && _ctx$ids$trigger !== void 0 ? _ctx$ids$trigger : \"float:\".concat(ctx.id, \":trigger\");\n};\nvar getPositionerId = ctx => {\n  var _ctx$ids$positioner, _ctx$ids2;\n  return (_ctx$ids$positioner = (_ctx$ids2 = ctx.ids) === null || _ctx$ids2 === void 0 ? void 0 : _ctx$ids2.positioner) !== null && _ctx$ids$positioner !== void 0 ? _ctx$ids$positioner : \"float:\".concat(ctx.id, \":positioner\");\n};\nvar getContentId = ctx => {\n  var _ctx$ids$content, _ctx$ids3;\n  return (_ctx$ids$content = (_ctx$ids3 = ctx.ids) === null || _ctx$ids3 === void 0 ? void 0 : _ctx$ids3.content) !== null && _ctx$ids$content !== void 0 ? _ctx$ids$content : \"float:\".concat(ctx.id, \":content\");\n};\nvar getTitleId = ctx => {\n  var _ctx$ids$title, _ctx$ids4;\n  return (_ctx$ids$title = (_ctx$ids4 = ctx.ids) === null || _ctx$ids4 === void 0 ? void 0 : _ctx$ids4.title) !== null && _ctx$ids$title !== void 0 ? _ctx$ids$title : \"float:\".concat(ctx.id, \":title\");\n};\nvar getHeaderId = ctx => {\n  var _ctx$ids$header, _ctx$ids5;\n  return (_ctx$ids$header = (_ctx$ids5 = ctx.ids) === null || _ctx$ids5 === void 0 ? void 0 : _ctx$ids5.header) !== null && _ctx$ids$header !== void 0 ? _ctx$ids$header : \"float:\".concat(ctx.id, \":header\");\n};\nvar getTriggerEl = ctx => ctx.getById(getTriggerId(ctx));\nvar getPositionerEl = ctx => ctx.getById(getPositionerId(ctx));\nvar getContentEl = ctx => ctx.getById(getContentId(ctx));\nvar getHeaderEl = ctx => ctx.getById(getHeaderId(ctx));\nvar getBoundaryRect = (ctx, boundaryEl, allowOverflow) => {\n  let boundaryRect;\n  if (isHTMLElement(boundaryEl)) {\n    boundaryRect = getElementRect(boundaryEl);\n  } else {\n    boundaryRect = getWindowRect(ctx.getWin());\n  }\n  if (allowOverflow) {\n    boundaryRect = createRect({\n      x: -boundaryRect.width,\n      // empty(left)\n      y: boundaryRect.minY,\n      width: boundaryRect.width * 3,\n      // empty(left) + win + empty(right)\n      height: boundaryRect.height * 2\n      // win + empty(bottom)\n    });\n  }\n  return pick(boundaryRect, [\"x\", \"y\", \"width\", \"height\"]);\n};\n\n// src/get-resize-axis-style.ts\nfunction getResizeAxisStyle(axis) {\n  switch (axis) {\n    case \"n\":\n      return {\n        cursor: \"n-resize\",\n        width: \"100%\",\n        left: \"50%\",\n        translate: \"-50%\"\n      };\n    case \"e\":\n      return {\n        cursor: \"e-resize\",\n        height: \"100%\",\n        right: 0,\n        top: \"50%\",\n        translate: \"0 -50%\"\n      };\n    case \"s\":\n      return {\n        cursor: \"s-resize\",\n        width: \"100%\",\n        bottom: 0,\n        left: \"50%\",\n        translate: \"-50%\"\n      };\n    case \"w\":\n      return {\n        cursor: \"w-resize\",\n        height: \"100%\",\n        left: 0,\n        top: \"50%\",\n        translate: \"0 -50%\"\n      };\n    case \"se\":\n      return {\n        cursor: \"se-resize\",\n        bottom: 0,\n        right: 0\n      };\n    case \"sw\":\n      return {\n        cursor: \"sw-resize\",\n        bottom: 0,\n        left: 0\n      };\n    case \"ne\":\n      return {\n        cursor: \"ne-resize\",\n        top: 0,\n        right: 0\n      };\n    case \"nw\":\n      return {\n        cursor: \"nw-resize\",\n        top: 0,\n        left: 0\n      };\n    default:\n      throw new Error(\"Invalid axis: \".concat(axis));\n  }\n}\n\n// src/floating-panel.connect.ts\nvar validStages = /* @__PURE__ */new Set([\"minimized\", \"maximized\", \"default\"]);\nfunction connect(service, normalize) {\n  const {\n    state,\n    send,\n    scope,\n    prop,\n    computed,\n    context\n  } = service;\n  const open = state.hasTag(\"open\");\n  const dragging = state.matches(\"open.dragging\");\n  const resizing = state.matches(\"open.resizing\");\n  const isTopmost = context.get(\"isTopmost\");\n  const size = context.get(\"size\");\n  const position = context.get(\"position\");\n  const isMaximized = computed(\"isMaximized\");\n  const isMinimized = computed(\"isMinimized\");\n  const isStaged = computed(\"isStaged\");\n  const canResize = computed(\"canResize\");\n  const canDrag = computed(\"canDrag\");\n  return {\n    open,\n    resizable: prop(\"resizable\"),\n    draggable: prop(\"draggable\"),\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({\n        type: nextOpen ? \"OPEN\" : \"CLOSE\"\n      });\n    },\n    dragging,\n    resizing,\n    position,\n    size,\n    setPosition(position2) {\n      send({\n        type: \"SET_POSITION\",\n        position: position2\n      });\n    },\n    setSize(size2) {\n      send({\n        type: \"SET_SIZE\",\n        size: size2\n      });\n    },\n    minimize() {\n      send({\n        type: \"MINIMIZE\"\n      });\n    },\n    maximize() {\n      send({\n        type: \"MAXIMIZE\"\n      });\n    },\n    restore() {\n      send({\n        type: \"RESTORE\"\n      });\n    },\n    getTriggerProps() {\n      return normalize.button(_objectSpread(_objectSpread({}, parts.trigger.attrs), {}, {\n        type: \"button\",\n        disabled: prop(\"disabled\"),\n        id: getTriggerId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-dragging\": dataAttr(dragging),\n        \"aria-controls\": getContentId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (prop(\"disabled\")) return;\n          const open2 = state.hasTag(\"open\");\n          send({\n            type: open2 ? \"CLOSE\" : \"OPEN\",\n            src: \"trigger\"\n          });\n        }\n      }));\n    },\n    getPositionerProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.positioner.attrs), {}, {\n        id: getPositionerId(scope),\n        style: {\n          \"--width\": toPx(size === null || size === void 0 ? void 0 : size.width),\n          \"--height\": toPx(size === null || size === void 0 ? void 0 : size.height),\n          \"--x\": toPx(position === null || position === void 0 ? void 0 : position.x),\n          \"--y\": toPx(position === null || position === void 0 ? void 0 : position.y),\n          position: prop(\"strategy\"),\n          top: \"var(--y)\",\n          left: \"var(--x)\"\n        }\n      }));\n    },\n    getContentProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.content.attrs), {}, {\n        role: \"dialog\",\n        tabIndex: 0,\n        hidden: !open,\n        id: getContentId(scope),\n        \"aria-labelledby\": getTitleId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-dragging\": dataAttr(dragging),\n        \"data-topmost\": dataAttr(isTopmost),\n        \"data-behind\": dataAttr(!isTopmost),\n        \"data-minimized\": dataAttr(isMinimized),\n        \"data-maximized\": dataAttr(isMaximized),\n        \"data-staged\": dataAttr(isStaged),\n        style: {\n          width: \"var(--width)\",\n          height: \"var(--height)\",\n          overflow: isMinimized ? \"hidden\" : void 0\n        },\n        onFocus() {\n          send({\n            type: \"CONTENT_FOCUS\"\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.currentTarget !== getEventTarget(event)) return;\n          const step = getEventStep(event) * prop(\"gridSize\");\n          const keyMap = {\n            Escape() {\n              if (!isTopmost) return;\n              send({\n                type: \"ESCAPE\"\n              });\n            },\n            ArrowLeft() {\n              send({\n                type: \"MOVE\",\n                direction: \"left\",\n                step\n              });\n            },\n            ArrowRight() {\n              send({\n                type: \"MOVE\",\n                direction: \"right\",\n                step\n              });\n            },\n            ArrowUp() {\n              send({\n                type: \"MOVE\",\n                direction: \"up\",\n                step\n              });\n            },\n            ArrowDown() {\n              send({\n                type: \"MOVE\",\n                direction: \"down\",\n                step\n              });\n            }\n          };\n          const handler = keyMap[getEventKey(event, {\n            dir: prop(\"dir\")\n          })];\n          if (handler) {\n            event.preventDefault();\n            handler(event);\n          }\n        }\n      }));\n    },\n    getCloseTriggerProps() {\n      return normalize.button(_objectSpread(_objectSpread({}, parts.closeTrigger.attrs), {}, {\n        disabled: prop(\"disabled\"),\n        \"aria-label\": \"Close Window\",\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({\n            type: \"CLOSE\"\n          });\n        }\n      }));\n    },\n    getStageTriggerProps(props2) {\n      if (!validStages.has(props2.stage)) {\n        throw new Error(\"[zag-js] Invalid stage: \".concat(props2.stage, \". Must be one of: \").concat(Array.from(validStages).join(\", \")));\n      }\n      const translations = prop(\"translations\");\n      const actionProps = match(props2.stage, {\n        minimized: () => ({\n          \"aria-label\": translations.minimize,\n          hidden: isStaged\n        }),\n        maximized: () => ({\n          \"aria-label\": translations.maximize,\n          hidden: isStaged\n        }),\n        default: () => ({\n          \"aria-label\": translations.restore,\n          hidden: !isStaged\n        })\n      });\n      return normalize.button(_objectSpread(_objectSpread(_objectSpread({}, parts.stageTrigger.attrs), {}, {\n        disabled: prop(\"disabled\")\n      }, actionProps), {}, {\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          const type = match(props2.stage, {\n            minimized: () => \"MINIMIZE\",\n            maximized: () => \"MAXIMIZE\",\n            default: () => \"RESTORE\"\n          });\n          send({\n            type: type.toUpperCase()\n          });\n        }\n      }));\n    },\n    getResizeTriggerProps(props2) {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.resizeTrigger.attrs), {}, {\n        \"data-disabled\": dataAttr(!canResize),\n        \"data-axis\": props2.axis,\n        onPointerDown(event) {\n          if (!canResize) return;\n          if (!isLeftClick(event)) return;\n          event.currentTarget.setPointerCapture(event.pointerId);\n          event.stopPropagation();\n          send({\n            type: \"RESIZE_START\",\n            axis: props2.axis,\n            position: {\n              x: event.clientX,\n              y: event.clientY\n            }\n          });\n        },\n        onPointerUp(event) {\n          if (!canResize) return;\n          const node = event.currentTarget;\n          if (node.hasPointerCapture(event.pointerId)) {\n            node.releasePointerCapture(event.pointerId);\n          }\n        },\n        style: _objectSpread({\n          position: \"absolute\",\n          touchAction: \"none\"\n        }, getResizeAxisStyle(props2.axis))\n      }));\n    },\n    getDragTriggerProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.dragTrigger.attrs), {}, {\n        \"data-disabled\": dataAttr(!canDrag),\n        onPointerDown(event) {\n          if (!canDrag) return;\n          if (!isLeftClick(event)) return;\n          const target = getEventTarget(event);\n          if (target !== null && target !== void 0 && target.closest(\"button\") || target !== null && target !== void 0 && target.closest(\"[data-no-drag]\")) {\n            return;\n          }\n          event.currentTarget.setPointerCapture(event.pointerId);\n          event.stopPropagation();\n          send({\n            type: \"DRAG_START\",\n            pointerId: event.pointerId,\n            position: {\n              x: event.clientX,\n              y: event.clientY\n            }\n          });\n        },\n        onPointerUp(event) {\n          if (!canDrag) return;\n          const node = event.currentTarget;\n          if (node.hasPointerCapture(event.pointerId)) {\n            node.releasePointerCapture(event.pointerId);\n          }\n        },\n        onDoubleClick() {\n          send({\n            type: isMaximized ? \"RESTORE\" : \"MAXIMIZE\"\n          });\n        },\n        style: {\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\",\n          touchAction: \"none\",\n          cursor: \"move\"\n        }\n      }));\n    },\n    getControlProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.control.attrs), {}, {\n        \"data-disabled\": dataAttr(prop(\"disabled\")),\n        \"data-stage\": context.get(\"stage\"),\n        \"data-minimized\": dataAttr(isMinimized),\n        \"data-maximized\": dataAttr(isMaximized),\n        \"data-staged\": dataAttr(isStaged)\n      }));\n    },\n    getTitleProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.title.attrs), {}, {\n        id: getTitleId(scope)\n      }));\n    },\n    getHeaderProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.header.attrs), {}, {\n        id: getHeaderId(scope),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-topmost\": dataAttr(isTopmost),\n        \"data-behind\": dataAttr(!isTopmost),\n        \"data-minimized\": dataAttr(isMinimized),\n        \"data-maximized\": dataAttr(isMaximized),\n        \"data-staged\": dataAttr(isStaged)\n      }));\n    },\n    getBodyProps() {\n      return normalize.element(_objectSpread(_objectSpread({}, parts.body.attrs), {}, {\n        \"data-dragging\": dataAttr(dragging),\n        \"data-minimized\": dataAttr(isMinimized),\n        \"data-maximized\": dataAttr(isMaximized),\n        \"data-staged\": dataAttr(isStaged),\n        hidden: isMinimized\n      }));\n    }\n  };\n}\nvar panelStack = proxy({\n  stack: [],\n  count() {\n    return this.stack.length;\n  },\n  add(panelId) {\n    if (this.stack.includes(panelId)) return;\n    this.stack.push(panelId);\n  },\n  remove(panelId) {\n    const index = this.stack.indexOf(panelId);\n    if (index < 0) return;\n    this.stack.splice(index, 1);\n  },\n  bringToFront(id) {\n    this.remove(id);\n    this.add(id);\n  },\n  isTopmost(id) {\n    return this.stack[this.stack.length - 1] === id;\n  },\n  indexOf(id) {\n    return this.stack.indexOf(id);\n  }\n});\n\n// src/floating-panel.machine.ts\nvar {\n  not,\n  and\n} = createGuards();\nvar defaultTranslations = {\n  minimize: \"Minimize window\",\n  maximize: \"Maximize window\",\n  restore: \"Restore window\"\n};\nvar machine = createMachine({\n  props(_ref) {\n    let {\n      props: props2\n    } = _ref;\n    ensureProps(props2, [\"id\"], \"floating-panel\");\n    return _objectSpread(_objectSpread({\n      strategy: \"fixed\",\n      gridSize: 1,\n      defaultSize: {\n        width: 320,\n        height: 240\n      },\n      defaultPosition: {\n        x: 300,\n        y: 100\n      },\n      allowOverflow: true,\n      resizable: true,\n      draggable: true\n    }, props2), {}, {\n      hasSpecifiedPosition: !!props2.defaultPosition || !!props2.position,\n      translations: _objectSpread(_objectSpread({}, defaultTranslations), props2.translations)\n    });\n  },\n  initialState(_ref2) {\n    let {\n      prop\n    } = _ref2;\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context(_ref3) {\n    let {\n      prop,\n      bindable\n    } = _ref3;\n    return {\n      size: bindable(() => ({\n        defaultValue: prop(\"defaultSize\"),\n        value: prop(\"size\"),\n        isEqual: isSizeEqual,\n        sync: true,\n        hash(v) {\n          return \"W:\".concat(v.width, \" H:\").concat(v.height);\n        },\n        onChange(value) {\n          var _prop;\n          (_prop = prop(\"onSizeChange\")) === null || _prop === void 0 || _prop({\n            size: value\n          });\n        }\n      })),\n      position: bindable(() => ({\n        defaultValue: prop(\"defaultPosition\"),\n        value: prop(\"position\"),\n        isEqual: isPointEqual,\n        sync: true,\n        hash(v) {\n          return \"X:\".concat(v.x, \" Y:\").concat(v.y);\n        },\n        onChange(value) {\n          var _prop2;\n          (_prop2 = prop(\"onPositionChange\")) === null || _prop2 === void 0 || _prop2({\n            position: value\n          });\n        }\n      })),\n      stage: bindable(() => ({\n        defaultValue: \"default\",\n        onChange(value) {\n          var _prop3;\n          (_prop3 = prop(\"onStageChange\")) === null || _prop3 === void 0 || _prop3({\n            stage: value\n          });\n        }\n      })),\n      lastEventPosition: bindable(() => ({\n        defaultValue: null\n      })),\n      prevPosition: bindable(() => ({\n        defaultValue: null\n      })),\n      prevSize: bindable(() => ({\n        defaultValue: null\n      })),\n      isTopmost: bindable(() => ({\n        defaultValue: void 0\n      }))\n    };\n  },\n  computed: {\n    isMaximized: _ref4 => {\n      let {\n        context\n      } = _ref4;\n      return context.get(\"stage\") === \"maximized\";\n    },\n    isMinimized: _ref5 => {\n      let {\n        context\n      } = _ref5;\n      return context.get(\"stage\") === \"minimized\";\n    },\n    isStaged: _ref6 => {\n      let {\n        context\n      } = _ref6;\n      return context.get(\"stage\") !== \"default\";\n    },\n    canResize: _ref7 => {\n      let {\n        context,\n        prop\n      } = _ref7;\n      return (prop(\"resizable\") || !prop(\"disabled\")) && context.get(\"stage\") === \"default\";\n    },\n    canDrag: _ref8 => {\n      let {\n        prop,\n        computed\n      } = _ref8;\n      return (prop(\"draggable\") || !prop(\"disabled\")) && !computed(\"isMaximized\");\n    }\n  },\n  watch(_ref9) {\n    let {\n      track,\n      context,\n      action,\n      prop\n    } = _ref9;\n    track([() => context.hash(\"position\")], () => {\n      action([\"setPositionStyle\"]);\n    });\n    track([() => context.hash(\"size\")], () => {\n      action([\"setSizeStyle\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  effects: [\"trackPanelStack\"],\n  on: {\n    CONTENT_FOCUS: {\n      actions: [\"bringToFrontOfPanelStack\"]\n    },\n    SET_POSITION: {\n      actions: [\"setPosition\"]\n    },\n    SET_SIZE: {\n      actions: [\"setSize\"]\n    }\n  },\n  states: {\n    closed: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setAnchorPosition\", \"setPositionStyle\", \"setSizeStyle\", \"focusContentEl\"]\n        },\n        OPEN: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnOpen\"]\n        }, {\n          target: \"open\",\n          actions: [\"invokeOnOpen\", \"setAnchorPosition\", \"setPositionStyle\", \"setSizeStyle\", \"focusContentEl\"]\n        }]\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      entry: [\"bringToFrontOfPanelStack\"],\n      effects: [\"trackBoundaryRect\"],\n      on: {\n        DRAG_START: {\n          guard: not(\"isMaximized\"),\n          target: \"open.dragging\",\n          actions: [\"setPrevPosition\"]\n        },\n        RESIZE_START: {\n          guard: not(\"isMinimized\"),\n          target: \"open.resizing\",\n          actions: [\"setPrevSize\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\", \"focusTriggerEl\"]\n        },\n        CLOSE: [{\n          guard: \"isOpenControlled\",\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\", \"resetRect\", \"focusTriggerEl\"]\n        }],\n        ESCAPE: [{\n          guard: and(\"isOpenControlled\", \"closeOnEsc\"),\n          actions: [\"invokeOnClose\"]\n        }, {\n          guard: \"closeOnEsc\",\n          target: \"closed\",\n          actions: [\"invokeOnClose\", \"resetRect\", \"focusTriggerEl\"]\n        }],\n        MINIMIZE: {\n          actions: [\"setMinimized\"]\n        },\n        MAXIMIZE: {\n          actions: [\"setMaximized\"]\n        },\n        RESTORE: {\n          actions: [\"setRestored\"]\n        },\n        MOVE: {\n          actions: [\"setPositionFromKeyboard\"]\n        }\n      }\n    },\n    \"open.dragging\": {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\"],\n      exit: [\"clearPrevPosition\"],\n      on: {\n        DRAG: {\n          actions: [\"setPosition\"]\n        },\n        DRAG_END: {\n          target: \"open\",\n          actions: [\"invokeOnDragEnd\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\"]\n        },\n        CLOSE: [{\n          guard: \"isOpenControlled\",\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\", \"resetRect\"]\n        }],\n        ESCAPE: {\n          target: \"open\"\n        }\n      }\n    },\n    \"open.resizing\": {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\"],\n      exit: [\"clearPrevSize\"],\n      on: {\n        DRAG: {\n          actions: [\"setSize\"]\n        },\n        DRAG_END: {\n          target: \"open\",\n          actions: [\"invokeOnResizeEnd\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\"]\n        },\n        CLOSE: [{\n          guard: \"isOpenControlled\",\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\", \"resetRect\"]\n        }],\n        ESCAPE: {\n          target: \"open\"\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      closeOnEsc: _ref0 => {\n        let {\n          prop\n        } = _ref0;\n        return !!prop(\"closeOnEscape\");\n      },\n      isMaximized: _ref1 => {\n        let {\n          context\n        } = _ref1;\n        return context.get(\"stage\") === \"maximized\";\n      },\n      isMinimized: _ref10 => {\n        let {\n          context\n        } = _ref10;\n        return context.get(\"stage\") === \"minimized\";\n      },\n      isOpenControlled: _ref11 => {\n        let {\n          prop\n        } = _ref11;\n        return prop(\"open\") != void 0;\n      }\n    },\n    effects: {\n      trackPointerMove(_ref12) {\n        var _prop4;\n        let {\n          scope,\n          send,\n          event: evt,\n          prop\n        } = _ref12;\n        const doc = scope.getDoc();\n        const boundaryEl = (_prop4 = prop(\"getBoundaryEl\")) === null || _prop4 === void 0 ? void 0 : _prop4();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        return trackPointerMove(doc, {\n          onPointerMove(_ref13) {\n            let {\n              point,\n              event\n            } = _ref13;\n            const {\n              altKey,\n              shiftKey\n            } = event;\n            let x = clampValue(point.x, boundaryRect.x, boundaryRect.x + boundaryRect.width);\n            let y = clampValue(point.y, boundaryRect.y, boundaryRect.y + boundaryRect.height);\n            send({\n              type: \"DRAG\",\n              position: {\n                x,\n                y\n              },\n              axis: evt.axis,\n              altKey,\n              shiftKey\n            });\n          },\n          onPointerUp() {\n            send({\n              type: \"DRAG_END\"\n            });\n          }\n        });\n      },\n      trackBoundaryRect(_ref14) {\n        var _prop6;\n        let {\n          context,\n          scope,\n          prop,\n          computed\n        } = _ref14;\n        const win = scope.getWin();\n        let skip = true;\n        const exec = () => {\n          var _prop5;\n          if (skip) {\n            skip = false;\n            return;\n          }\n          const boundaryEl2 = (_prop5 = prop(\"getBoundaryEl\")) === null || _prop5 === void 0 ? void 0 : _prop5();\n          let boundaryRect = getBoundaryRect(scope, boundaryEl2, false);\n          if (!computed(\"isMaximized\")) {\n            const rect = _objectSpread(_objectSpread({}, context.get(\"position\")), context.get(\"size\"));\n            boundaryRect = constrainRect(rect, boundaryRect);\n          }\n          context.set(\"size\", pick(boundaryRect, [\"width\", \"height\"]));\n          context.set(\"position\", pick(boundaryRect, [\"x\", \"y\"]));\n        };\n        const boundaryEl = (_prop6 = prop(\"getBoundaryEl\")) === null || _prop6 === void 0 ? void 0 : _prop6();\n        if (isHTMLElement(boundaryEl)) {\n          const obs = new win.ResizeObserver(exec);\n          obs.observe(boundaryEl);\n          return () => obs.disconnect();\n        }\n        return addDomEvent(win, \"resize\", exec);\n      },\n      trackPanelStack(_ref15) {\n        let {\n          context,\n          scope\n        } = _ref15;\n        const unsub = subscribe(panelStack, () => {\n          context.set(\"isTopmost\", panelStack.isTopmost(scope.id));\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const index = panelStack.indexOf(scope.id);\n          if (index === -1) return;\n          contentEl.style.setProperty(\"--z-index\", \"\".concat(index + 1));\n        });\n        return () => {\n          panelStack.remove(scope.id);\n          unsub();\n        };\n      }\n    },\n    actions: {\n      setAnchorPosition(_ref16) {\n        let {\n          context,\n          prop,\n          scope\n        } = _ref16;\n        if (prop(\"hasSpecifiedPosition\")) return;\n        const hasPrevRect = context.get(\"prevPosition\") || context.get(\"prevSize\");\n        if (prop(\"persistRect\") && hasPrevRect) return;\n        raf(() => {\n          var _prop7, _prop8;\n          const triggerRect = getTriggerEl(scope);\n          const boundaryRect = getBoundaryRect(scope, (_prop7 = prop(\"getBoundaryEl\")) === null || _prop7 === void 0 ? void 0 : _prop7(), false);\n          let anchorPosition = (_prop8 = prop(\"getAnchorPosition\")) === null || _prop8 === void 0 ? void 0 : _prop8({\n            triggerRect: triggerRect ? DOMRect.fromRect(getElementRect(triggerRect)) : null,\n            boundaryRect: DOMRect.fromRect(boundaryRect)\n          });\n          if (!anchorPosition) {\n            const size = context.get(\"size\");\n            anchorPosition = {\n              x: boundaryRect.x + (boundaryRect.width - size.width) / 2,\n              y: boundaryRect.y + (boundaryRect.height - size.height) / 2\n            };\n          }\n          if (!anchorPosition) return;\n          context.set(\"position\", anchorPosition);\n        });\n      },\n      setPrevPosition(_ref17) {\n        let {\n          context,\n          event\n        } = _ref17;\n        context.set(\"prevPosition\", _objectSpread({}, context.get(\"position\")));\n        context.set(\"lastEventPosition\", event.position);\n      },\n      clearPrevPosition(_ref18) {\n        let {\n          context,\n          prop\n        } = _ref18;\n        if (!prop(\"persistRect\")) context.set(\"prevPosition\", null);\n        context.set(\"lastEventPosition\", null);\n      },\n      setPosition(_ref19) {\n        var _prop9;\n        let {\n          context,\n          event,\n          prop,\n          scope\n        } = _ref19;\n        let diff = subtractPoints(event.position, context.get(\"lastEventPosition\"));\n        diff.x = Math.round(diff.x / prop(\"gridSize\")) * prop(\"gridSize\");\n        diff.y = Math.round(diff.y / prop(\"gridSize\")) * prop(\"gridSize\");\n        const prevPosition = context.get(\"prevPosition\");\n        if (!prevPosition) return;\n        let position = addPoints(prevPosition, diff);\n        const boundaryEl = (_prop9 = prop(\"getBoundaryEl\")) === null || _prop9 === void 0 ? void 0 : _prop9();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, prop(\"allowOverflow\"));\n        position = clampPoint(position, context.get(\"size\"), boundaryRect);\n        context.set(\"position\", position);\n      },\n      setPositionStyle(_ref20) {\n        let {\n          scope,\n          context\n        } = _ref20;\n        const el = getPositionerEl(scope);\n        const position = context.get(\"position\");\n        el === null || el === void 0 || el.style.setProperty(\"--x\", \"\".concat(position.x, \"px\"));\n        el === null || el === void 0 || el.style.setProperty(\"--y\", \"\".concat(position.y, \"px\"));\n      },\n      resetRect(_ref21) {\n        let {\n          context,\n          prop\n        } = _ref21;\n        context.set(\"stage\", \"default\");\n        if (!prop(\"persistRect\")) {\n          context.set(\"position\", context.initial(\"position\"));\n          context.set(\"size\", context.initial(\"size\"));\n        }\n      },\n      setPrevSize(_ref22) {\n        let {\n          context,\n          event\n        } = _ref22;\n        context.set(\"prevSize\", _objectSpread({}, context.get(\"size\")));\n        context.set(\"prevPosition\", _objectSpread({}, context.get(\"position\")));\n        context.set(\"lastEventPosition\", event.position);\n      },\n      clearPrevSize(_ref23) {\n        let {\n          context\n        } = _ref23;\n        context.set(\"prevSize\", null);\n        context.set(\"prevPosition\", null);\n        context.set(\"lastEventPosition\", null);\n      },\n      setSize(_ref24) {\n        var _prop0;\n        let {\n          context,\n          event,\n          scope,\n          prop\n        } = _ref24;\n        const prevSize = context.get(\"prevSize\");\n        const prevPosition = context.get(\"prevPosition\");\n        const lastEventPosition = context.get(\"lastEventPosition\");\n        if (!prevSize || !prevPosition || !lastEventPosition) return;\n        const prevRect = createRect(_objectSpread(_objectSpread({}, prevPosition), prevSize));\n        const offset = subtractPoints(event.position, lastEventPosition);\n        const nextRect = resizeRect(prevRect, offset, event.axis, {\n          scalingOriginMode: event.altKey ? \"center\" : \"extent\",\n          lockAspectRatio: !!prop(\"lockAspectRatio\") || event.shiftKey\n        });\n        let nextSize = pick(nextRect, [\"width\", \"height\"]);\n        let nextPosition = pick(nextRect, [\"x\", \"y\"]);\n        const boundaryEl = (_prop0 = prop(\"getBoundaryEl\")) === null || _prop0 === void 0 ? void 0 : _prop0();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        nextSize = clampSize(nextSize, prop(\"minSize\"), prop(\"maxSize\"));\n        nextSize = clampSize(nextSize, prop(\"minSize\"), boundaryRect);\n        context.set(\"size\", nextSize);\n        if (nextPosition) {\n          const point = clampPoint(nextPosition, nextSize, boundaryRect);\n          context.set(\"position\", point);\n        }\n      },\n      setSizeStyle(_ref25) {\n        let {\n          scope,\n          context\n        } = _ref25;\n        queueMicrotask(() => {\n          const el = getPositionerEl(scope);\n          const size = context.get(\"size\");\n          el === null || el === void 0 || el.style.setProperty(\"--width\", \"\".concat(size.width, \"px\"));\n          el === null || el === void 0 || el.style.setProperty(\"--height\", \"\".concat(size.height, \"px\"));\n        });\n      },\n      setMaximized(_ref26) {\n        var _prop1;\n        let {\n          context,\n          prop,\n          scope\n        } = _ref26;\n        context.set(\"stage\", \"maximized\");\n        context.set(\"prevSize\", context.get(\"size\"));\n        context.set(\"prevPosition\", context.get(\"position\"));\n        const boundaryEl = (_prop1 = prop(\"getBoundaryEl\")) === null || _prop1 === void 0 ? void 0 : _prop1();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        context.set(\"position\", pick(boundaryRect, [\"x\", \"y\"]));\n        context.set(\"size\", pick(boundaryRect, [\"height\", \"width\"]));\n      },\n      setMinimized(_ref27) {\n        let {\n          context,\n          scope\n        } = _ref27;\n        context.set(\"stage\", \"minimized\");\n        context.set(\"prevSize\", context.get(\"size\"));\n        context.set(\"prevPosition\", context.get(\"position\"));\n        const headerEl = getHeaderEl(scope);\n        if (!headerEl) return;\n        const size = _objectSpread(_objectSpread({}, context.get(\"size\")), {}, {\n          height: headerEl === null || headerEl === void 0 ? void 0 : headerEl.offsetHeight\n        });\n        context.set(\"size\", size);\n      },\n      setRestored(_ref28) {\n        var _prop10;\n        let {\n          context,\n          prop,\n          scope\n        } = _ref28;\n        const boundaryRect = getBoundaryRect(scope, (_prop10 = prop(\"getBoundaryEl\")) === null || _prop10 === void 0 ? void 0 : _prop10(), false);\n        context.set(\"stage\", \"default\");\n        const prevSize = context.get(\"prevSize\");\n        if (prevSize) {\n          let nextSize = prevSize;\n          nextSize = clampSize(nextSize, prop(\"minSize\"), prop(\"maxSize\"));\n          nextSize = clampSize(nextSize, prop(\"minSize\"), boundaryRect);\n          context.set(\"size\", nextSize);\n          context.set(\"prevSize\", null);\n        }\n        if (context.get(\"prevPosition\")) {\n          let nextPosition = context.get(\"prevPosition\");\n          nextPosition = clampPoint(nextPosition, context.get(\"size\"), boundaryRect);\n          context.set(\"position\", nextPosition);\n          context.set(\"prevPosition\", null);\n        }\n      },\n      setPositionFromKeyboard(_ref29) {\n        var _prop11;\n        let {\n          context,\n          event,\n          prop,\n          scope\n        } = _ref29;\n        invariant(event.step == null, \"step is required\");\n        const position = context.get(\"position\");\n        const step = event.step;\n        let nextPosition = match(event.direction, {\n          left: {\n            x: position.x - step,\n            y: position.y\n          },\n          right: {\n            x: position.x + step,\n            y: position.y\n          },\n          up: {\n            x: position.x,\n            y: position.y - step\n          },\n          down: {\n            x: position.x,\n            y: position.y + step\n          }\n        });\n        const boundaryEl = (_prop11 = prop(\"getBoundaryEl\")) === null || _prop11 === void 0 ? void 0 : _prop11();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        nextPosition = clampPoint(nextPosition, context.get(\"size\"), boundaryRect);\n        context.set(\"position\", nextPosition);\n      },\n      bringToFrontOfPanelStack(_ref30) {\n        let {\n          prop\n        } = _ref30;\n        panelStack.bringToFront(prop(\"id\"));\n      },\n      invokeOnOpen(_ref31) {\n        var _prop12;\n        let {\n          prop\n        } = _ref31;\n        (_prop12 = prop(\"onOpenChange\")) === null || _prop12 === void 0 || _prop12({\n          open: true\n        });\n      },\n      invokeOnClose(_ref32) {\n        var _prop13;\n        let {\n          prop\n        } = _ref32;\n        (_prop13 = prop(\"onOpenChange\")) === null || _prop13 === void 0 || _prop13({\n          open: false\n        });\n      },\n      invokeOnDragEnd(_ref33) {\n        var _prop14;\n        let {\n          context,\n          prop\n        } = _ref33;\n        (_prop14 = prop(\"onPositionChangeEnd\")) === null || _prop14 === void 0 || _prop14({\n          position: context.get(\"position\")\n        });\n      },\n      invokeOnResizeEnd(_ref34) {\n        var _prop15;\n        let {\n          context,\n          prop\n        } = _ref34;\n        (_prop15 = prop(\"onSizeChangeEnd\")) === null || _prop15 === void 0 || _prop15({\n          size: context.get(\"size\")\n        });\n      },\n      focusTriggerEl(_ref35) {\n        let {\n          scope\n        } = _ref35;\n        raf(() => {\n          var _getTriggerEl;\n          (_getTriggerEl = getTriggerEl(scope)) === null || _getTriggerEl === void 0 || _getTriggerEl.focus();\n        });\n      },\n      focusContentEl(_ref36) {\n        let {\n          scope\n        } = _ref36;\n        raf(() => {\n          var _getContentEl;\n          (_getContentEl = getContentEl(scope)) === null || _getContentEl === void 0 || _getContentEl.focus();\n        });\n      },\n      toggleVisibility(_ref37) {\n        let {\n          send,\n          prop,\n          event\n        } = _ref37;\n        send({\n          type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: event\n        });\n      }\n    }\n  }\n});\nvar props = createProps()([\"allowOverflow\", \"closeOnEscape\", \"defaultOpen\", \"defaultPosition\", \"defaultSize\", \"dir\", \"disabled\", \"draggable\", \"getAnchorPosition\", \"getBoundaryEl\", \"getRootNode\", \"gridSize\", \"id\", \"ids\", \"lockAspectRatio\", \"maxSize\", \"minSize\", \"onOpenChange\", \"onPositionChange\", \"onPositionChangeEnd\", \"onSizeChange\", \"onSizeChangeEnd\", \"onStageChange\", \"open\", \"persistRect\", \"position\", \"resizable\", \"size\", \"strategy\", \"translations\"]);\nvar splitProps = createSplitProps(props);\nvar resizeTriggerProps = createProps()([\"axis\"]);\nvar splitResizeTriggerProps = createSplitProps(resizeTriggerProps);\nexport { anatomy, connect, machine, props, resizeTriggerProps, splitProps, splitResizeTriggerProps };","map":{"version":3,"names":["createAnatomy","raf","isHTMLElement","addDomEvent","trackPointerMove","dataAttr","isLeftClick","getEventTarget","getEventStep","getEventKey","invariant","match","pick","clampValue","ensureProps","createSplitProps","toPx","clampPoint","clampSize","createRect","subtractPoints","resizeRect","addPoints","getElementRect","isPointEqual","isSizeEqual","getWindowRect","constrainRect","createGuards","createMachine","proxy","subscribe","createProps","anatomy","parts","build","getTriggerId","ctx","_ctx$ids$trigger","_ctx$ids","ids","trigger","concat","id","getPositionerId","_ctx$ids$positioner","_ctx$ids2","positioner","getContentId","_ctx$ids$content","_ctx$ids3","content","getTitleId","_ctx$ids$title","_ctx$ids4","title","getHeaderId","_ctx$ids$header","_ctx$ids5","header","getTriggerEl","getById","getPositionerEl","getContentEl","getHeaderEl","getBoundaryRect","boundaryEl","allowOverflow","boundaryRect","getWin","x","width","y","minY","height","getResizeAxisStyle","axis","cursor","left","translate","right","top","bottom","Error","validStages","Set","connect","service","normalize","state","send","scope","prop","computed","context","open","hasTag","dragging","matches","resizing","isTopmost","get","size","position","isMaximized","isMinimized","isStaged","canResize","canDrag","resizable","draggable","setOpen","nextOpen","open2","type","setPosition","position2","setSize","size2","minimize","maximize","restore","getTriggerProps","button","_objectSpread","attrs","disabled","onClick","event","defaultPrevented","src","getPositionerProps","element","style","getContentProps","role","tabIndex","hidden","overflow","onFocus","onKeyDown","currentTarget","step","keyMap","Escape","ArrowLeft","direction","ArrowRight","ArrowUp","ArrowDown","handler","dir","preventDefault","getCloseTriggerProps","closeTrigger","getStageTriggerProps","props2","has","stage","Array","from","join","translations","actionProps","minimized","maximized","default","stageTrigger","toUpperCase","getResizeTriggerProps","resizeTrigger","onPointerDown","setPointerCapture","pointerId","stopPropagation","clientX","clientY","onPointerUp","node","hasPointerCapture","releasePointerCapture","touchAction","getDragTriggerProps","dragTrigger","target","closest","onDoubleClick","WebkitUserSelect","userSelect","getControlProps","control","getTitleProps","getHeaderProps","getBodyProps","body","panelStack","stack","count","length","add","panelId","includes","push","remove","index","indexOf","splice","bringToFront","not","and","defaultTranslations","machine","props","_ref","strategy","gridSize","defaultSize","defaultPosition","hasSpecifiedPosition","initialState","_ref2","_ref3","bindable","defaultValue","value","isEqual","sync","hash","v","onChange","_prop","_prop2","_prop3","lastEventPosition","prevPosition","prevSize","_ref4","_ref5","_ref6","_ref7","_ref8","watch","_ref9","track","action","effects","on","CONTENT_FOCUS","actions","SET_POSITION","SET_SIZE","states","closed","tags","OPEN","guard","entry","DRAG_START","RESIZE_START","CLOSE","ESCAPE","MINIMIZE","MAXIMIZE","RESTORE","MOVE","exit","DRAG","DRAG_END","implementations","guards","closeOnEsc","_ref0","_ref1","_ref10","isOpenControlled","_ref11","_ref12","_prop4","evt","doc","getDoc","onPointerMove","_ref13","point","altKey","shiftKey","trackBoundaryRect","_ref14","_prop6","win","skip","exec","_prop5","boundaryEl2","rect","set","obs","ResizeObserver","observe","disconnect","trackPanelStack","_ref15","unsub","contentEl","setProperty","setAnchorPosition","_ref16","hasPrevRect","_prop7","_prop8","triggerRect","anchorPosition","DOMRect","fromRect","setPrevPosition","_ref17","clearPrevPosition","_ref18","_ref19","_prop9","diff","Math","round","setPositionStyle","_ref20","el","resetRect","_ref21","initial","setPrevSize","_ref22","clearPrevSize","_ref23","_ref24","_prop0","prevRect","offset","nextRect","scalingOriginMode","lockAspectRatio","nextSize","nextPosition","setSizeStyle","_ref25","queueMicrotask","setMaximized","_ref26","_prop1","setMinimized","_ref27","headerEl","offsetHeight","setRestored","_ref28","_prop10","setPositionFromKeyboard","_ref29","_prop11","up","down","bringToFrontOfPanelStack","_ref30","invokeOnOpen","_ref31","_prop12","invokeOnClose","_ref32","_prop13","invokeOnDragEnd","_ref33","_prop14","invokeOnResizeEnd","_ref34","_prop15","focusTriggerEl","_ref35","_getTriggerEl","focus","focusContentEl","_ref36","_getContentEl","toggleVisibility","_ref37","previousEvent","splitProps","resizeTriggerProps","splitResizeTriggerProps"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@zag-js/floating-panel/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, isHTMLElement, addDomEvent, trackPointerMove, dataAttr, isLeftClick, getEventTarget, getEventStep, getEventKey } from '@zag-js/dom-query';\nimport { invariant, match, pick, clampValue, ensureProps, createSplitProps, toPx } from '@zag-js/utils';\nimport { clampPoint, clampSize, createRect, subtractPoints, resizeRect, addPoints, getElementRect, isPointEqual, isSizeEqual, getWindowRect, constrainRect } from '@zag-js/rect-utils';\nimport { createGuards, createMachine } from '@zag-js/core';\nimport { proxy, subscribe } from '@zag-js/store';\nimport { createProps } from '@zag-js/types';\n\n// src/floating-panel.anatomy.ts\nvar anatomy = createAnatomy(\"floating-panel\").parts(\n  \"trigger\",\n  \"positioner\",\n  \"content\",\n  \"header\",\n  \"body\",\n  \"title\",\n  \"resizeTrigger\",\n  \"dragTrigger\",\n  \"stageTrigger\",\n  \"closeTrigger\",\n  \"control\"\n);\nvar parts = anatomy.build();\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `float:${ctx.id}:trigger`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `float:${ctx.id}:positioner`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `float:${ctx.id}:content`;\nvar getTitleId = (ctx) => ctx.ids?.title ?? `float:${ctx.id}:title`;\nvar getHeaderId = (ctx) => ctx.ids?.header ?? `float:${ctx.id}:header`;\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getHeaderEl = (ctx) => ctx.getById(getHeaderId(ctx));\nvar getBoundaryRect = (ctx, boundaryEl, allowOverflow) => {\n  let boundaryRect;\n  if (isHTMLElement(boundaryEl)) {\n    boundaryRect = getElementRect(boundaryEl);\n  } else {\n    boundaryRect = getWindowRect(ctx.getWin());\n  }\n  if (allowOverflow) {\n    boundaryRect = createRect({\n      x: -boundaryRect.width,\n      // empty(left)\n      y: boundaryRect.minY,\n      width: boundaryRect.width * 3,\n      // empty(left) + win + empty(right)\n      height: boundaryRect.height * 2\n      // win + empty(bottom)\n    });\n  }\n  return pick(boundaryRect, [\"x\", \"y\", \"width\", \"height\"]);\n};\n\n// src/get-resize-axis-style.ts\nfunction getResizeAxisStyle(axis) {\n  switch (axis) {\n    case \"n\":\n      return {\n        cursor: \"n-resize\",\n        width: \"100%\",\n        left: \"50%\",\n        translate: \"-50%\"\n      };\n    case \"e\":\n      return {\n        cursor: \"e-resize\",\n        height: \"100%\",\n        right: 0,\n        top: \"50%\",\n        translate: \"0 -50%\"\n      };\n    case \"s\":\n      return {\n        cursor: \"s-resize\",\n        width: \"100%\",\n        bottom: 0,\n        left: \"50%\",\n        translate: \"-50%\"\n      };\n    case \"w\":\n      return {\n        cursor: \"w-resize\",\n        height: \"100%\",\n        left: 0,\n        top: \"50%\",\n        translate: \"0 -50%\"\n      };\n    case \"se\":\n      return {\n        cursor: \"se-resize\",\n        bottom: 0,\n        right: 0\n      };\n    case \"sw\":\n      return {\n        cursor: \"sw-resize\",\n        bottom: 0,\n        left: 0\n      };\n    case \"ne\":\n      return {\n        cursor: \"ne-resize\",\n        top: 0,\n        right: 0\n      };\n    case \"nw\":\n      return {\n        cursor: \"nw-resize\",\n        top: 0,\n        left: 0\n      };\n    default:\n      throw new Error(`Invalid axis: ${axis}`);\n  }\n}\n\n// src/floating-panel.connect.ts\nvar validStages = /* @__PURE__ */ new Set([\"minimized\", \"maximized\", \"default\"]);\nfunction connect(service, normalize) {\n  const { state, send, scope, prop, computed, context } = service;\n  const open = state.hasTag(\"open\");\n  const dragging = state.matches(\"open.dragging\");\n  const resizing = state.matches(\"open.resizing\");\n  const isTopmost = context.get(\"isTopmost\");\n  const size = context.get(\"size\");\n  const position = context.get(\"position\");\n  const isMaximized = computed(\"isMaximized\");\n  const isMinimized = computed(\"isMinimized\");\n  const isStaged = computed(\"isStaged\");\n  const canResize = computed(\"canResize\");\n  const canDrag = computed(\"canDrag\");\n  return {\n    open,\n    resizable: prop(\"resizable\"),\n    draggable: prop(\"draggable\"),\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    dragging,\n    resizing,\n    position,\n    size,\n    setPosition(position2) {\n      send({ type: \"SET_POSITION\", position: position2 });\n    },\n    setSize(size2) {\n      send({ type: \"SET_SIZE\", size: size2 });\n    },\n    minimize() {\n      send({ type: \"MINIMIZE\" });\n    },\n    maximize() {\n      send({ type: \"MAXIMIZE\" });\n    },\n    restore() {\n      send({ type: \"RESTORE\" });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        type: \"button\",\n        disabled: prop(\"disabled\"),\n        id: getTriggerId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-dragging\": dataAttr(dragging),\n        \"aria-controls\": getContentId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (prop(\"disabled\")) return;\n          const open2 = state.hasTag(\"open\");\n          send({ type: open2 ? \"CLOSE\" : \"OPEN\", src: \"trigger\" });\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        id: getPositionerId(scope),\n        style: {\n          \"--width\": toPx(size?.width),\n          \"--height\": toPx(size?.height),\n          \"--x\": toPx(position?.x),\n          \"--y\": toPx(position?.y),\n          position: prop(\"strategy\"),\n          top: \"var(--y)\",\n          left: \"var(--x)\"\n        }\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        role: \"dialog\",\n        tabIndex: 0,\n        hidden: !open,\n        id: getContentId(scope),\n        \"aria-labelledby\": getTitleId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-dragging\": dataAttr(dragging),\n        \"data-topmost\": dataAttr(isTopmost),\n        \"data-behind\": dataAttr(!isTopmost),\n        \"data-minimized\": dataAttr(isMinimized),\n        \"data-maximized\": dataAttr(isMaximized),\n        \"data-staged\": dataAttr(isStaged),\n        style: {\n          width: \"var(--width)\",\n          height: \"var(--height)\",\n          overflow: isMinimized ? \"hidden\" : void 0\n        },\n        onFocus() {\n          send({ type: \"CONTENT_FOCUS\" });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.currentTarget !== getEventTarget(event)) return;\n          const step = getEventStep(event) * prop(\"gridSize\");\n          const keyMap = {\n            Escape() {\n              if (!isTopmost) return;\n              send({ type: \"ESCAPE\" });\n            },\n            ArrowLeft() {\n              send({ type: \"MOVE\", direction: \"left\", step });\n            },\n            ArrowRight() {\n              send({ type: \"MOVE\", direction: \"right\", step });\n            },\n            ArrowUp() {\n              send({ type: \"MOVE\", direction: \"up\", step });\n            },\n            ArrowDown() {\n              send({ type: \"MOVE\", direction: \"down\", step });\n            }\n          };\n          const handler = keyMap[getEventKey(event, { dir: prop(\"dir\") })];\n          if (handler) {\n            event.preventDefault();\n            handler(event);\n          }\n        }\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        disabled: prop(\"disabled\"),\n        \"aria-label\": \"Close Window\",\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"CLOSE\" });\n        }\n      });\n    },\n    getStageTriggerProps(props2) {\n      if (!validStages.has(props2.stage)) {\n        throw new Error(`[zag-js] Invalid stage: ${props2.stage}. Must be one of: ${Array.from(validStages).join(\", \")}`);\n      }\n      const translations = prop(\"translations\");\n      const actionProps = match(props2.stage, {\n        minimized: () => ({\n          \"aria-label\": translations.minimize,\n          hidden: isStaged\n        }),\n        maximized: () => ({\n          \"aria-label\": translations.maximize,\n          hidden: isStaged\n        }),\n        default: () => ({\n          \"aria-label\": translations.restore,\n          hidden: !isStaged\n        })\n      });\n      return normalize.button({\n        ...parts.stageTrigger.attrs,\n        disabled: prop(\"disabled\"),\n        ...actionProps,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          const type = match(props2.stage, {\n            minimized: () => \"MINIMIZE\",\n            maximized: () => \"MAXIMIZE\",\n            default: () => \"RESTORE\"\n          });\n          send({ type: type.toUpperCase() });\n        }\n      });\n    },\n    getResizeTriggerProps(props2) {\n      return normalize.element({\n        ...parts.resizeTrigger.attrs,\n        \"data-disabled\": dataAttr(!canResize),\n        \"data-axis\": props2.axis,\n        onPointerDown(event) {\n          if (!canResize) return;\n          if (!isLeftClick(event)) return;\n          event.currentTarget.setPointerCapture(event.pointerId);\n          event.stopPropagation();\n          send({\n            type: \"RESIZE_START\",\n            axis: props2.axis,\n            position: { x: event.clientX, y: event.clientY }\n          });\n        },\n        onPointerUp(event) {\n          if (!canResize) return;\n          const node = event.currentTarget;\n          if (node.hasPointerCapture(event.pointerId)) {\n            node.releasePointerCapture(event.pointerId);\n          }\n        },\n        style: {\n          position: \"absolute\",\n          touchAction: \"none\",\n          ...getResizeAxisStyle(props2.axis)\n        }\n      });\n    },\n    getDragTriggerProps() {\n      return normalize.element({\n        ...parts.dragTrigger.attrs,\n        \"data-disabled\": dataAttr(!canDrag),\n        onPointerDown(event) {\n          if (!canDrag) return;\n          if (!isLeftClick(event)) return;\n          const target = getEventTarget(event);\n          if (target?.closest(\"button\") || target?.closest(\"[data-no-drag]\")) {\n            return;\n          }\n          event.currentTarget.setPointerCapture(event.pointerId);\n          event.stopPropagation();\n          send({\n            type: \"DRAG_START\",\n            pointerId: event.pointerId,\n            position: { x: event.clientX, y: event.clientY }\n          });\n        },\n        onPointerUp(event) {\n          if (!canDrag) return;\n          const node = event.currentTarget;\n          if (node.hasPointerCapture(event.pointerId)) {\n            node.releasePointerCapture(event.pointerId);\n          }\n        },\n        onDoubleClick() {\n          send({ type: isMaximized ? \"RESTORE\" : \"MAXIMIZE\" });\n        },\n        style: {\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\",\n          touchAction: \"none\",\n          cursor: \"move\"\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        \"data-disabled\": dataAttr(prop(\"disabled\")),\n        \"data-stage\": context.get(\"stage\"),\n        \"data-minimized\": dataAttr(isMinimized),\n        \"data-maximized\": dataAttr(isMaximized),\n        \"data-staged\": dataAttr(isStaged)\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: getTitleId(scope)\n      });\n    },\n    getHeaderProps() {\n      return normalize.element({\n        ...parts.header.attrs,\n        id: getHeaderId(scope),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-topmost\": dataAttr(isTopmost),\n        \"data-behind\": dataAttr(!isTopmost),\n        \"data-minimized\": dataAttr(isMinimized),\n        \"data-maximized\": dataAttr(isMaximized),\n        \"data-staged\": dataAttr(isStaged)\n      });\n    },\n    getBodyProps() {\n      return normalize.element({\n        ...parts.body.attrs,\n        \"data-dragging\": dataAttr(dragging),\n        \"data-minimized\": dataAttr(isMinimized),\n        \"data-maximized\": dataAttr(isMaximized),\n        \"data-staged\": dataAttr(isStaged),\n        hidden: isMinimized\n      });\n    }\n  };\n}\nvar panelStack = proxy({\n  stack: [],\n  count() {\n    return this.stack.length;\n  },\n  add(panelId) {\n    if (this.stack.includes(panelId)) return;\n    this.stack.push(panelId);\n  },\n  remove(panelId) {\n    const index = this.stack.indexOf(panelId);\n    if (index < 0) return;\n    this.stack.splice(index, 1);\n  },\n  bringToFront(id) {\n    this.remove(id);\n    this.add(id);\n  },\n  isTopmost(id) {\n    return this.stack[this.stack.length - 1] === id;\n  },\n  indexOf(id) {\n    return this.stack.indexOf(id);\n  }\n});\n\n// src/floating-panel.machine.ts\nvar { not, and } = createGuards();\nvar defaultTranslations = {\n  minimize: \"Minimize window\",\n  maximize: \"Maximize window\",\n  restore: \"Restore window\"\n};\nvar machine = createMachine({\n  props({ props: props2 }) {\n    ensureProps(props2, [\"id\"], \"floating-panel\");\n    return {\n      strategy: \"fixed\",\n      gridSize: 1,\n      defaultSize: { width: 320, height: 240 },\n      defaultPosition: { x: 300, y: 100 },\n      allowOverflow: true,\n      resizable: true,\n      draggable: true,\n      ...props2,\n      hasSpecifiedPosition: !!props2.defaultPosition || !!props2.position,\n      translations: {\n        ...defaultTranslations,\n        ...props2.translations\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ prop, bindable }) {\n    return {\n      size: bindable(() => ({\n        defaultValue: prop(\"defaultSize\"),\n        value: prop(\"size\"),\n        isEqual: isSizeEqual,\n        sync: true,\n        hash(v) {\n          return `W:${v.width} H:${v.height}`;\n        },\n        onChange(value) {\n          prop(\"onSizeChange\")?.({ size: value });\n        }\n      })),\n      position: bindable(() => ({\n        defaultValue: prop(\"defaultPosition\"),\n        value: prop(\"position\"),\n        isEqual: isPointEqual,\n        sync: true,\n        hash(v) {\n          return `X:${v.x} Y:${v.y}`;\n        },\n        onChange(value) {\n          prop(\"onPositionChange\")?.({ position: value });\n        }\n      })),\n      stage: bindable(() => ({\n        defaultValue: \"default\",\n        onChange(value) {\n          prop(\"onStageChange\")?.({ stage: value });\n        }\n      })),\n      lastEventPosition: bindable(() => ({\n        defaultValue: null\n      })),\n      prevPosition: bindable(() => ({\n        defaultValue: null\n      })),\n      prevSize: bindable(() => ({\n        defaultValue: null\n      })),\n      isTopmost: bindable(() => ({\n        defaultValue: void 0\n      }))\n    };\n  },\n  computed: {\n    isMaximized: ({ context }) => context.get(\"stage\") === \"maximized\",\n    isMinimized: ({ context }) => context.get(\"stage\") === \"minimized\",\n    isStaged: ({ context }) => context.get(\"stage\") !== \"default\",\n    canResize: ({ context, prop }) => (prop(\"resizable\") || !prop(\"disabled\")) && context.get(\"stage\") === \"default\",\n    canDrag: ({ prop, computed }) => (prop(\"draggable\") || !prop(\"disabled\")) && !computed(\"isMaximized\")\n  },\n  watch({ track, context, action, prop }) {\n    track([() => context.hash(\"position\")], () => {\n      action([\"setPositionStyle\"]);\n    });\n    track([() => context.hash(\"size\")], () => {\n      action([\"setSizeStyle\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  effects: [\"trackPanelStack\"],\n  on: {\n    CONTENT_FOCUS: {\n      actions: [\"bringToFrontOfPanelStack\"]\n    },\n    SET_POSITION: {\n      actions: [\"setPosition\"]\n    },\n    SET_SIZE: {\n      actions: [\"setSize\"]\n    }\n  },\n  states: {\n    closed: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setAnchorPosition\", \"setPositionStyle\", \"setSizeStyle\", \"focusContentEl\"]\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setAnchorPosition\", \"setPositionStyle\", \"setSizeStyle\", \"focusContentEl\"]\n          }\n        ]\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      entry: [\"bringToFrontOfPanelStack\"],\n      effects: [\"trackBoundaryRect\"],\n      on: {\n        DRAG_START: {\n          guard: not(\"isMaximized\"),\n          target: \"open.dragging\",\n          actions: [\"setPrevPosition\"]\n        },\n        RESIZE_START: {\n          guard: not(\"isMinimized\"),\n          target: \"open.resizing\",\n          actions: [\"setPrevSize\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\", \"focusTriggerEl\"]\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"resetRect\", \"focusTriggerEl\"]\n          }\n        ],\n        ESCAPE: [\n          {\n            guard: and(\"isOpenControlled\", \"closeOnEsc\"),\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnEsc\",\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"resetRect\", \"focusTriggerEl\"]\n          }\n        ],\n        MINIMIZE: {\n          actions: [\"setMinimized\"]\n        },\n        MAXIMIZE: {\n          actions: [\"setMaximized\"]\n        },\n        RESTORE: {\n          actions: [\"setRestored\"]\n        },\n        MOVE: {\n          actions: [\"setPositionFromKeyboard\"]\n        }\n      }\n    },\n    \"open.dragging\": {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\"],\n      exit: [\"clearPrevPosition\"],\n      on: {\n        DRAG: {\n          actions: [\"setPosition\"]\n        },\n        DRAG_END: {\n          target: \"open\",\n          actions: [\"invokeOnDragEnd\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\"]\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"resetRect\"]\n          }\n        ],\n        ESCAPE: {\n          target: \"open\"\n        }\n      }\n    },\n    \"open.resizing\": {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\"],\n      exit: [\"clearPrevSize\"],\n      on: {\n        DRAG: {\n          actions: [\"setSize\"]\n        },\n        DRAG_END: {\n          target: \"open\",\n          actions: [\"invokeOnResizeEnd\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\"]\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"resetRect\"]\n          }\n        ],\n        ESCAPE: {\n          target: \"open\"\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      closeOnEsc: ({ prop }) => !!prop(\"closeOnEscape\"),\n      isMaximized: ({ context }) => context.get(\"stage\") === \"maximized\",\n      isMinimized: ({ context }) => context.get(\"stage\") === \"minimized\",\n      isOpenControlled: ({ prop }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackPointerMove({ scope, send, event: evt, prop }) {\n        const doc = scope.getDoc();\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        return trackPointerMove(doc, {\n          onPointerMove({ point, event }) {\n            const { altKey, shiftKey } = event;\n            let x = clampValue(point.x, boundaryRect.x, boundaryRect.x + boundaryRect.width);\n            let y = clampValue(point.y, boundaryRect.y, boundaryRect.y + boundaryRect.height);\n            send({ type: \"DRAG\", position: { x, y }, axis: evt.axis, altKey, shiftKey });\n          },\n          onPointerUp() {\n            send({ type: \"DRAG_END\" });\n          }\n        });\n      },\n      trackBoundaryRect({ context, scope, prop, computed }) {\n        const win = scope.getWin();\n        let skip = true;\n        const exec = () => {\n          if (skip) {\n            skip = false;\n            return;\n          }\n          const boundaryEl2 = prop(\"getBoundaryEl\")?.();\n          let boundaryRect = getBoundaryRect(scope, boundaryEl2, false);\n          if (!computed(\"isMaximized\")) {\n            const rect = { ...context.get(\"position\"), ...context.get(\"size\") };\n            boundaryRect = constrainRect(rect, boundaryRect);\n          }\n          context.set(\"size\", pick(boundaryRect, [\"width\", \"height\"]));\n          context.set(\"position\", pick(boundaryRect, [\"x\", \"y\"]));\n        };\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        if (isHTMLElement(boundaryEl)) {\n          const obs = new win.ResizeObserver(exec);\n          obs.observe(boundaryEl);\n          return () => obs.disconnect();\n        }\n        return addDomEvent(win, \"resize\", exec);\n      },\n      trackPanelStack({ context, scope }) {\n        const unsub = subscribe(panelStack, () => {\n          context.set(\"isTopmost\", panelStack.isTopmost(scope.id));\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const index = panelStack.indexOf(scope.id);\n          if (index === -1) return;\n          contentEl.style.setProperty(\"--z-index\", `${index + 1}`);\n        });\n        return () => {\n          panelStack.remove(scope.id);\n          unsub();\n        };\n      }\n    },\n    actions: {\n      setAnchorPosition({ context, prop, scope }) {\n        if (prop(\"hasSpecifiedPosition\")) return;\n        const hasPrevRect = context.get(\"prevPosition\") || context.get(\"prevSize\");\n        if (prop(\"persistRect\") && hasPrevRect) return;\n        raf(() => {\n          const triggerRect = getTriggerEl(scope);\n          const boundaryRect = getBoundaryRect(scope, prop(\"getBoundaryEl\")?.(), false);\n          let anchorPosition = prop(\"getAnchorPosition\")?.({\n            triggerRect: triggerRect ? DOMRect.fromRect(getElementRect(triggerRect)) : null,\n            boundaryRect: DOMRect.fromRect(boundaryRect)\n          });\n          if (!anchorPosition) {\n            const size = context.get(\"size\");\n            anchorPosition = {\n              x: boundaryRect.x + (boundaryRect.width - size.width) / 2,\n              y: boundaryRect.y + (boundaryRect.height - size.height) / 2\n            };\n          }\n          if (!anchorPosition) return;\n          context.set(\"position\", anchorPosition);\n        });\n      },\n      setPrevPosition({ context, event }) {\n        context.set(\"prevPosition\", { ...context.get(\"position\") });\n        context.set(\"lastEventPosition\", event.position);\n      },\n      clearPrevPosition({ context, prop }) {\n        if (!prop(\"persistRect\")) context.set(\"prevPosition\", null);\n        context.set(\"lastEventPosition\", null);\n      },\n      setPosition({ context, event, prop, scope }) {\n        let diff = subtractPoints(event.position, context.get(\"lastEventPosition\"));\n        diff.x = Math.round(diff.x / prop(\"gridSize\")) * prop(\"gridSize\");\n        diff.y = Math.round(diff.y / prop(\"gridSize\")) * prop(\"gridSize\");\n        const prevPosition = context.get(\"prevPosition\");\n        if (!prevPosition) return;\n        let position = addPoints(prevPosition, diff);\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, prop(\"allowOverflow\"));\n        position = clampPoint(position, context.get(\"size\"), boundaryRect);\n        context.set(\"position\", position);\n      },\n      setPositionStyle({ scope, context }) {\n        const el = getPositionerEl(scope);\n        const position = context.get(\"position\");\n        el?.style.setProperty(\"--x\", `${position.x}px`);\n        el?.style.setProperty(\"--y\", `${position.y}px`);\n      },\n      resetRect({ context, prop }) {\n        context.set(\"stage\", \"default\");\n        if (!prop(\"persistRect\")) {\n          context.set(\"position\", context.initial(\"position\"));\n          context.set(\"size\", context.initial(\"size\"));\n        }\n      },\n      setPrevSize({ context, event }) {\n        context.set(\"prevSize\", { ...context.get(\"size\") });\n        context.set(\"prevPosition\", { ...context.get(\"position\") });\n        context.set(\"lastEventPosition\", event.position);\n      },\n      clearPrevSize({ context }) {\n        context.set(\"prevSize\", null);\n        context.set(\"prevPosition\", null);\n        context.set(\"lastEventPosition\", null);\n      },\n      setSize({ context, event, scope, prop }) {\n        const prevSize = context.get(\"prevSize\");\n        const prevPosition = context.get(\"prevPosition\");\n        const lastEventPosition = context.get(\"lastEventPosition\");\n        if (!prevSize || !prevPosition || !lastEventPosition) return;\n        const prevRect = createRect({ ...prevPosition, ...prevSize });\n        const offset = subtractPoints(event.position, lastEventPosition);\n        const nextRect = resizeRect(prevRect, offset, event.axis, {\n          scalingOriginMode: event.altKey ? \"center\" : \"extent\",\n          lockAspectRatio: !!prop(\"lockAspectRatio\") || event.shiftKey\n        });\n        let nextSize = pick(nextRect, [\"width\", \"height\"]);\n        let nextPosition = pick(nextRect, [\"x\", \"y\"]);\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        nextSize = clampSize(nextSize, prop(\"minSize\"), prop(\"maxSize\"));\n        nextSize = clampSize(nextSize, prop(\"minSize\"), boundaryRect);\n        context.set(\"size\", nextSize);\n        if (nextPosition) {\n          const point = clampPoint(nextPosition, nextSize, boundaryRect);\n          context.set(\"position\", point);\n        }\n      },\n      setSizeStyle({ scope, context }) {\n        queueMicrotask(() => {\n          const el = getPositionerEl(scope);\n          const size = context.get(\"size\");\n          el?.style.setProperty(\"--width\", `${size.width}px`);\n          el?.style.setProperty(\"--height\", `${size.height}px`);\n        });\n      },\n      setMaximized({ context, prop, scope }) {\n        context.set(\"stage\", \"maximized\");\n        context.set(\"prevSize\", context.get(\"size\"));\n        context.set(\"prevPosition\", context.get(\"position\"));\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        context.set(\"position\", pick(boundaryRect, [\"x\", \"y\"]));\n        context.set(\"size\", pick(boundaryRect, [\"height\", \"width\"]));\n      },\n      setMinimized({ context, scope }) {\n        context.set(\"stage\", \"minimized\");\n        context.set(\"prevSize\", context.get(\"size\"));\n        context.set(\"prevPosition\", context.get(\"position\"));\n        const headerEl = getHeaderEl(scope);\n        if (!headerEl) return;\n        const size = {\n          ...context.get(\"size\"),\n          height: headerEl?.offsetHeight\n        };\n        context.set(\"size\", size);\n      },\n      setRestored({ context, prop, scope }) {\n        const boundaryRect = getBoundaryRect(scope, prop(\"getBoundaryEl\")?.(), false);\n        context.set(\"stage\", \"default\");\n        const prevSize = context.get(\"prevSize\");\n        if (prevSize) {\n          let nextSize = prevSize;\n          nextSize = clampSize(nextSize, prop(\"minSize\"), prop(\"maxSize\"));\n          nextSize = clampSize(nextSize, prop(\"minSize\"), boundaryRect);\n          context.set(\"size\", nextSize);\n          context.set(\"prevSize\", null);\n        }\n        if (context.get(\"prevPosition\")) {\n          let nextPosition = context.get(\"prevPosition\");\n          nextPosition = clampPoint(nextPosition, context.get(\"size\"), boundaryRect);\n          context.set(\"position\", nextPosition);\n          context.set(\"prevPosition\", null);\n        }\n      },\n      setPositionFromKeyboard({ context, event, prop, scope }) {\n        invariant(event.step == null, \"step is required\");\n        const position = context.get(\"position\");\n        const step = event.step;\n        let nextPosition = match(event.direction, {\n          left: { x: position.x - step, y: position.y },\n          right: { x: position.x + step, y: position.y },\n          up: { x: position.x, y: position.y - step },\n          down: { x: position.x, y: position.y + step }\n        });\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        nextPosition = clampPoint(nextPosition, context.get(\"size\"), boundaryRect);\n        context.set(\"position\", nextPosition);\n      },\n      bringToFrontOfPanelStack({ prop }) {\n        panelStack.bringToFront(prop(\"id\"));\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      invokeOnDragEnd({ context, prop }) {\n        prop(\"onPositionChangeEnd\")?.({ position: context.get(\"position\") });\n      },\n      invokeOnResizeEnd({ context, prop }) {\n        prop(\"onSizeChangeEnd\")?.({ size: context.get(\"size\") });\n      },\n      focusTriggerEl({ scope }) {\n        raf(() => {\n          getTriggerEl(scope)?.focus();\n        });\n      },\n      focusContentEl({ scope }) {\n        raf(() => {\n          getContentEl(scope)?.focus();\n        });\n      },\n      toggleVisibility({ send, prop, event }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"allowOverflow\",\n  \"closeOnEscape\",\n  \"defaultOpen\",\n  \"defaultPosition\",\n  \"defaultSize\",\n  \"dir\",\n  \"disabled\",\n  \"draggable\",\n  \"getAnchorPosition\",\n  \"getBoundaryEl\",\n  \"getRootNode\",\n  \"gridSize\",\n  \"id\",\n  \"ids\",\n  \"lockAspectRatio\",\n  \"maxSize\",\n  \"minSize\",\n  \"onOpenChange\",\n  \"onPositionChange\",\n  \"onPositionChangeEnd\",\n  \"onSizeChange\",\n  \"onSizeChangeEnd\",\n  \"onStageChange\",\n  \"open\",\n  \"persistRect\",\n  \"position\",\n  \"resizable\",\n  \"size\",\n  \"strategy\",\n  \"translations\"\n]);\nvar splitProps = createSplitProps(props);\nvar resizeTriggerProps = createProps()([\"axis\"]);\nvar splitResizeTriggerProps = createSplitProps(resizeTriggerProps);\n\nexport { anatomy, connect, machine, props, resizeTriggerProps, splitProps, splitResizeTriggerProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}