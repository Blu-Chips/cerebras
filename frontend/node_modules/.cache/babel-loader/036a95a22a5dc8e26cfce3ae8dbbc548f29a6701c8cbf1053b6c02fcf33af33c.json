{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { TreeViewTree } from '../tree-view/tree-view-tree.js';\nimport { useTreeViewContext } from '../tree-view/use-tree-view-context.js';\nimport { JsonTreeViewNode } from './json-tree-view-node.js';\nconst splitTreeNodeProps = createSplitProps();\nconst JsonTreeViewTree = forwardRef((props, ref) => {\n  const [nodeProps, treeProps] = splitTreeNodeProps(props, [\"arrow\", \"indentGuide\", \"renderValue\"]);\n  const tree = useTreeViewContext();\n  const children = tree.collection.getNodeChildren(tree.collection.rootNode);\n  return /* @__PURE__ */jsx(TreeViewTree, _objectSpread(_objectSpread({\n    \"data-scope\": \"json-tree-view\"\n  }, treeProps), {}, {\n    ref,\n    children: children.map((child, index) => /* @__PURE__ */jsx(JsonTreeViewNode, _objectSpread({\n      node: child,\n      indexPath: [index]\n    }, nodeProps), index))\n  }));\n});\nJsonTreeViewTree.displayName = \"JsonTreeViewTree\";\nexport { JsonTreeViewTree };","map":{"version":3,"names":["_objectSpread","jsx","forwardRef","createSplitProps","TreeViewTree","useTreeViewContext","JsonTreeViewNode","splitTreeNodeProps","JsonTreeViewTree","props","ref","nodeProps","treeProps","tree","children","collection","getNodeChildren","rootNode","map","child","index","node","indexPath","displayName"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@ark-ui/react/dist/components/json-tree-view/json-tree-view-tree.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { TreeViewTree } from '../tree-view/tree-view-tree.js';\nimport { useTreeViewContext } from '../tree-view/use-tree-view-context.js';\nimport { JsonTreeViewNode } from './json-tree-view-node.js';\n\nconst splitTreeNodeProps = createSplitProps();\nconst JsonTreeViewTree = forwardRef((props, ref) => {\n  const [nodeProps, treeProps] = splitTreeNodeProps(props, [\"arrow\", \"indentGuide\", \"renderValue\"]);\n  const tree = useTreeViewContext();\n  const children = tree.collection.getNodeChildren(tree.collection.rootNode);\n  return /* @__PURE__ */ jsx(TreeViewTree, { \"data-scope\": \"json-tree-view\", ...treeProps, ref, children: children.map((child, index) => /* @__PURE__ */ jsx(JsonTreeViewNode, { node: child, indexPath: [index], ...nodeProps }, index)) });\n});\nJsonTreeViewTree.displayName = \"JsonTreeViewTree\";\n\nexport { JsonTreeViewTree };\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AACb,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,kBAAkB,QAAQ,uCAAuC;AAC1E,SAASC,gBAAgB,QAAQ,0BAA0B;AAE3D,MAAMC,kBAAkB,GAAGJ,gBAAgB,CAAC,CAAC;AAC7C,MAAMK,gBAAgB,GAAGN,UAAU,CAAC,CAACO,KAAK,EAAEC,GAAG,KAAK;EAClD,MAAM,CAACC,SAAS,EAAEC,SAAS,CAAC,GAAGL,kBAAkB,CAACE,KAAK,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;EACjG,MAAMI,IAAI,GAAGR,kBAAkB,CAAC,CAAC;EACjC,MAAMS,QAAQ,GAAGD,IAAI,CAACE,UAAU,CAACC,eAAe,CAACH,IAAI,CAACE,UAAU,CAACE,QAAQ,CAAC;EAC1E,OAAO,eAAgBhB,GAAG,CAACG,YAAY,EAAAJ,aAAA,CAAAA,aAAA;IAAI,YAAY,EAAE;EAAgB,GAAKY,SAAS;IAAEF,GAAG;IAAEI,QAAQ,EAAEA,QAAQ,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK,eAAgBnB,GAAG,CAACK,gBAAgB,EAAAN,aAAA;MAAIqB,IAAI,EAAEF,KAAK;MAAEG,SAAS,EAAE,CAACF,KAAK;IAAC,GAAKT,SAAS,GAAIS,KAAK,CAAC;EAAC,EAAE,CAAC;AAC5O,CAAC,CAAC;AACFZ,gBAAgB,CAACe,WAAW,GAAG,kBAAkB;AAEjD,SAASf,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}