{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport _objectSpread from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"align\", \"justify\", \"children\", \"wrap\", \"skip\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { memo, forwardRef, useMemo, Children, isValidElement, cloneElement } from 'react';\nimport { chakra } from '../../styled-system/factory.js';\nimport { dataAttr } from '../../utils/attr.js';\nimport { cx } from '../../utils/cx.js';\nconst StyledGroup = chakra(\"div\", {\n  base: {\n    display: \"inline-flex\",\n    gap: \"var(--group-gap, 0.5rem)\",\n    isolation: \"isolate\",\n    position: \"relative\",\n    \"& [data-group-item]\": {\n      _focusVisible: {\n        zIndex: 1\n      }\n    }\n  },\n  variants: {\n    orientation: {\n      horizontal: {\n        flexDirection: \"row\"\n      },\n      vertical: {\n        flexDirection: \"column\"\n      }\n    },\n    attached: {\n      true: {\n        gap: \"0!\"\n      }\n    },\n    grow: {\n      true: {\n        display: \"flex\",\n        \"& > *\": {\n          flex: 1\n        }\n      }\n    },\n    stacking: {\n      \"first-on-top\": {\n        \"& > [data-group-item]\": {\n          zIndex: \"calc(var(--group-count) - var(--group-index))\"\n        }\n      },\n      \"last-on-top\": {\n        \"& > [data-group-item]\": {\n          zIndex: \"var(--group-index)\"\n        }\n      }\n    }\n  },\n  compoundVariants: [{\n    orientation: \"horizontal\",\n    attached: true,\n    css: {\n      \"& > *[data-first]\": {\n        borderEndRadius: \"0!\",\n        marginEnd: \"-1px\"\n      },\n      \"& > *[data-between]\": {\n        borderRadius: \"0!\",\n        marginEnd: \"-1px\"\n      },\n      \"& > *[data-last]\": {\n        borderStartRadius: \"0!\"\n      }\n    }\n  }, {\n    orientation: \"vertical\",\n    attached: true,\n    css: {\n      \"& > *[data-first]\": {\n        borderBottomRadius: \"0!\",\n        marginBottom: \"-1px\"\n      },\n      \"& > *[data-between]\": {\n        borderRadius: \"0!\",\n        marginBottom: \"-1px\"\n      },\n      \"& > *[data-last]\": {\n        borderTopRadius: \"0!\"\n      }\n    }\n  }],\n  defaultVariants: {\n    orientation: \"horizontal\"\n  }\n});\nconst Group = memo(forwardRef(function Group2(props, ref) {\n  const {\n      align = \"center\",\n      justify = \"flex-start\",\n      children,\n      wrap,\n      skip\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const _children = useMemo(() => {\n    let childArray = Children.toArray(children).filter(isValidElement);\n    if (childArray.length === 1) return childArray;\n    const validChildArray = childArray.filter(child => !(skip !== null && skip !== void 0 && skip(child)));\n    const validChildCount = validChildArray.length;\n    if (validChildArray.length === 1) return childArray;\n    return childArray.map(child => {\n      var _childProps$style;\n      const childProps = child.props;\n      if (skip !== null && skip !== void 0 && skip(child)) return child;\n      const index = validChildArray.indexOf(child);\n      return cloneElement(child, _objectSpread(_objectSpread({}, childProps), {}, {\n        \"data-group-item\": \"\",\n        \"data-first\": dataAttr(index === 0),\n        \"data-last\": dataAttr(index === validChildCount - 1),\n        \"data-between\": dataAttr(index > 0 && index < validChildCount - 1),\n        style: _objectSpread({\n          \"--group-count\": validChildCount,\n          \"--group-index\": index\n        }, (_childProps$style = childProps === null || childProps === void 0 ? void 0 : childProps.style) !== null && _childProps$style !== void 0 ? _childProps$style : {})\n      }));\n    });\n  }, [children, skip]);\n  return /* @__PURE__ */jsx(StyledGroup, _objectSpread(_objectSpread({\n    ref,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap\n  }, rest), {}, {\n    className: cx(\"chakra-group\", props.className),\n    children: _children\n  }));\n}));\nexport { Group };","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","jsx","memo","forwardRef","useMemo","Children","isValidElement","cloneElement","chakra","dataAttr","cx","StyledGroup","base","display","gap","isolation","position","_focusVisible","zIndex","variants","orientation","horizontal","flexDirection","vertical","attached","true","grow","flex","stacking","compoundVariants","css","borderEndRadius","marginEnd","borderRadius","borderStartRadius","borderBottomRadius","marginBottom","borderTopRadius","defaultVariants","Group","Group2","props","ref","align","justify","children","wrap","skip","rest","_children","childArray","toArray","filter","length","validChildArray","child","validChildCount","map","_childProps$style","childProps","index","indexOf","style","alignItems","justifyContent","flexWrap","className"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@chakra-ui/react/dist/esm/components/group/group.js"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { memo, forwardRef, useMemo, Children, isValidElement, cloneElement } from 'react';\nimport { chakra } from '../../styled-system/factory.js';\nimport { dataAttr } from '../../utils/attr.js';\nimport { cx } from '../../utils/cx.js';\n\nconst StyledGroup = chakra(\"div\", {\n  base: {\n    display: \"inline-flex\",\n    gap: \"var(--group-gap, 0.5rem)\",\n    isolation: \"isolate\",\n    position: \"relative\",\n    \"& [data-group-item]\": {\n      _focusVisible: {\n        zIndex: 1\n      }\n    }\n  },\n  variants: {\n    orientation: {\n      horizontal: {\n        flexDirection: \"row\"\n      },\n      vertical: {\n        flexDirection: \"column\"\n      }\n    },\n    attached: {\n      true: {\n        gap: \"0!\"\n      }\n    },\n    grow: {\n      true: {\n        display: \"flex\",\n        \"& > *\": {\n          flex: 1\n        }\n      }\n    },\n    stacking: {\n      \"first-on-top\": {\n        \"& > [data-group-item]\": {\n          zIndex: \"calc(var(--group-count) - var(--group-index))\"\n        }\n      },\n      \"last-on-top\": {\n        \"& > [data-group-item]\": {\n          zIndex: \"var(--group-index)\"\n        }\n      }\n    }\n  },\n  compoundVariants: [\n    {\n      orientation: \"horizontal\",\n      attached: true,\n      css: {\n        \"& > *[data-first]\": {\n          borderEndRadius: \"0!\",\n          marginEnd: \"-1px\"\n        },\n        \"& > *[data-between]\": {\n          borderRadius: \"0!\",\n          marginEnd: \"-1px\"\n        },\n        \"& > *[data-last]\": {\n          borderStartRadius: \"0!\"\n        }\n      }\n    },\n    {\n      orientation: \"vertical\",\n      attached: true,\n      css: {\n        \"& > *[data-first]\": {\n          borderBottomRadius: \"0!\",\n          marginBottom: \"-1px\"\n        },\n        \"& > *[data-between]\": {\n          borderRadius: \"0!\",\n          marginBottom: \"-1px\"\n        },\n        \"& > *[data-last]\": {\n          borderTopRadius: \"0!\"\n        }\n      }\n    }\n  ],\n  defaultVariants: {\n    orientation: \"horizontal\"\n  }\n});\nconst Group = memo(\n  forwardRef(function Group2(props, ref) {\n    const {\n      align = \"center\",\n      justify = \"flex-start\",\n      children,\n      wrap,\n      skip,\n      ...rest\n    } = props;\n    const _children = useMemo(() => {\n      let childArray = Children.toArray(children).filter(isValidElement);\n      if (childArray.length === 1) return childArray;\n      const validChildArray = childArray.filter((child) => !skip?.(child));\n      const validChildCount = validChildArray.length;\n      if (validChildArray.length === 1) return childArray;\n      return childArray.map((child) => {\n        const childProps = child.props;\n        if (skip?.(child)) return child;\n        const index = validChildArray.indexOf(child);\n        return cloneElement(child, {\n          ...childProps,\n          \"data-group-item\": \"\",\n          \"data-first\": dataAttr(index === 0),\n          \"data-last\": dataAttr(index === validChildCount - 1),\n          \"data-between\": dataAttr(index > 0 && index < validChildCount - 1),\n          style: {\n            \"--group-count\": validChildCount,\n            \"--group-index\": index,\n            ...childProps?.style ?? {}\n          }\n        });\n      });\n    }, [children, skip]);\n    return /* @__PURE__ */ jsx(\n      StyledGroup,\n      {\n        ref,\n        alignItems: align,\n        justifyContent: justify,\n        flexWrap: wrap,\n        ...rest,\n        className: cx(\"chakra-group\", props.className),\n        children: _children\n      }\n    );\n  })\n);\n\nexport { Group };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}