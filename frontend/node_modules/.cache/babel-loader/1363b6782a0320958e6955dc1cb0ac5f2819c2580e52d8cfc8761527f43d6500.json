{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nconst JsonTreeViewValueNode = props => {\n  const {\n    node,\n    renderValue\n  } = props;\n  if (node.type === \"text\") {\n    var _renderValue;\n    return /* @__PURE__ */jsx(Fragment, {\n      children: (_renderValue = renderValue === null || renderValue === void 0 ? void 0 : renderValue(node)) !== null && _renderValue !== void 0 ? _renderValue : node.value\n    });\n  }\n  const Element = node.tagName;\n  return /* @__PURE__ */jsx(Element, {\n    \"data-root\": node.properties.root ? \"\" : void 0,\n    \"data-type\": node.properties.nodeType,\n    \"data-kind\": node.properties.kind,\n    suppressHydrationWarning: true,\n    children: node.children.map((child, index) => /* @__PURE__ */jsx(JsonTreeViewValueNode, {\n      node: child,\n      renderValue\n    }, index))\n  });\n};\nexport { JsonTreeViewValueNode };","map":{"version":3,"names":["jsx","Fragment","JsonTreeViewValueNode","props","node","renderValue","type","_renderValue","children","value","Element","tagName","properties","root","nodeType","kind","suppressHydrationWarning","map","child","index"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@ark-ui/react/dist/components/json-tree-view/json-tree-view-value-node.js"],"sourcesContent":["'use client';\nimport { jsx, Fragment } from 'react/jsx-runtime';\n\nconst JsonTreeViewValueNode = (props) => {\n  const { node, renderValue } = props;\n  if (node.type === \"text\") {\n    return /* @__PURE__ */ jsx(Fragment, { children: renderValue?.(node) ?? node.value });\n  }\n  const Element = node.tagName;\n  return /* @__PURE__ */ jsx(\n    Element,\n    {\n      \"data-root\": node.properties.root ? \"\" : void 0,\n      \"data-type\": node.properties.nodeType,\n      \"data-kind\": node.properties.kind,\n      suppressHydrationWarning: true,\n      children: node.children.map((child, index) => /* @__PURE__ */ jsx(JsonTreeViewValueNode, { node: child, renderValue }, index))\n    }\n  );\n};\n\nexport { JsonTreeViewValueNode };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,EAAEC,QAAQ,QAAQ,mBAAmB;AAEjD,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;EACvC,MAAM;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAGF,KAAK;EACnC,IAAIC,IAAI,CAACE,IAAI,KAAK,MAAM,EAAE;IAAA,IAAAC,YAAA;IACxB,OAAO,eAAgBP,GAAG,CAACC,QAAQ,EAAE;MAAEO,QAAQ,GAAAD,YAAA,GAAEF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAGD,IAAI,CAAC,cAAAG,YAAA,cAAAA,YAAA,GAAIH,IAAI,CAACK;IAAM,CAAC,CAAC;EACvF;EACA,MAAMC,OAAO,GAAGN,IAAI,CAACO,OAAO;EAC5B,OAAO,eAAgBX,GAAG,CACxBU,OAAO,EACP;IACE,WAAW,EAAEN,IAAI,CAACQ,UAAU,CAACC,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;IAC/C,WAAW,EAAET,IAAI,CAACQ,UAAU,CAACE,QAAQ;IACrC,WAAW,EAAEV,IAAI,CAACQ,UAAU,CAACG,IAAI;IACjCC,wBAAwB,EAAE,IAAI;IAC9BR,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK,eAAgBnB,GAAG,CAACE,qBAAqB,EAAE;MAAEE,IAAI,EAAEc,KAAK;MAAEb;IAAY,CAAC,EAAEc,KAAK,CAAC;EAC/H,CACF,CAAC;AACH,CAAC;AAED,SAASjB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}