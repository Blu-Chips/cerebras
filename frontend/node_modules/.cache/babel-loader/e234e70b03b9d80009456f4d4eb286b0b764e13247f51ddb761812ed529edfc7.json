{"ast":null,"code":"function composeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return node => {\n    const cleanUps = [];\n    for (const ref of refs) {\n      if (typeof ref === \"function\") {\n        const cb = ref(node);\n        if (typeof cb === \"function\") {\n          cleanUps.push(cb);\n        }\n      } else if (ref) {\n        ref.current = node;\n      }\n    }\n    if (cleanUps.length) {\n      return () => {\n        for (const cleanUp of cleanUps) {\n          cleanUp();\n        }\n      };\n    }\n  };\n}\nexport { composeRefs };","map":{"version":3,"names":["composeRefs","_len","arguments","length","refs","Array","_key","node","cleanUps","ref","cb","push","current","cleanUp"],"sources":["C:/Users/JAMES/cerebras-1/CerebrasApp/frontend/node_modules/@ark-ui/react/dist/utils/compose-refs.js"],"sourcesContent":["function composeRefs(...refs) {\n  return (node) => {\n    const cleanUps = [];\n    for (const ref of refs) {\n      if (typeof ref === \"function\") {\n        const cb = ref(node);\n        if (typeof cb === \"function\") {\n          cleanUps.push(cb);\n        }\n      } else if (ref) {\n        ref.current = node;\n      }\n    }\n    if (cleanUps.length) {\n      return () => {\n        for (const cleanUp of cleanUps) {\n          cleanUp();\n        }\n      };\n    }\n  };\n}\n\nexport { composeRefs };\n"],"mappings":"AAAA,SAASA,WAAWA,CAAA,EAAU;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAC1B,OAAQC,IAAI,IAAK;IACf,MAAMC,QAAQ,GAAG,EAAE;IACnB,KAAK,MAAMC,GAAG,IAAIL,IAAI,EAAE;MACtB,IAAI,OAAOK,GAAG,KAAK,UAAU,EAAE;QAC7B,MAAMC,EAAE,GAAGD,GAAG,CAACF,IAAI,CAAC;QACpB,IAAI,OAAOG,EAAE,KAAK,UAAU,EAAE;UAC5BF,QAAQ,CAACG,IAAI,CAACD,EAAE,CAAC;QACnB;MACF,CAAC,MAAM,IAAID,GAAG,EAAE;QACdA,GAAG,CAACG,OAAO,GAAGL,IAAI;MACpB;IACF;IACA,IAAIC,QAAQ,CAACL,MAAM,EAAE;MACnB,OAAO,MAAM;QACX,KAAK,MAAMU,OAAO,IAAIL,QAAQ,EAAE;UAC9BK,OAAO,CAAC,CAAC;QACX;MACF,CAAC;IACH;EACF,CAAC;AACH;AAEA,SAASb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}